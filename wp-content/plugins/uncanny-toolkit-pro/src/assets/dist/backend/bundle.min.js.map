{"version":3,"file":"backend/bundle.min.js","mappings":";6BAMgEA,EAAOC,QAG9D,WAAe,aAgBvB,SAASC,EAAUC,EAAQC,GACzBD,EAAOE,MAAM,OAAOC,SAAQC,IAC1BH,EAASG,EAAM,GAEnB,CACA,MAAMC,EACJ,WAAAC,GACEC,KAAKC,aAAU,EACfD,KAAKC,QAAU,CAAC,CAClB,CACA,EAAAC,CAAGT,EAAQU,GACTX,EAAUC,GAAQI,IAChB,MAAMO,EAAcJ,KAAKC,QAAQJ,IAAU,GAC3CO,EAAYC,KAAKF,GACjBH,KAAKC,QAAQJ,GAASO,CAAW,GAErC,CACA,GAAAE,CAAIb,EAAQU,GACV,IAAII,EAAIC,UAAUC,OACR,IAANF,EAIJf,EAAUC,GAAQI,IAChB,GAAU,IAANU,EAEF,mBADOP,KAAKC,QAAQJ,GAGtB,MAAMO,EAAcJ,KAAKC,QAAQJ,QACba,IAAhBN,IACJA,EAAYO,OAAOP,EAAYQ,QAAQT,GAAM,GAC7CH,KAAKC,QAAQJ,GAASO,EAAW,IAXjCJ,KAAKC,QAAU,CAAC,CAapB,CACA,OAAAY,CAAQpB,KAAWqB,GACjB,IAAIC,EAAOf,KACXR,EAAUC,GAAQI,IAChB,MAAMO,EAAcW,EAAKd,QAAQJ,QACba,IAAhBN,GACJA,EAAYR,SAAQO,IAClBA,EAAIa,MAAMD,EAAMD,EAAK,GACrB,GAEN,EAyHF,MAAMG,EAAiBC,IACrBA,EAAQA,EAAMC,OAAOC,UAEXX,OAAS,EACVS,EAAM,IAAM,GAGW,GAAzBG,EAAeH,GAAc,IAAMA,EAAMI,KAAK,IAAM,IAAM,MAAQJ,EAAMI,KAAK,KAAO,IAOvFC,EAAkBC,IACtB,IAAKC,EAAcD,GACjB,OAAOA,EAAMF,KAAK,IAGpB,IAAII,EAAU,GACVC,EAAkB,EAEtB,MAAMC,EAAe,KACfD,EAAkB,IACpBD,GAAW,IAAMC,EAAkB,IACrC,EAcF,OAXAH,EAAM5B,SAAQ,CAACiC,EAAMC,KACfD,IAASL,EAAMM,EAAI,IAKvBF,IACAF,GAAWG,EACXF,EAAkB,GANhBA,GAMiB,IAErBC,IACOF,CAAO,EAUVK,EAAeb,IACnB,IAAIM,EAAQQ,EAAQd,GACpB,OAAOD,EAAeO,EAAM,EAQxBC,EAAgBD,GACb,IAAIS,IAAIT,GAAOU,OAASV,EAAMf,OAQjC0B,EAAeC,IACXA,EAAM,IAAIC,QAAQ,qCAAsC,QAQ5DhB,EAAiBG,GACdA,EAAMc,QAAO,CAACC,EAASC,IAAUC,KAAKC,IAAIH,EAASI,EAAcH,KAAS,GAM7EG,EAAgBP,GACbJ,EAAQI,GAAK3B,OAOhBuB,EAAUY,GAAKC,MAAMC,KAAKF,GAS1BG,EAAgBC,IACpB,GAAqB,IAAjBA,EAAMvC,OAAc,MAAO,CAAC,CAACuC,IAGjC,IAAIC,EAAS,GACb,MAAMC,EAAQF,EAAMG,UAAU,GAU9B,OATaJ,EAAcG,GACtBtD,SAAQ,SAAUwD,GACrB,IAAIC,EAAMD,EAAUE,MAAM,GAC1BD,EAAI,GAAKL,EAAMO,OAAO,GAAKF,EAAI,GAC/BJ,EAAO5C,KAAKgD,GACZA,EAAMD,EAAUE,MAAM,GACtBD,EAAIG,QAAQR,EAAMO,OAAO,IACzBN,EAAO5C,KAAKgD,EACd,IACOJ,CAAM,EAcTQ,EAAc,CAAC,CAAC,EAAG,QAIzB,IAAIC,EAGAC,EACJ,MAGMC,EAAgB,CAAC,EAGjBC,EAAkB,CACtB,IAAK,KACL,EAAK,IACL,EAAK,MACL,GAAM,IACN,GAAM,MACN,GAAM,IACN,GAAM,IACN,GAAM,KACN,GAAM,IACN,EAAK,MACL,EAAK,OACL,EAAK,WACL,EAAK,OACL,EAAK,KACL,EAAK,SACL,EAAK,OACL,EAAK,KACL,EAAK,KACL,EAAK,SACL,EAAK,WACL,EAAK,MACL,EAAK,UACL,EAAK,UACL,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,EAAK,SACL,EAAK,MACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,GAAM,IACN,GAAM,IACN,EAAK,IACL,EAAK,MACL,GAAM,IACN,EAAK,IACL,EAAK,MACL,EAAK,QACL,GAAM,KAGR,IAAK,IAAIC,KAASD,EAAiB,CACjC,IAAIE,EAAUF,EAAgBC,IAAU,GAExC,IAAK,IAAIhC,EAAI,EAAGA,EAAIiC,EAAQtD,OAAQqB,IAAK,CACvC,IAAID,EAAOkC,EAAQZ,UAAUrB,EAAGA,EAAI,GACpC8B,EAAc/B,GAAQiC,CACxB,CACF,CAEA,MAAME,EAAc,IAAIC,OAAOC,OAAOC,KAAKP,GAAetC,KAAK,KAAhC4C,YAAyD,MAkBlFE,EAAY,CAAChC,EAAKiC,EAAO,SAAWjC,EAAIgC,UAAUC,GASlDC,EAAYlC,GACTJ,EAAQI,GAAKE,QAKpB,CAACW,EAAQpB,IACAoB,EAASsB,EAAW1C,IAC1B,IAOC0C,EAAanC,IACjBA,EAAMgC,EAAUhC,GAAKoC,cAAcnC,QAAQ2B,GAE3CnC,GACS+B,EAAc/B,IAAS,KAGzBuC,EAAUhC,EAAK,QA6CxB,MAAMqC,EAAehB,IAEnB,MAAMiB,EAAe,CAAC,EAMhBC,EAAc,CAACC,EAAQC,KAE3B,MAAMC,EAAaJ,EAAaE,IAAW,IAAI3C,IACzC8C,EAAO,IAAId,OAAO,IAAMlC,EAAa+C,GAAc,IAAK,MAE1DD,EAAOG,MAAMD,KAIjBD,EAAWG,IAAI9C,EAAa0C,IAC5BH,EAAaE,GAAUE,EAAU,EAGnC,IAAK,IAAItC,KA1DX,UAAoBiB,GAClB,IAAK,MAAOyB,EAAgBC,KAAmB1B,EAC7C,IAAK,IAAI3B,EAAIoD,EAAgBpD,GAAKqD,EAAgBrD,IAAK,CACrD,IAAIsD,EAAWC,OAAOC,aAAaxD,GAC/B8C,EAASN,EAAUc,GAEnBR,GAAUQ,EAASZ,gBASnBI,EAAOnE,OAnIO,GAuIG,GAAjBmE,EAAOnE,cAIL,CACJmE,OAAQA,EACRQ,SAAUA,EACVG,WAAYzD,IAEhB,CAEJ,CA4BoB0D,CAAU/B,GAC1BkB,EAAYnC,EAAMoC,OAAQpC,EAAMoC,QAChCD,EAAYnC,EAAMoC,OAAQpC,EAAM4C,UAGlC,OAAOV,CAAY,EAUfe,EAAchC,IAElB,MAAMiB,EAAeD,EAAahB,GAG5BC,EAAc,CAAC,EAGrB,IAAIgC,EAAa,GAEjB,IAAK,IAAId,KAAUF,EAAc,CAC/B,IAAIiB,EAAMjB,EAAaE,GAEnBe,IACFjC,EAAYkB,GAAU7C,EAAa4D,IAGjCf,EAAOnE,OAAS,GAClBiF,EAAWrF,KAAK8B,EAAayC,GAEjC,CAEAc,EAAWE,MAAK,CAACC,EAAGC,IAAMA,EAAErF,OAASoF,EAAEpF,SACvC,MAAMsF,EAAkB9E,EAAeyE,GAEvC,OADA/B,EAAiB,IAAIM,OAAO,IAAM8B,EAAiB,KAC5CrC,CAAW,EAuCdsC,EAAsB,CAAC5D,EAAK6D,EAAkB,KAClDA,EAAkBxD,KAAKC,IAAIuD,EAAiB7D,EAAI3B,OAAS,GAClDQ,EAAe8B,EAAcX,GAAK8D,KAAIC,GAhC3B,EAACC,EAASH,EAAkB,KAC9C,IAAII,EAAiB,EASrB,OARAD,EAAUA,EAAQF,KAAI9D,IAChBsB,EAAYtB,KACdiE,GAAkBjE,EAAI3B,QAGjBiD,EAAYtB,IAAQA,KAGzBiE,GAAkBJ,EACb1E,EAAgB6E,GAGlB,EAAE,EAmBAE,CAAYH,EAASF,OAW1BM,EAAqB,CAACC,EAAWC,GAAM,KAC3C,IAAIR,EAAkBO,EAAU/F,OAAS,EAAI,EAAI,EACjD,OAAOQ,EAAeuF,EAAUN,KAAIQ,IAClC,IAAIC,EAAM,GACV,MAAMC,EAAMH,EAAMC,EAASjG,SAAWiG,EAASjG,SAAW,EAE1D,IAAK,IAAIoG,EAAI,EAAGA,EAAID,EAAKC,IACvBF,EAAItG,KAAK2F,EAAoBU,EAASI,QAAQD,IAAM,GAAIZ,IAG1D,OAAO1E,EAAgBoF,EAAI,IAC1B,EASCI,EAAc,CAACC,EAAYR,KAC/B,IAAK,MAAMG,KAAOH,EAAW,CAC3B,GAAIG,EAAIzD,OAAS8D,EAAW9D,OAASyD,EAAIM,KAAOD,EAAWC,IACzD,SAGF,GAAIN,EAAIG,QAAQxF,KAAK,MAAQ0F,EAAWF,QAAQxF,KAAK,IACnD,SAGF,IAAI4F,EAAeF,EAAWG,MAK9B,MAAMhG,EAASiG,IACb,IAAK,MAAMC,KAAeH,EAAc,CACtC,GAAIG,EAAYnE,QAAUkE,EAAKlE,OAASmE,EAAYC,SAAWF,EAAKE,OAClE,OAAO,EAGT,GAAmB,GAAfF,EAAK3G,QAAqC,GAAtB4G,EAAY5G,OAApC,CASA,GAAI2G,EAAKlE,MAAQmE,EAAYnE,OAASkE,EAAKH,IAAMI,EAAYnE,MAC3D,OAAO,EAGT,GAAImE,EAAYnE,MAAQkE,EAAKlE,OAASmE,EAAYJ,IAAMG,EAAKlE,MAC3D,OAAO,CAZT,CAcF,CAEA,OAAO,CAAK,EAKd,KAFeyD,EAAIQ,MAAMhG,OAAOA,GAEnBV,OAAS,GAItB,OAAO,CACT,CAEA,OAAO,CAAK,EAGd,MAAM8G,EACJ,WAAAxH,GAEEC,KAAKmH,MAAQ,GAGbnH,KAAK8G,QAAU,GACf9G,KAAKkD,MAAQ,EACblD,KAAKiH,IAAM,CACb,CAMA,GAAAhC,CAAImC,GACEA,IACFpH,KAAKmH,MAAM9G,KAAK+G,GAChBpH,KAAK8G,QAAQzG,KAAK+G,EAAKE,QACvBtH,KAAKkD,MAAQT,KAAK+E,IAAIJ,EAAKlE,MAAOlD,KAAKkD,OACvClD,KAAKiH,IAAMxE,KAAKC,IAAI0E,EAAKH,IAAKjH,KAAKiH,KAEvC,CAEA,IAAAQ,GACE,OAAOzH,KAAKmH,MAAMnH,KAAKmH,MAAM1G,OAAS,EACxC,CAEA,MAAAA,GACE,OAAOT,KAAKmH,MAAM1G,MACpB,CAOA,KAAAiH,CAAMC,EAAUC,GACd,IAAIF,EAAQ,IAAIH,EACZJ,EAAQU,KAAKC,MAAMD,KAAKE,UAAU/H,KAAKmH,QACvCa,EAAYb,EAAMc,MAEtB,IAAK,MAAMb,KAAQD,EACjBO,EAAMzC,IAAImC,GAGZ,IAAIc,EAAcN,EAAWN,OAAOnE,UAAU,EAAGwE,EAAWK,EAAU9E,OAClEiF,EAAiBD,EAAYzH,OAOjC,OANAiH,EAAMzC,IAAI,CACR/B,MAAO8E,EAAU9E,MACjB+D,IAAKe,EAAU9E,MAAQiF,EACvB1H,OAAQ0H,EACRb,OAAQY,IAEHR,CACT,EAoBF,MAAMU,EAAahG,IA9VAiG,WACG3H,IAAhBgD,IACJA,EAAc+B,EAAY4C,GAAgB5E,IA8V1CrB,EAAMkC,EAAUlC,GAChB,IAAIV,EAAU,GACV8E,EAAY,CAAC,IAAIe,GAErB,IAAK,IAAIzF,EAAI,EAAGA,EAAIM,EAAI3B,OAAQqB,IAAK,CACnC,IACIkD,EADS5C,EAAIe,UAAUrB,GACRkD,MAAMrB,GACzB,MAAM9B,EAAOO,EAAIe,UAAUrB,EAAGA,EAAI,GAC5BwG,EAAYtD,EAAQA,EAAM,GAAK,KAGrC,IAAIuD,EAAc,GACdC,EAAc,IAAIvG,IAEtB,IAAK,MAAMyE,KAAYF,EAAW,CAChC,MAAMoB,EAAalB,EAASe,OAE5B,IAAKG,GAAmC,GAArBA,EAAWnH,QAAemH,EAAWX,KAAOnF,EAE7D,GAAIwG,EAAW,CACb,MAAM1B,EAAM0B,EAAU7H,OACtBiG,EAASzB,IAAI,CACX/B,MAAOpB,EACPmF,IAAKnF,EAAI8E,EACTnG,OAAQmG,EACRU,OAAQgB,IAEVE,EAAYvD,IAAI,IAClB,MACEyB,EAASzB,IAAI,CACX/B,MAAOpB,EACPmF,IAAKnF,EAAI,EACTrB,OAAQ,EACR6G,OAAQzF,IAEV2G,EAAYvD,IAAI,UAEb,GAAIqD,EAAW,CACpB,IAAIZ,EAAQhB,EAASgB,MAAM5F,EAAG8F,GAC9B,MAAMhB,EAAM0B,EAAU7H,OACtBiH,EAAMzC,IAAI,CACR/B,MAAOpB,EACPmF,IAAKnF,EAAI8E,EACTnG,OAAQmG,EACRU,OAAQgB,IAEVC,EAAYlI,KAAKqH,EACnB,MAGEc,EAAYvD,IAAI,IAEpB,CAGA,GAAIsD,EAAY9H,OAAS,EAAzB,CAEE8H,EAAcA,EAAY3C,MAAK,CAACC,EAAGC,IAC1BD,EAAEpF,SAAWqF,EAAErF,WAGxB,IAAK,IAAIiH,KAASa,EAEZxB,EAAYW,EAAOlB,IAIvBA,EAAUnG,KAAKqH,EAInB,MAMA,GAAI5F,EAAI,GAAyB,GAApB0G,EAAYtG,OAAcsG,EAAYC,IAAI,KAAM,CAC3D/G,GAAW6E,EAAmBC,GAAW,GACzC,IAAIkC,EAAU,IAAInB,EAClB,MAAMoB,EAAUnC,EAAU,GAEtBmC,GACFD,EAAQzD,IAAI0D,EAAQlB,QAGtBjB,EAAY,CAACkC,EACf,CACF,CAGA,OADAhH,GAAW6E,EAAmBC,GAAW,GAClC9E,CAAO,EAWVkH,EAAU,CAACC,EAAKC,KACpB,GAAKD,EACL,OAAOA,EAAIC,EAAK,EASZC,EAAiB,CAACF,EAAKC,KAC3B,GAAKD,EAAL,CAIA,IAHA,IAAIzB,EACA4B,EAAQF,EAAKnJ,MAAM,MAEfyH,EAAO4B,EAAMC,WAAaJ,EAAMA,EAAIzB,MAE5C,OAAOyB,CANS,CAMN,EAQNK,EAAa,CAAC1G,EAAO2G,EAAOC,KAChC,IAAIC,EAAOC,EACX,OAAK9G,GACLA,GAAgB,GACG,MAAf2G,EAAMI,QAEG,KADbD,EAAM9G,EAAMgH,OAAOL,EAAMI,QADO,GAGhCF,EAAQF,EAAMM,OAAOhJ,OAAS+B,EAAM/B,OACxB,IAAR6I,IAAWD,GAAS,IACjBA,EAAQD,IAPI,CAOE,EAOjBM,EAAc,CAACb,EAAKc,KACxB,IAAInH,EAAQqG,EAAIc,GAChB,GAAoB,mBAATnH,EAAqB,OAAOA,EAEnCA,IAAUK,MAAM+G,QAAQpH,KAC1BqG,EAAIc,GAAO,CAACnH,GACd,EAaIqH,EAAY,CAACC,EAAQpK,KACzB,GAAImD,MAAM+G,QAAQE,GAChBA,EAAOlK,QAAQF,QAEf,IAAK,IAAIiK,KAAOG,EACVA,EAAOC,eAAeJ,IACxBjK,EAASoK,EAAOH,GAAMA,EAG5B,EAEIK,EAAM,CAACnE,EAAGC,IACG,iBAAND,GAA+B,iBAANC,EAC3BD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,GAGlCD,EAAIvB,EAAUuB,EAAI,IAAIrB,gBACtBsB,EAAIxB,EAAUwB,EAAI,IAAItB,eACJ,EACdsB,EAAID,GAAW,EACZ,EAqBT,MAAMoE,EASJ,WAAAlK,CAAYmK,EAAOC,GACjBnK,KAAKkK,WAAQ,EACblK,KAAKmK,cAAW,EAChBnK,KAAKkK,MAAQA,EACblK,KAAKmK,SAAWA,GAAY,CAC1BC,YAAY,EAEhB,CAOA,QAAAC,CAASC,EAAOC,EAAyBC,GACvC,IAAKF,IAAUA,EAAM7J,OAAQ,MAAO,GACpC,MAAMgK,EAAS,GACTC,EAAQJ,EAAM3K,MAAM,OAC1B,IAAIgL,EAgCJ,OA9BIH,IACFG,EAAc,IAAI1G,OAAO,KAAOC,OAAOC,KAAKqG,GAAStE,IAAI/D,GAAcb,KAAK,KAAO,YAGrFoJ,EAAM9K,SAAQgL,IACZ,IAAIC,EACAC,EAAQ,KACRvB,EAAQ,KAERoB,IAAgBE,EAAcD,EAAK5F,MAAM2F,MAC3CG,EAAQD,EAAY,GACpBD,EAAOC,EAAY,IAGjBD,EAAKnK,OAAS,IAEd8I,EADEvJ,KAAKmK,SAASC,WACRhC,EAAWwC,IAAS,KAEpBzI,EAAayI,GAGnBrB,GAASgB,IAAyBhB,EAAQ,MAAQA,IAGxDkB,EAAOpK,KAAK,CACVoJ,OAAQmB,EACRrB,MAAOA,EAAQ,IAAItF,OAAOsF,EAAO,MAAQ,KACzCuB,MAAOA,GACP,IAEGL,CACT,CAUA,gBAAAM,CAAiBT,EAAOU,GACtB,IAAIxB,EAASxJ,KAAKiL,cAAcX,EAAOU,GACvC,OAAOhL,KAAKkL,kBAAkB1B,EAChC,CAOA,iBAAA0B,CAAkB1B,GAChB,MAAMiB,EAASjB,EAAOiB,OAChBU,EAAcV,EAAOhK,OAE3B,IAAK0K,EACH,OAAO,WACL,OAAO,CACT,EAGF,MAAMC,EAAS5B,EAAOwB,QAAQI,OACxBZ,EAAUhB,EAAOgB,QACjBa,EAAcD,EAAO3K,OACrB6K,EAAY9B,EAAO8B,UAEzB,IAAKD,EACH,OAAO,WACL,OAAO,CACT,EASF,MAAME,EACgB,IAAhBF,EACK,SAAUlC,EAAOqC,GACtB,MAAMV,EAAQM,EAAO,GAAGN,MACxB,OAAO5B,EAAWoC,EAAUE,EAAMV,GAAQ3B,EAAOqB,EAAQM,IAAU,EACrE,EAGK,SAAU3B,EAAOqC,GACtB,IAAIC,EAAM,EAEV,GAAItC,EAAM2B,MAAO,CACf,MAAMtI,EAAQ8I,EAAUE,EAAMrC,EAAM2B,QAE/B3B,EAAMI,OAAS/G,EAClBiJ,GAAO,EAAIJ,EAEXI,GAAOvC,EAAW1G,EAAO2G,EAAO,EAEpC,MACEU,EAAUW,GAAS,CAACpB,EAAQ0B,KAC1BW,GAAOvC,EAAWoC,EAAUE,EAAMV,GAAQ3B,EAAOC,EAAO,IAI5D,OAAOqC,EAAMJ,CACf,EAGF,OAAoB,IAAhBF,EACK,SAAUK,GACf,OAAOD,EAAYd,EAAO,GAAIe,EAChC,EAGiC,QAA/BhC,EAAOwB,QAAQU,YACV,SAAUF,GACf,IAAInC,EACAoC,EAAM,EAEV,IAAK,IAAItC,KAASsB,EAAQ,CAExB,IADApB,EAAQkC,EAAYpC,EAAOqC,KACd,EAAG,OAAO,EACvBC,GAAOpC,CACT,CAEA,OAAOoC,EAAMN,CACf,EAEO,SAAUK,GACf,IAAIC,EAAM,EAIV,OAHA5B,EAAUY,GAAQtB,IAChBsC,GAAOF,EAAYpC,EAAOqC,EAAK,IAE1BC,EAAMN,CACf,CAEJ,CASA,eAAAQ,CAAgBrB,EAAOU,GACrB,IAAIxB,EAASxJ,KAAKiL,cAAcX,EAAOU,GACvC,OAAOhL,KAAK4L,iBAAiBpC,EAC/B,CAEA,gBAAAoC,CAAiBpC,GACf,IAAIqC,EACAC,EAAY,GAChB,MAAM/K,EAAOf,KACPgL,EAAUxB,EAAOwB,QACjBpF,GAAQ4D,EAAOc,OAASU,EAAQe,WAAaf,EAAQe,WAAaf,EAAQpF,KAEhF,GAAmB,mBAARA,EACT,OAAOA,EAAKoG,KAAKhM,MASnB,MAAMiM,EAAY,SAAmBnD,EAAM7F,GACzC,MAAa,WAAT6F,EAA0B7F,EAAOoG,MAC9BG,EAAO8B,UAAUvK,EAAKmJ,MAAMjH,EAAOiJ,IAAKpD,EACjD,EAGA,GAAIlD,EACF,IAAK,IAAIuG,KAAKvG,GACR4D,EAAOc,OAAqB,WAAZ6B,EAAErB,QACpBgB,EAAUzL,KAAK8L,GAOrB,GAAI3C,EAAOc,MAAO,CAChBuB,GAAiB,EAEjB,IAAK,IAAIO,KAAON,EACd,GAAkB,WAAdM,EAAItB,MAAoB,CAC1Be,GAAiB,EACjB,KACF,CAGEA,GACFC,EAAUtI,QAAQ,CAChBsH,MAAO,SACPuB,UAAW,QAIjB,MACEP,EAAYA,EAAU3K,QAAOiL,GAAqB,WAAdA,EAAItB,QAM1C,OAFwBgB,EAAUrL,OAM3B,SAAUoF,EAAGC,GAClB,IAAI7C,EAAQ6H,EAEZ,IAAK,IAAIwB,KAAYR,EAInB,GAHAhB,EAAQwB,EAASxB,MAEjB7H,GADwC,SAAvBqJ,EAASD,WAAwB,EAAI,GAChCrC,EAAIiC,EAAUnB,EAAOjF,GAAIoG,EAAUnB,EAAOhF,IACpD,OAAO7C,EAGrB,OAAO,CACT,EAdS,IAeX,CAQA,aAAAgI,CAAcX,EAAOiC,GACnB,MAAM/B,EAAU,CAAC,EACjB,IAAIQ,EAAU9G,OAAOsI,OAAO,CAAC,EAAGD,GAIhC,GAHA7C,EAAYsB,EAAS,QACrBtB,EAAYsB,EAAS,cAEjBA,EAAQI,OAAQ,CAClB1B,EAAYsB,EAAS,UACrB,MAAMI,EAAS,GACfJ,EAAQI,OAAOxL,SAAQkL,IACD,iBAATA,IACTA,EAAQ,CACNA,MAAOA,EACP1B,OAAQ,IAIZgC,EAAO/K,KAAKyK,GACZN,EAAQM,EAAMA,OAAS,WAAYA,EAAQA,EAAM1B,OAAS,CAAC,IAE7D4B,EAAQI,OAASA,CACnB,CAEA,MAAO,CACLJ,QAASA,EACTV,MAAOA,EAAM9F,cAAciI,OAC3BhC,OAAQzK,KAAKqK,SAASC,EAAOU,EAAQT,wBAAyBC,GAC9DkC,MAAO,EACPxC,MAAO,GACPM,QAASA,EACTc,UAAWN,EAAQ2B,QAAU5D,EAAiBH,EAElD,CAMA,MAAAY,CAAOc,EAAOU,GACZ,IACI3B,EACAG,EAFAzI,EAAOf,KAGXwJ,EAASxJ,KAAKiL,cAAcX,EAAOU,GACnCA,EAAUxB,EAAOwB,QACjBV,EAAQd,EAAOc,MAEf,MAAMsC,EAAW5B,EAAQ3B,OAAStI,EAAKmK,kBAAkB1B,GAGrDc,EAAM7J,OACRoJ,EAAU9I,EAAKmJ,OAAO,CAAC2C,EAAMX,KAC3B7C,EAAQuD,EAASC,KAEM,IAAnB7B,EAAQ7J,QAAoBkI,EAAQ,IACtCG,EAAOU,MAAM7J,KAAK,CAChB,MAASgJ,EACT,GAAM6C,GAEV,IAGFrC,EAAU9I,EAAKmJ,OAAO,CAAC4C,EAAGZ,KACxB1C,EAAOU,MAAM7J,KAAK,CAChB,MAAS,EACT,GAAM6L,GACN,IAIN,MAAMa,EAAUhM,EAAK6K,iBAAiBpC,GAUtC,OARIuD,GAASvD,EAAOU,MAAMtE,KAAKmH,GAE/BvD,EAAOkD,MAAQlD,EAAOU,MAAMzJ,OAEC,iBAAlBuK,EAAQgC,QACjBxD,EAAOU,MAAQV,EAAOU,MAAM5G,MAAM,EAAG0H,EAAQgC,QAGxCxD,CACT,EAcF,MAAMyD,EAAU,CAACnD,EAAQpK,KACvB,GAAImD,MAAM+G,QAAQE,GAChBA,EAAOlK,QAAQF,QAEf,IAAK,IAAIiK,KAAOG,EACVA,EAAOC,eAAeJ,IACxBjK,EAASoK,EAAOH,GAAMA,EAG5B,EASIuD,EAAS5C,IACb,GAAIA,EAAM6C,OACR,OAAO7C,EAAM,GAEf,GAAIA,aAAiB8C,YACnB,OAAO9C,EAET,GAAI+C,EAAa/C,GAAQ,CACvB,IAAIgD,EAAMC,SAASC,cAAc,YAEjC,OADAF,EAAIG,UAAYnD,EAAMmC,OACfa,EAAII,QAAQC,UACrB,CACA,OAAOJ,SAASK,cAActD,EAAM,EAEhC+C,EAAeQ,GACA,iBAARA,GAAoBA,EAAIjN,QAAQ,MAAQ,EAa/CkN,EAAe,CAACC,EAAQC,KAC5B,IAAInO,EAAQ0N,SAASU,YAAY,cACjCpO,EAAMqO,UAAUF,GAAY,GAAM,GAClCD,EAAOI,cAActO,EAAM,EAOvBuO,EAAW,CAACL,EAAQM,KACxBnK,OAAOsI,OAAOuB,EAAOO,MAAOD,EAAI,EAO5BE,EAAa,CAACC,KAAUC,KAC5B,IAAIC,EAAeC,EAAaF,IAChCD,EAAQI,EAAYJ,IACdtI,KAAI2I,IACRH,EAAaxI,KAAI4I,IACfD,EAAGE,UAAU9J,IAAI6J,EAAI,GACrB,GACF,EAOEE,EAAgB,CAACR,KAAUC,KAC/B,IAAIC,EAAeC,EAAaF,IAChCD,EAAQI,EAAYJ,IACdtI,KAAI2I,IACRH,EAAaxI,KAAI4I,IACfD,EAAGE,UAAUE,OAAOH,EAAI,GACxB,GACF,EAOEH,EAAe7N,IACnB,IAAI2N,EAAU,GASd,OARAxB,EAAQnM,GAAMoO,IACY,iBAAbA,IACTA,EAAWA,EAASzC,OAAO9M,MAAM,sBAE/BkD,MAAM+G,QAAQsF,KAChBT,EAAUA,EAAQU,OAAOD,GAC3B,IAEKT,EAAQtN,OAAOC,QAAQ,EAO1BwN,EAAcf,IACbhL,MAAM+G,QAAQiE,KACjBA,EAAM,CAACA,IAEFA,GAQHuB,EAAc,CAACC,EAAQC,EAAUC,KACrC,IAAIA,GAAYA,EAAQC,SAASH,GAGjC,KAAOA,GAAUA,EAAOI,SAAS,CAC/B,GAAIJ,EAAOI,QAAQH,GACjB,OAAOD,EAETA,EAASA,EAAOK,UAClB,GAUIC,EAAU,CAACC,EAAMvD,EAAY,IAC7BA,EAAY,EACPuD,EAAKA,EAAKnP,OAAS,GAErBmP,EAAK,GAeRC,EAAY,CAAChB,EAAIiB,KACrB,IAAKjB,EAAI,OAAQ,EACjBiB,EAAUA,GAAWjB,EAAGkB,SAExB,IADA,IAAIjO,EAAI,EACD+M,EAAKA,EAAGmB,wBACTnB,EAAGY,QAAQK,IACbhO,IAGJ,OAAOA,CAAC,EAOJmO,EAAU,CAACpB,EAAIqB,KACnBjD,EAAQiD,GAAO,CAACC,EAAKC,KACR,MAAPD,EACFtB,EAAGwB,gBAAgBD,GAEnBvB,EAAGyB,aAAaF,EAAM,GAAKD,EAC7B,GACA,EAMEI,EAAc,CAACC,EAAUC,KACzBD,EAASd,YAAYc,EAASd,WAAWgB,aAAaD,EAAaD,EAAS,EAW5EG,EAAY,CAACC,EAASrH,KAC1B,GAAc,OAAVA,EAAgB,OAGpB,GAAqB,iBAAVA,EAAoB,CAC7B,IAAKA,EAAM9I,OAAQ,OACnB8I,EAAQ,IAAItF,OAAOsF,EAAO,IAC5B,CAIA,MAwBMsH,EAAqBC,GACH,IAAlBA,EAAKC,SAzBWD,KACpB,IAAI9L,EAAQ8L,EAAKtF,KAAKxG,MAAMuE,GAC5B,GAAIvE,GAAS8L,EAAKtF,KAAK/K,OAAS,EAAG,CACjC,IAAIuQ,EAAWzD,SAASC,cAAc,QACtCwD,EAASC,UAAY,YACrB,IAAIC,EAAYJ,EAAKK,UAAUnM,EAAMoM,OACrCF,EAAUC,UAAUnM,EAAM,GAAGvE,QAC7B,IAAI4Q,EAAcH,EAAUI,WAAU,GAGtC,OAFAN,EAASO,YAAYF,GACrBd,EAAYW,EAAWF,GAChB,CACT,CACA,OAAO,CAAC,EAcCQ,CAAcV,IATCA,KACF,IAAlBA,EAAKC,WAAkBD,EAAKW,YAAe,kBAAkBC,KAAKZ,EAAKa,UAAgC,cAAnBb,EAAKG,WAA8C,SAAjBH,EAAKa,SAC7H9O,MAAMC,KAAKgO,EAAKW,YAAY7R,SAAQgR,IAClCC,EAAmBD,EAAQ,GAE/B,EAMAgB,CAAkBd,GACX,GAETD,EAAmBD,EAAQ,EA2BvBiB,EAD8B,oBAAdC,WAAoC,MAAMJ,KAAKI,UAAUC,WACjD,UAAY,UAE1C,IAAIC,EAAW,CACbhH,QAAS,GACTiH,UAAW,GACXC,QAAS,GACTC,UAAW,IACXC,QAAS,KAETC,SAAS,EACTjI,YAAY,EACZkI,OAAQ,KACRC,cAAc,EACdC,aAAc,KACd7B,WAAW,EACX8B,aAAa,EACbC,WAAY,KACZC,WAAY,GACZC,SAAU,KACVC,aAAc,KACdC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,QAAS,KACTC,kBAAkB,EAElBC,gBAAiB,IACjBC,aAAc,IACdC,aAAc,UACdC,SAAU,KAEVC,cAAe,WACfC,WAAY,QACZC,WAAY,OACZC,cAAe,WACfC,mBAAoB,QACpBC,mBAAoB,QACpBC,mBAAmB,EACnBC,UAAW,SACXC,YAAa,CAAC,QACdC,kBAAmB,MACnBC,KAAM,KACNC,aAAc,aACdC,aAAc,aACdC,cAAe,cACfC,qBAAsB,sBACtBC,UAAW,OACXC,YAAa,SACbC,eAAgB,KAChBC,aAAc,oDACdC,uBAAuB,EACvBC,YAAa,KACbC,gBAAiB,KACjBC,WAAY,SAAUvK,GACpB,OAAOA,EAAM7J,OAAS,CACxB,EAqBAqU,OAAQ,CAQR,GAiBF,MAAMC,EAAWvS,GACX,MAAOA,EAAgD,KACpDwS,EAASxS,GAEZwS,EAAWxS,GACM,kBAAVA,EAA4BA,EAAQ,IAAM,IAC9CA,EAAQ,GAOXyS,EAAc7S,IACVA,EAAM,IAAIC,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAkB/F6S,GAAe,CAACC,EAAIC,KACxB,IAAIC,EACJ,OAAO,SAAU7S,EAAO9C,GACtB,IAAIqB,EAAOf,KACPqV,IACFtU,EAAKuU,QAAU7S,KAAKC,IAAI3B,EAAKuU,QAAU,EAAG,GAC1CC,aAAaF,IAEfA,EAAUG,YAAW,WACnBH,EAAU,KACVtU,EAAK0U,eAAejT,IAAS,EAC7B2S,EAAGO,KAAK3U,EAAMyB,EAAO9C,EACvB,GAAG0V,EACL,CAAC,EAQGO,GAAkB,CAAC5U,EAAM6U,EAAOT,KACpC,IAAIU,EACAhV,EAAUE,EAAKF,QACfiV,EAAa,CAAC,EAiBlB,IAAKD,KAdL9U,EAAKF,QAAU,WACb,IAAIgV,EAAOrV,UAAU,GACrB,IAA6B,IAAzBoV,EAAMhV,QAAQiV,GAGhB,OAAOhV,EAAQG,MAAMD,EAAMP,WAF3BsV,EAAWD,GAAQrV,SAIvB,EAGA2U,EAAGnU,MAAMD,EAAM,IACfA,EAAKF,QAAUA,EAGF+U,GACPC,KAAQC,GACVjV,EAAQG,MAAMD,EAAM+U,EAAWD,GAEnC,EAuBIE,GAAiB,CAACC,EAAKC,GAAO,KAC9BD,IACFA,EAAID,iBACAE,GACFD,EAAIE,kBAER,EAOIC,GAAW,CAAC9G,EAAQwG,EAAMnW,EAAUsL,KACxCqE,EAAO+G,iBAAiBP,EAAMnW,EAAUsL,EAAQ,EAS5CqL,GAAY,CAACC,EAAUN,MACtBA,KAGAA,EAAIM,IAIK,IADDN,EAAIO,OAAS,EAAI,IAAMP,EAAIQ,QAAU,EAAI,IAAMR,EAAIS,SAAW,EAAI,IAAMT,EAAIU,QAAU,EAAI,GAYnGC,GAAQ,CAAC9H,EAAI3C,IACG2C,EAAG+H,aAAa,QAIpC/H,EAAGyB,aAAa,KAAMpE,GACfA,GAMH2K,GAAazU,GACVA,EAAIC,QAAQ,UAAW,QAM1ByU,GAAS,CAACC,EAAQjG,KAClBA,GAAMiG,EAAOD,OAAOhG,EAAK,EAG/B,SAASkG,GAAYhU,EAAOiU,GAC1B,IAAI9M,EAAWjG,OAAOsI,OAAO,CAAC,EAAGwF,EAAUiF,GACvCC,EAAY/M,EAASmJ,SACrB6D,EAAchN,EAASsJ,WACvB2D,EAAcjN,EAASqJ,WACvB6D,EAAiBlN,EAASuJ,cAC1B4D,EAAiBnN,EAASoJ,cAC1BgE,EAAuBpN,EAASwJ,mBAChC6D,EAAuBrN,EAASyJ,mBAChC6D,EAAWzU,EAAM2O,QAAQnN,cACzBmQ,EAAc3R,EAAM4T,aAAa,gBAAkB5T,EAAM4T,aAAa,oBAC1E,IAAKjC,IAAgBxK,EAAS+I,iBAAkB,CAC9C,IAAIwE,EAAS1U,EAAM4K,cAAc,oBAC7B8J,IACF/C,EAAc+C,EAAOC,YAEzB,CACA,IAAIC,EAAmB,CACrBjD,YAAaA,EACb3J,QAAS,GACTiH,UAAW,GACX/H,MAAO,GACP0I,SAAU,MA6GZ,MALiB,WAAb6E,EAjGc,MAChB,IAAI9F,EACA3G,EAAU4M,EAAiB5M,QAC3B6M,EAAa,CAAC,EACdC,EAAc,EAClB,IAAIC,EAAS,EACb,IAAIC,EAAWnJ,IACb,IAAIrD,EAAOtH,OAAOsI,OAAO,CAAC,EAAGqC,EAAGoJ,SAC5BC,EAAOhB,GAAa1L,EAAK0L,GAI7B,MAHoB,iBAATgB,GAAqBA,EAAKzX,SACnC+K,EAAOtH,OAAOsI,OAAOhB,EAAM3D,KAAKC,MAAMoQ,KAEjC1M,CAAI,EAET2M,EAAY,CAACT,EAAQU,KACvB,IAAI5V,EAAQuS,EAAS2C,EAAOlV,OAC5B,GAAa,MAATA,IACCA,GAAU2H,EAAS+I,kBAAxB,CAMA,GAAI2E,EAAW9N,eAAevH,IAC5B,GAAI4V,EAAO,CACT,IAAIC,EAAMR,EAAWrV,GAAO8U,GACvBe,EAEOxV,MAAM+G,QAAQyO,GAGxBA,EAAIhY,KAAK+X,GAFTP,EAAWrV,GAAO8U,GAAkB,CAACe,EAAKD,GAF1CP,EAAWrV,GAAO8U,GAAkBc,CAMxC,MACK,CACL,IAAIE,EAAcN,EAASN,GAC3BY,EAAYnB,GAAemB,EAAYnB,IAAgBO,EAAOC,YAC9DW,EAAYlB,GAAekB,EAAYlB,IAAgB5U,EACvD8V,EAAYjB,GAAkBiB,EAAYjB,IAAmBK,EAAOa,SACpED,EAAYhB,GAAkBgB,EAAYhB,IAAmBc,EAC7DE,EAAYE,QAAUd,EACtBY,EAAYP,OAASO,EAAYP,UAAYA,EAC7CF,EAAWrV,GAAS8V,EACpBtN,EAAQ3K,KAAKiY,EACf,CACIZ,EAAOe,UACTb,EAAiB1N,MAAM7J,KAAKmC,EA7BkB,CA8BhD,EAeFoV,EAAiBhF,SAAW5P,EAAM0V,aAAa,YAAc,KAAO,EACpEzL,EAAQjK,EAAM2V,UAAUC,IAdTC,MACT3M,EAAI4M,EAeQ,cADhBnH,EAAUiH,EAAMjH,QAAQnN,iBAbxBsU,EAAgBd,EAFHa,EAiBFD,IAdGrB,GAAwBuB,EAAcvB,IAAyBsB,EAASjC,aAAa,UAAY,GAC/GkC,EAActB,GAAwBsB,EAActB,IAAyBM,IAC7EgB,EAAczB,GAAkByB,EAAczB,IAAmBwB,EAASN,SAC1EO,EAAcf,OAASe,EAAcf,UAAYA,EACjDH,EAAiB3F,UAAU5R,KAAKyY,GAChC5M,EAAK4M,EAActB,GACnBvK,EAAQ4L,EAASF,UAAUjB,IACzBS,EAAUT,EAAQxL,EAAG,KAQA,WAAZyF,GACTwG,EAAUS,EACZ,GACA,EA4BFG,GArBiB,MACjB,MAAMC,EAAWhW,EAAM4T,aAAaM,GACpC,GAAK8B,EAYHpB,EAAiB5M,QAAUnD,KAAKC,MAAMkR,GACtC/L,EAAQ2K,EAAiB5M,SAASiO,IAChCrB,EAAiB1N,MAAM7J,KAAK4Y,EAAI7B,GAAa,QAdlC,CACb,IAAI5U,EAAQQ,EAAMR,MAAMiK,QAAU,GAClC,IAAKtC,EAAS+I,mBAAqB1Q,EAAM/B,OAAQ,OACjD,MAAMyY,EAAS1W,EAAM7C,MAAMwK,EAASgI,WACpClF,EAAQiM,GAAQ1W,IACd,MAAMkV,EAAS,CAAC,EAChBA,EAAOP,GAAe3U,EACtBkV,EAAON,GAAe5U,EACtBoV,EAAiB5M,QAAQ3K,KAAKqX,EAAO,IAEvCE,EAAiB1N,MAAQgP,CAC3B,CAKA,EAKAC,GAEKjV,OAAOsI,OAAO,CAAC,EAAGwF,EAAU4F,EAAkBX,EACvD,CAEA,IAAImC,GAAa,EACjB,MAAMC,WA71DN,SAAqBC,GAEnB,OADAA,EAAUpH,QAAU,CAAC,EACd,cAAcoH,EACnB,WAAAvZ,IAAee,GACbyY,SAASzY,GACTd,KAAKkS,QAAU,CACblJ,MAAO,GACPmB,SAAU,CAAC,EACXqP,UAAW,CAAC,EACZC,OAAQ,CAAC,EAEb,CAMA,aAAOC,CAAO5Q,EAAMqM,GAClBmE,EAAUpH,QAAQpJ,GAAQ,CACxB,KAAQA,EACR,GAAMqM,EAEV,CAiBA,iBAAAwE,CAAkBzH,GAChB,IAAIvI,EAAKb,EACT,MAAM/H,EAAOf,KACP4Z,EAAQ,GACd,GAAI/W,MAAM+G,QAAQsI,GAChBA,EAAQtS,SAAQia,IACQ,iBAAXA,EACTD,EAAMvZ,KAAKwZ,IAEX9Y,EAAKmR,QAAQ/H,SAAS0P,EAAO/Q,MAAQ+Q,EAAO7O,QAC5C4O,EAAMvZ,KAAKwZ,EAAO/Q,MACpB,SAEG,GAAIoJ,EACT,IAAKvI,KAAOuI,EACNA,EAAQnI,eAAeJ,KACzB5I,EAAKmR,QAAQ/H,SAASR,GAAOuI,EAAQvI,GACrCiQ,EAAMvZ,KAAKsJ,IAIjB,KAAOb,EAAO8Q,EAAM3Q,SAClBlI,EAAK+Y,QAAQhR,EAEjB,CACA,UAAAiR,CAAWjR,GACT,IAAI/H,EAAOf,KACPkS,EAAUnR,EAAKmR,QACf2H,EAASP,EAAUpH,QAAQpJ,GAC/B,IAAKwQ,EAAUpH,QAAQnI,eAAejB,GACpC,MAAM,IAAIkR,MAAM,mBAAqBlR,EAAO,YAE9CoJ,EAAQsH,UAAU1Q,IAAQ,EAC1BoJ,EAAQuH,OAAO3Q,GAAQ+Q,EAAO1E,GAAGnU,MAAMD,EAAM,CAACA,EAAKmR,QAAQ/H,SAASrB,IAAS,CAAC,IAC9EoJ,EAAQlJ,MAAM3I,KAAKyI,EACrB,CAMA,OAAAgR,CAAQhR,GACN,IAAI/H,EAAOf,KACPkS,EAAUnR,EAAKmR,QACnB,IAAKnR,EAAKmR,QAAQuH,OAAO1P,eAAejB,GAAO,CAC7C,GAAIoJ,EAAQsH,UAAU1Q,GACpB,MAAM,IAAIkR,MAAM,oCAAsClR,EAAO,MAE/D/H,EAAKgZ,WAAWjR,EAClB,CACA,OAAOoJ,EAAQuH,OAAO3Q,EACxB,EAEJ,CAiwDwBmR,CAAYna,IAClC,WAAAC,CAAYma,EAAWC,GA4CrB,IAAIC,EA3CJb,QACAvZ,KAAKqa,mBAAgB,EACrBra,KAAKuP,aAAU,EACfvP,KAAKsa,cAAW,EAChBta,KAAKua,aAAU,EACfva,KAAKwa,sBAAmB,EACxBxa,KAAKya,gBAAa,EAClBza,KAAK0a,MAAQ,EACb1a,KAAKmK,cAAW,EAChBnK,KAAKgD,WAAQ,EACbhD,KAAK2a,cAAW,EAChB3a,KAAK4a,mBAAgB,EACrB5a,KAAK6a,SAAM,EACX7a,KAAK8a,aAAU,EACf9a,KAAK+a,cAAW,EAChB/a,KAAKgb,YAAS,EACdhb,KAAKib,QAAS,EACdjb,KAAKkb,YAAa,EAClBlb,KAAKmb,YAAa,EAClBnb,KAAKob,gBAAa,EAClBpb,KAAKqb,WAAY,EAEjBrb,KAAKsb,SAAU,EACftb,KAAKub,UAAW,EAChBvb,KAAKwb,WAAY,EACjBxb,KAAKyb,eAAgB,EACrBzb,KAAK0b,SAAU,EACf1b,KAAK2b,aAAc,EACnB3b,KAAK4b,aAAc,EACnB5b,KAAK6b,YAAa,EAClB7b,KAAK8b,oBAAiB,EACtB9b,KAAK+b,UAAY,GACjB/b,KAAKgc,SAAW,EAChBhc,KAAKsV,QAAU,EACftV,KAAKyV,eAAiB,CAAC,EACvBzV,KAAKic,aAAe,KACpBjc,KAAKkc,YAAc,GACnBlc,KAAKiS,UAAY,CAAC,EAClBjS,KAAKgL,QAAU,CAAC,EAChBhL,KAAKmc,YAAc,CAAC,EACpBnc,KAAKkK,MAAQ,GACblK,KAAKoc,eAAiB,KACtBhD,KAEA,IAAIpW,EAAQkK,EAAOgN,GACnB,GAAIlX,EAAMqZ,UACR,MAAM,IAAIrC,MAAM,kDAElBhX,EAAMqZ,UAAYrc,KAIlBoa,GADoBkC,OAAOC,kBAAoBD,OAAOC,iBAAiBvZ,EAAO,OAC1DwZ,iBAAiB,aAGrC,MAAMrS,EAAW6M,GAAYhU,EAAOmX,GACpCna,KAAKmK,SAAWA,EAChBnK,KAAKgD,MAAQA,EACbhD,KAAK2a,SAAW3X,EAAM2X,UAAY,EAClC3a,KAAK4a,cAAgD,WAAhC5X,EAAM2O,QAAQnN,cACnCxE,KAAK6a,IAAM,OAAOnJ,KAAK0I,GACvBpa,KAAK8a,QAAUnE,GAAM3T,EAAO,aAAeoW,IAC3CpZ,KAAKob,WAAapY,EAAMyZ,SAGxBzc,KAAKgb,OAAS,IAAI/Q,EAAOjK,KAAKgL,QAAS,CACrCZ,WAAYD,EAASC,aAIvBD,EAAS8J,KAAO9J,EAAS8J,OAA+B,IAAtB9J,EAASyI,SAAiB,SAAW,SAClC,kBAA1BzI,EAAS0I,eAClB1I,EAAS0I,aAAiC,UAAlB1I,EAAS8J,MAEK,kBAA7B9J,EAASyK,kBAClBzK,EAASyK,gBAAoC,UAAlBzK,EAAS8J,MAItC,IAAI9S,EAASgJ,EAASqI,aACA,mBAAXrR,IACa,iBAAXA,IACTA,EAAS,IAAI8C,OAAO9C,IAElBA,aAAkB8C,OACpBkG,EAASqI,aAAexP,GAAS7B,EAAOuQ,KAAK1O,GAE7CmH,EAASqI,aAAehQ,GACfxC,KAAKmK,SAAS2I,aAAe9S,KAAKgL,QAAQxI,IAIvDxC,KAAK2Z,kBAAkBxP,EAAS+H,SAChClS,KAAK0c,iBACL1c,KAAK2c,iBAGL,MAAMpN,EAAUrC,EAAO,SACjBqN,EAAUrN,EAAO,SACjBoN,EAAWta,KAAK4c,QAAQ,YACxBpC,EAAmBtN,EAAO,sCAC1BuB,EAAUzO,KAAKgD,MAAM4T,aAAa,UAAY,GAC9CiG,EAAY1S,EAAS8J,KAC3B,IAAIoG,EACJ9L,EAAWgB,EAASpF,EAAS+J,aAAczF,EAASoO,GACpDtO,EAAWgM,EAASpQ,EAASgK,cAC7B2C,GAAOvH,EAASgL,GAChBhM,EAAW+L,EAAUnQ,EAASiK,cAAeyI,GACzC1S,EAASuK,uBACXnG,EAAW+L,EAAU7L,GAEvBF,EAAWiM,EAAkBrQ,EAASkK,sBACtCyC,GAAOwD,EAAUE,GACjBtN,EAAO/C,EAASqK,gBAAkBjF,GAASgC,YAAY+I,GAGnDjN,EAAalD,EAASsK,eACxB4F,EAAgBnN,EAAO/C,EAASsK,cAIhC5K,EADY,CAAC,cAAe,iBAAkB,eAAgB,eAC7CuG,IACXpN,EAAM4T,aAAaxG,IACrBH,EAAQoK,EAAe,CACrB,CAACjK,GAAOpN,EAAM4T,aAAaxG,IAE/B,IAEFiK,EAAcM,UAAY,EAC1BJ,EAAQhJ,YAAY8I,GACpBra,KAAKya,WAAaJ,GAGTlQ,EAASsK,cAClB4F,EAAgBnN,EAAO/C,EAASsK,cAChCzU,KAAKya,WAAaJ,IAElBA,EAAgBnN,EAAO,YACvBlN,KAAKya,WAAaF,GAEpBva,KAAKuP,QAAUA,EACfvP,KAAKsa,SAAWA,EAChBta,KAAKwa,iBAAmBA,EACxBxa,KAAKua,QAAUA,EACfva,KAAKqa,cAAgBA,EACrBra,KAAK8c,OACP,CAMA,KAAAA,GACE,MAAM/b,EAAOf,KACPmK,EAAWpJ,EAAKoJ,SAChBkQ,EAAgBtZ,EAAKsZ,cACrBC,EAAWvZ,EAAKuZ,SAChBE,EAAmBzZ,EAAKyZ,iBACxBjL,EAAUxO,EAAKwO,QACfgL,EAAUxZ,EAAKwZ,QACfvX,EAAQjC,EAAKiC,MACbyX,EAAa1Z,EAAK0Z,WAClBsC,EAAgB,CACpBC,SAAS,GAELC,EAAYlc,EAAK+Z,QAAU,eACjC7K,EAAQuK,EAAkB,CACxBtO,GAAI+Q,IAENhN,EAAQwK,EAAY,CAClByC,KAAM,WACN,gBAAiB,UACjB,gBAAiB,QACjB,gBAAiBD,IAEnB,MAAME,EAAaxG,GAAM8D,EAAY1Z,EAAK+Z,QAAU,eAC9CxQ,EAAQ,cA1yBEA,IACXA,EAAMjI,QAAQ,UAAW,QAyyBA+a,CAAYrc,EAAK+Z,SAAW,KACpDuC,EAAQ9P,SAASK,cAActD,GAC/BgT,EAAcvc,EAAKwc,MAAMvR,KAAKjL,GACpC,GAAIsc,EAAO,CACTlH,GAASkH,EAAO,QAASC,GACzBrN,EAAQoN,EAAO,CACbG,IAAKL,IAEP,MAAMM,EAAW9G,GAAM0G,EAAOtc,EAAK+Z,QAAU,aAC7C7K,EAAQwK,EAAY,CAClB,kBAAmBgD,IAErBxN,EAAQuK,EAAkB,CACxB,kBAAmBiD,GAEvB,CAEA,GADAlO,EAAQjB,MAAMoP,MAAQ1a,EAAMsL,MAAMoP,MAC9B3c,EAAKmR,QAAQlJ,MAAMvI,OAAQ,CAC7B,MAAMkd,EAAkB,UAAY5c,EAAKmR,QAAQlJ,MAAM1H,KAAK,YAC5DiN,EAAW,CAACgB,EAAS+K,GAAWqD,EAClC,EAC2B,OAAtBxT,EAASyI,UAAqBzI,EAASyI,SAAW,IAAM7R,EAAK6Z,eAChE3K,EAAQjN,EAAO,CACb4a,SAAU,aAGVzT,EAASwK,aACX1E,EAAQoK,EAAe,CACrB1F,YAAaxK,EAASwK,eAKrBxK,EAASiI,SAAWjI,EAASgI,YAChChI,EAASiI,QAAU,IAAInO,OAAO,OAAS9B,EAAagI,EAASgI,WAAa,UAKxEhI,EAAS0T,MAAQ1T,EAASiJ,eAC5BjJ,EAAS0T,KAAO3I,GAAa/K,EAAS0T,KAAM1T,EAASiJ,eAEvD+C,GAASmE,EAAU,aAAa,KAC9BvZ,EAAK6a,aAAc,CAAK,IAE1BzF,GAASmE,EAAU,cAAcwD,IAC/B,IAAIC,EAAe3O,EAAY0O,EAAEzO,OAAQ,oBAAqBiL,GAC1DyD,GAAchd,EAAKid,cAAcF,EAAGC,EAAa,GACpD,CACDE,SAAS,IAIX9H,GAASmE,EAAU,SAAStE,IAC1B,MAAM0B,EAAStI,EAAY4G,EAAI3G,OAAQ,qBACnCqI,IACF3W,EAAKmd,eAAelI,EAAK0B,GACzB3B,GAAeC,GAAK,GACtB,IAEFG,GAASoE,EAAS,SAASvE,IACzB,IAAI+H,EAAe3O,EAAY4G,EAAI3G,OAAQ,iBAAkBkL,GACzDwD,GAAgBhd,EAAKod,aAAanI,EAAK+H,GACzChI,GAAeC,GAAK,GAKK,IAAvBqE,EAAc7X,QAGlBzB,EAAKqd,UACLrI,GAAeC,GAAK,GAAK,IAI3BG,GAASsE,EAAY,WAAWqD,GAAK/c,EAAKsd,UAAUP,KAGpD3H,GAASkE,EAAe,YAAYyD,GAAK/c,EAAKud,WAAWR,KACzD3H,GAASkE,EAAe,SAASyD,GAAK/c,EAAKwd,QAAQT,KACnD3H,GAASsE,EAAY,QAAQqD,GAAK/c,EAAKyd,OAAOV,KAC9C3H,GAASsE,EAAY,SAASqD,GAAK/c,EAAK0d,QAAQX,KAChD3H,GAASkE,EAAe,SAASyD,GAAK/c,EAAK2d,QAAQZ,KACnD,MAAMa,EAAgB3I,IAGpB,MAAM3G,EAAS2G,EAAI4I,eAAe,GAClC,IAAKrP,EAAQC,SAASH,KAAYiL,EAAS9K,SAASH,GAKlD,OAJItO,EAAKya,WACPza,EAAK8d,YAEP9d,EAAK+d,aAQHzP,GAAUgL,GAAiBtZ,EAAKka,OAClCjF,EAAIE,kBAIJH,GAAeC,GAAK,EACtB,EAEI+I,EAAa,KACbhe,EAAKka,QACPla,EAAKie,kBACP,EAEF7I,GAAS5I,SAAU,YAAaoR,GAChCxI,GAASmG,OAAQ,SAAUyC,EAAYhC,GACvC5G,GAASmG,OAAQ,SAAUyC,EAAYhC,GACvC/c,KAAK+a,SAAW,KACdxN,SAAS0R,oBAAoB,YAAaN,GAC1CrC,OAAO2C,oBAAoB,SAAUF,GACrCzC,OAAO2C,oBAAoB,SAAUF,GACjC1B,GAAOA,EAAM4B,oBAAoB,QAAS3B,EAAY,EAK5Dtd,KAAKkf,eAAiB,CACpBzR,UAAWzK,EAAMyK,UACjBkN,SAAU3X,EAAM2X,UAElB3X,EAAM2X,UAAY,EAClB3X,EAAMmc,sBAAsB,WAAYpe,EAAKwO,SAC7CxO,EAAKqe,MAAK,GACVjV,EAASD,MAAQ,UACVC,EAAS8H,iBACT9H,EAASa,QAChBmL,GAASnT,EAAO,WAAW,KACrBjC,EAAKua,UACPva,EAAKua,SAAU,EACfva,EAAKsa,WAAY,EACjBta,EAAKse,eACP,IAEFte,EAAKue,sBACLve,EAAKwe,eACLxe,EAAKye,OAAM,GACXze,EAAK+d,aACL/d,EAAK2a,SAAU,EACX1Y,EAAMuV,SACRxX,EAAK0e,UACIzc,EAAM0c,SACf3e,EAAK4e,aAAY,GAEjB5e,EAAK6e,SAGP7e,EAAKb,GAAG,SAAUF,KAAK6f,UACvBtR,EAAWvL,EAAO,cAAe,wBACjCjC,EAAKF,QAAQ,eAGY,IAArBsJ,EAAS8I,SACXlS,EAAKkS,SAET,CAMA,YAAA6M,CAAa9U,EAAU,GAAIiH,EAAY,IAErCjS,KAAK+f,WAAW/U,GAGhBnB,EAAUoI,GAAW4G,IACnB7Y,KAAKggB,oBAAoBnH,EAAS,GAEtC,CAKA,cAAA8D,GACE,IAAI5b,EAAOf,KACPmX,EAAcpW,EAAKoJ,SAASsJ,WAC5B6D,EAAiBvW,EAAKoJ,SAASwJ,mBAC/BsM,EAAY,CACd,SAAYzU,IACV,IAAIqN,EAAWtL,SAASC,cAAc,OAGtC,OAFAqL,EAAS5H,UAAY,WACrB4H,EAAStH,YAAY/F,EAAKR,SACnB6N,CAAQ,EAEjB,gBAAmB,CAACrN,EAAM0U,IACjB,gCAAkCA,EAAO1U,EAAK8L,IAAmB,SAE1E,OAAU,CAAC9L,EAAM0U,IACR,QAAUA,EAAO1U,EAAK2L,IAAgB,SAE/C,KAAQ,CAAC3L,EAAM0U,IACN,QAAUA,EAAO1U,EAAK2L,IAAgB,SAE/C,cAAiB,CAAC3L,EAAM0U,IACf,mCAAqCA,EAAO1U,EAAKxI,OAAS,0BAEnE,WAAc,IACL,iDAET,QAAW,IACF,8BAET,YAAe,OACf,SAAY,IACH,eAGXjC,EAAKoJ,SAAS2K,OAAS5Q,OAAOsI,OAAO,CAAC,EAAGyT,EAAWlf,EAAKoJ,SAAS2K,OACpE,CAMA,cAAA4H,GACE,IAAI/S,EAAKwL,EACLgL,EAAY,CACd,WAAc,eACd,OAAU,WACV,SAAY,YACZ,YAAe,eACf,YAAe,eACf,MAAS,UACT,WAAc,cACd,cAAiB,iBACjB,aAAgB,gBAChB,aAAgB,mBAChB,gBAAmB,sBACnB,eAAkB,qBAClB,cAAiB,iBACjB,eAAkB,kBAClB,KAAQ,SACR,KAAQ,SACR,MAAS,UACT,KAAQ,UAEV,IAAKxW,KAAOwW,GACVhL,EAAKnV,KAAKmK,SAASgW,EAAUxW,MACrB3J,KAAKE,GAAGyJ,EAAKwL,EAEzB,CAMA,IAAAiK,CAAKgB,GAAe,GAClB,MAAMrf,EAAOf,KACPmK,EAAWiW,EAAepJ,GAAYjW,EAAKiC,MAAO,CACtDmP,UAAWpR,EAAKoJ,SAASgI,YACtBpR,EAAKoJ,SACVpJ,EAAK+e,aAAa3V,EAASa,QAASb,EAAS8H,WAC7ClR,EAAKsf,SAASlW,EAASD,OAAS,IAAI,GAEpCnJ,EAAKuf,UAAY,IACnB,CAOA,OAAAlC,GACE,IAAIrd,EAAOf,KACX,GAAIe,EAAKmb,YAAYzb,OAAS,EAG5B,OAFAM,EAAKwf,wBACLxf,EAAKwc,QAGHxc,EAAKya,WAAaza,EAAKka,OACzBla,EAAK8d,OAEL9d,EAAKwc,OAET,CAMA,WAAAiD,GAAe,CAOf,QAAAX,GACE/R,EAAa9N,KAAKgD,MAAO,SACzB8K,EAAa9N,KAAKgD,MAAO,SAC3B,CAMA,OAAA0b,CAAQZ,GACN,IAAI/c,EAAOf,KACPe,EAAK0a,eAAiB1a,EAAKwa,SAC7BxF,GAAe+H,GAMZ/c,EAAKoJ,SAASiI,SAKnBoD,YAAW,KACT,IAAIiL,EAAa1f,EAAK2f,aACtB,GAAKD,EAAWzb,MAAMjE,EAAKoJ,SAASiI,SAApC,CAGA,IAAIuO,EAAaF,EAAWhU,OAAO9M,MAAMoB,EAAKoJ,SAASiI,SACvDvI,EAAU8W,GAAYC,IACP7L,EAAS6L,KAEhB5gB,KAAKgL,QAAQ4V,GACf7f,EAAK8f,QAAQD,GAEb7f,EAAK+f,WAAWF,GAEpB,GAVF,CAWE,GACD,EACL,CAMA,UAAAtC,CAAWR,GACT,IAAI/c,EAAOf,KACX,IAAIe,EAAKwa,SAAT,CAIA,IAAIwF,EAAY1b,OAAOC,aAAawY,EAAEkD,SAAWlD,EAAEmD,OACnD,OAAIlgB,EAAKoJ,SAASmI,QAAiC,UAAvBvR,EAAKoJ,SAAS8J,MAAoB8M,IAAchgB,EAAKoJ,SAASgI,WACxFpR,EAAK+f,kBACL/K,GAAe+H,SAFjB,CAFA,CAFE/H,GAAe+H,EASnB,CAMA,SAAAO,CAAUP,GACR,IAAI/c,EAAOf,KAEX,GADAe,EAAK6a,aAAc,EACf7a,EAAKwa,SAh7BG,IAi7BNuC,EAAEkD,SACJjL,GAAe+H,OAFnB,CAMA,OAAQA,EAAEkD,SAER,KAj8BQ,GAk8BN,GAAI3K,GAAUxE,EAAciM,IACM,IAA5B/c,EAAKsZ,cAAc7X,MAGrB,OAFAuT,GAAe+H,QACf/c,EAAKmgB,YAIT,MAGF,KA18BU,GAg9BR,OALIngB,EAAKka,SACPlF,GAAe+H,GAAG,GAClB/c,EAAKye,cAEPze,EAAKwf,mBAIP,KA/8BW,GAg9BT,IAAKxf,EAAKka,QAAUla,EAAK8a,WACvB9a,EAAKogB,YACA,GAAIpgB,EAAKkb,aAAc,CAC5B,IAAImF,EAAOrgB,EAAKsgB,YAAYtgB,EAAKkb,aAAc,GAC3CmF,GAAMrgB,EAAKugB,gBAAgBF,EACjC,CAEA,YADArL,GAAe+H,GAIjB,KA59BS,GA69BP,GAAI/c,EAAKkb,aAAc,CACrB,IAAIsF,EAAOxgB,EAAKsgB,YAAYtgB,EAAKkb,cAAe,GAC5CsF,GAAMxgB,EAAKugB,gBAAgBC,EACjC,CAEA,YADAxL,GAAe+H,GAIjB,KAx+Ba,GAq/BX,YAZI/c,EAAKygB,UAAUzgB,EAAKkb,eACtBlb,EAAKmd,eAAeJ,EAAG/c,EAAKkb,cAC5BlG,GAAe+H,KAGN/c,EAAKoJ,SAASmI,QAAUvR,EAAK+f,cAI7BvT,SAASkU,eAAiB1gB,EAAKsZ,eAAiBtZ,EAAKka,SAH9DlF,GAAe+H,IASnB,KAt/BW,GAw/BT,YADA/c,EAAK2gB,kBAAkB,EAAG5D,GAI5B,KAz/BY,GA2/BV,YADA/c,EAAK2gB,iBAAiB,EAAG5D,GAI3B,KA1/BU,EAugCR,YAZI/c,EAAKoJ,SAAS6I,cACZjS,EAAKygB,UAAUzgB,EAAKkb,gBACtBlb,EAAKmd,eAAeJ,EAAG/c,EAAKkb,cAI5BlG,GAAe+H,IAEb/c,EAAKoJ,SAASmI,QAAUvR,EAAK+f,cAC/B/K,GAAe+H,KAMrB,KA5gCgB,EA6gChB,KA5gCa,GA8gCX,YADA/c,EAAK4gB,gBAAgB7D,GAKrB/c,EAAK0a,gBAAkBpF,GAAUxE,EAAciM,IACjD/H,GAAe+H,EA7FjB,CA+FF,CAMA,OAAAS,CAAQT,GACN,GAAI9d,KAAKub,SACP,OAEF,MAAM/Y,EAAQxC,KAAK0gB,aACf1gB,KAAK+b,YAAcvZ,IACvBxC,KAAK+b,UAAYvZ,EACJ,IAATA,GAIAxC,KAAKoc,gBACP7G,aAAavV,KAAKoc,gBAEpBpc,KAAKoc,eA76BO,EAACjH,EAAIE,IACfA,EAAU,EACLG,WAAWL,EAAIE,IAExBF,EAAGO,KAAK,MACD,MAw6BiBL,EAAQ,KAC5BrV,KAAKoc,eAAiB,KACtBpc,KAAK4hB,UAAU,GACd5hB,KAAKmK,SAASgJ,kBATfnT,KAAK4hB,WAUT,CACA,QAAAA,GACE,MAAMpf,EAAQxC,KAAK+b,UACf/b,KAAKmK,SAAS0K,WAAWa,KAAK1V,KAAMwC,IACtCxC,KAAK6d,KAAKrb,GAEZxC,KAAK6hB,iBACL7hB,KAAKa,QAAQ,OAAQ2B,EACvB,CAOA,aAAAwb,CAAchI,EAAK0B,GACb1X,KAAK4b,aACT5b,KAAKshB,gBAAgB5J,GAAQ,EAC/B,CAMA,OAAA+G,CAAQX,GACN,IAAI/c,EAAOf,KACP8hB,EAAa/gB,EAAKya,UACtB,GAAIza,EAAKma,YAAcna,EAAKoa,WAG1B,OAFApa,EAAK8d,YACL9I,GAAe+H,GAGb/c,EAAK4a,cACT5a,EAAKya,WAAY,EACa,UAA1Bza,EAAKoJ,SAAS8I,SAAqBlS,EAAKkS,UACvC6O,GAAY/gB,EAAKF,QAAQ,SACzBE,EAAKmb,YAAYzb,SACpBM,EAAK+d,aACL/d,EAAK8gB,iBAAiB9gB,EAAKoJ,SAASsI,cAEtC1R,EAAKse,eACP,CAMA,MAAAb,CAAOV,GACL,IAA4B,IAAxBvQ,SAASwU,WAAb,CACA,IAAIhhB,EAAOf,KACX,GAAKe,EAAKya,UAAV,CACAza,EAAKya,WAAY,EACjBza,EAAK4a,aAAc,EACnB,IAAIqG,EAAa,KACfjhB,EAAKye,QACLze,EAAKkhB,gBACLlhB,EAAKmhB,SAASnhB,EAAKmJ,MAAMzJ,QACzBM,EAAKF,QAAQ,OAAO,EAElBE,EAAKoJ,SAASmI,QAAUvR,EAAKoJ,SAASoI,aACxCxR,EAAK+f,WAAW,KAAMkB,GAEtBA,GAZyB,CAFc,CAgB3C,CAOA,cAAA9D,CAAelI,EAAK0B,GAClB,IAAIlV,EACFzB,EAAOf,KAGL0X,EAAOyK,eAAiBzK,EAAOyK,cAAc1S,QAAQ,qBAGrDiI,EAAO3I,UAAUS,SAAS,UAC5BzO,EAAK+f,WAAW,MAAM,KAChB/f,EAAKoJ,SAASiY,kBAChBrhB,EAAKye,OACP,SAImB,KADrBhd,EAAQkV,EAAOO,QAAQzV,SAErBzB,EAAKuf,UAAY,KACjBvf,EAAK8f,QAAQre,GACTzB,EAAKoJ,SAASiY,kBAChBrhB,EAAKye,SAEFze,EAAKoJ,SAAS0I,cAAgBmD,EAAIH,MAAQ,QAAQnE,KAAKsE,EAAIH,OAC9D9U,EAAKugB,gBAAgB5J,IAI7B,CAMA,SAAA8J,CAAU9J,GACR,SAAI1X,KAAKib,QAAUvD,GAAU1X,KAAKwa,iBAAiBhL,SAASkI,GAI9D,CAOA,YAAAyG,CAAanI,EAAKnJ,GAChB,IAAI9L,EAAOf,KACX,OAAKe,EAAKwa,UAAmC,UAAvBxa,EAAKoJ,SAAS8J,OAClC8B,GAAeC,GACfjV,EAAKkhB,cAAcpV,EAAMmJ,IAClB,EAGX,CAkBA,OAAAqM,CAAQ7f,GACN,QAAKxC,KAAKmK,SAAS0T,OACf7d,KAAKyV,eAAe1L,eAAevH,EAEzC,CAMA,IAAAqb,CAAKrb,GACH,MAAMzB,EAAOf,KACb,IAAKe,EAAKshB,QAAQ7f,GAAQ,OAC1B+L,EAAWxN,EAAKwO,QAASxO,EAAKoJ,SAASkJ,cACvCtS,EAAKuU,UACL,MAAM5V,EAAWqB,EAAKuhB,aAAatW,KAAKjL,GACxCA,EAAKoJ,SAAS0T,KAAKnI,KAAK3U,EAAMyB,EAAO9C,EACvC,CAMA,YAAA4iB,CAAatX,EAASiH,GACpB,MAAMlR,EAAOf,KACbe,EAAKuU,QAAU7S,KAAKC,IAAI3B,EAAKuU,QAAU,EAAG,GAC1CvU,EAAKuf,UAAY,KACjBvf,EAAKwhB,oBACLxhB,EAAK+e,aAAa9U,EAASiH,GAC3BlR,EAAK8gB,eAAe9gB,EAAKya,YAAcza,EAAK0a,eACvC1a,EAAKuU,SACRtG,EAAcjO,EAAKwO,QAASxO,EAAKoJ,SAASkJ,cAE5CtS,EAAKF,QAAQ,OAAQmK,EAASiH,EAChC,CACA,OAAAgB,GACE,IAAIlE,EAAY/O,KAAKuP,QAAQR,UACzBA,EAAUS,SAAS,eACvBT,EAAU9J,IAAI,aACdjF,KAAK6d,KAAK,IACZ,CAMA,eAAA2E,CAAgBhgB,EAAQ,IACtB,IAAIQ,EAAQhD,KAAKqa,cACHrX,EAAMR,QAAUA,IAE5BQ,EAAMR,MAAQA,EACdsL,EAAa9K,EAAO,UACpBhD,KAAK+b,UAAYvZ,EAErB,CASA,QAAAigB,GACE,OAAIziB,KAAK4a,eAAiB5a,KAAKgD,MAAM0V,aAAa,YACzC1Y,KAAKkK,MAEPlK,KAAKkK,MAAM5I,KAAKtB,KAAKmK,SAASgI,UACvC,CAMA,QAAAkO,CAAS7d,EAAOkgB,GAEd/M,GAAgB3V,KADH0iB,EAAS,GAAK,CAAC,WACE,KAC5B1iB,KAAK2iB,MAAMD,GACX1iB,KAAK4iB,SAASpgB,EAAOkgB,EAAO,GAEhC,CAMA,WAAAG,CAAYrgB,GACI,IAAVA,IAAaA,EAAQ,MACzBxC,KAAKmK,SAASyI,SAAWpQ,EACzBxC,KAAKqf,cACP,CAMA,aAAA4C,CAAcpV,EAAMiR,GAClB,IACIgF,EACAhhB,EAAGihB,EAAO9b,EAAK+b,EACfvb,EAHA1G,EAAOf,KAIX,GAA2B,WAAvBe,EAAKoJ,SAAS8J,KAAlB,CAGA,IAAKpH,EAKH,OAJA9L,EAAKwf,wBACDxf,EAAKya,WACPza,EAAK+d,cAOT,GAAkB,WADlBgE,EAAYhF,GAAKA,EAAEjI,KAAKrR,gBACK6R,GAAU,WAAYyH,IAAM/c,EAAKmb,YAAYzb,OAAQ,CAShF,IARAgH,EAAO1G,EAAKkiB,iBACZF,EAAQlgB,MAAMqgB,UAAUtiB,QAAQ8U,KAAK3U,EAAKwZ,QAAQ5B,SAAUlR,KAC5DR,EAAMpE,MAAMqgB,UAAUtiB,QAAQ8U,KAAK3U,EAAKwZ,QAAQ5B,SAAU9L,MAExDmW,EAAOD,EACPA,EAAQ9b,EACRA,EAAM+b,GAEHlhB,EAAIihB,EAAOjhB,GAAKmF,EAAKnF,IACxB+K,EAAO9L,EAAKwZ,QAAQ5B,SAAS7W,IACW,IAApCf,EAAKmb,YAAYtb,QAAQiM,IAC3B9L,EAAKoiB,mBAAmBtW,GAG5BkJ,GAAe+H,EACjB,KAAyB,UAAdgF,GAAyBzM,GAAUxE,EAAciM,IAAoB,YAAdgF,GAA2BzM,GAAU,WAAYyH,GAC7GjR,EAAKkC,UAAUS,SAAS,UAC1BzO,EAAKqiB,iBAAiBvW,GAEtB9L,EAAKoiB,mBAAmBtW,IAG1B9L,EAAKwf,mBACLxf,EAAKoiB,mBAAmBtW,IAI1B9L,EAAK+d,aACA/d,EAAKya,WACRza,EAAKwc,OA3CoC,CA6C7C,CAMA,kBAAA4F,CAAmBtW,GACjB,MAAM9L,EAAOf,KACPqjB,EAActiB,EAAKwZ,QAAQ3M,cAAc,gBAC3CyV,GAAarU,EAAcqU,EAAa,eAC5C9U,EAAW1B,EAAM,sBACjB9L,EAAKF,QAAQ,cAAegM,IACW,GAAnC9L,EAAKmb,YAAYtb,QAAQiM,IAC3B9L,EAAKmb,YAAY7b,KAAKwM,EAE1B,CAMA,gBAAAuW,CAAiBvW,GACf,IAAIyW,EAAMtjB,KAAKkc,YAAYtb,QAAQiM,GACnC7M,KAAKkc,YAAYvb,OAAO2iB,EAAK,GAC7BtU,EAAcnC,EAAM,SACtB,CAMA,gBAAA0T,GACEvR,EAAchP,KAAKkc,YAAa,UAChClc,KAAKkc,YAAc,EACrB,CAOA,eAAAoF,CAAgB5J,EAAQ6L,GAAS,GAC3B7L,IAAW1X,KAAKic,eAGpBjc,KAAKuiB,oBACA7K,IACL1X,KAAKic,aAAevE,EACpBzH,EAAQjQ,KAAKya,WAAY,CACvB,wBAAyB/C,EAAOd,aAAa,QAE/C3G,EAAQyH,EAAQ,CACd,gBAAiB,SAEnBnJ,EAAWmJ,EAAQ,UACf6L,GAAQvjB,KAAKwjB,eAAe9L,IAClC,CAMA,cAAA8L,CAAe9L,EAAQ+L,GACrB,IAAK/L,EAAQ,OACb,MAAMhK,EAAU1N,KAAKwa,iBACfkJ,EAAchW,EAAQiW,aACtBC,EAAYlW,EAAQkW,WAAa,EACjCC,EAAcnM,EAAOoM,aACrBC,EAAIrM,EAAOsM,wBAAwBC,IAAMvW,EAAQsW,wBAAwBC,IAAML,EACjFG,EAAIF,EAAcH,EAAcE,EAClC5jB,KAAKujB,OAAOQ,EAAIL,EAAcG,EAAaJ,GAClCM,EAAIH,GACb5jB,KAAKujB,OAAOQ,EAAGN,EAEnB,CAMA,MAAAF,CAAOK,EAAWH,GAChB,MAAM/V,EAAU1N,KAAKwa,iBACjBiJ,IACF/V,EAAQY,MAAM4V,eAAiBT,GAEjC/V,EAAQkW,UAAYA,EACpBlW,EAAQY,MAAM4V,eAAiB,EACjC,CAMA,iBAAA3B,GACMviB,KAAKic,eACPjN,EAAchP,KAAKic,aAAc,UACjChM,EAAQjQ,KAAKic,aAAc,CACzB,gBAAiB,QAGrBjc,KAAKic,aAAe,KACpBhM,EAAQjQ,KAAKya,WAAY,CACvB,wBAAyB,MAE7B,CAKA,SAAAyG,GACE,MAAMngB,EAAOf,KACb,GAA2B,WAAvBe,EAAKoJ,SAAS8J,KAAmB,OACrC,MAAMiI,EAAcnb,EAAKojB,kBACpBjI,EAAYzb,SACjBM,EAAK+d,aACL/d,EAAKye,QACLze,EAAKmb,YAAcA,EACnBrS,EAAUqS,GAAarP,IACrB9L,EAAKoiB,mBAAmBtW,EAAK,IAEjC,CAMA,UAAAiS,GACE,IAAI/d,EAAOf,KACNe,EAAKwZ,QAAQ/K,SAASzO,EAAKsZ,iBAChCpK,EAAQlP,EAAKsZ,cAAe,CAC1B1F,YAAa5T,EAAKoJ,SAASwK,cAEzB5T,EAAKmb,YAAYzb,OAAS,IAAMM,EAAKya,WAAaza,EAAKoJ,SAASyK,iBAAmB7T,EAAKmJ,MAAMzJ,OAAS,GACzGM,EAAKyhB,kBACLzhB,EAAK0a,eAAgB,IAEjB1a,EAAKoJ,SAASyK,iBAAmB7T,EAAKmJ,MAAMzJ,OAAS,GACvDwP,EAAQlP,EAAKsZ,cAAe,CAC1B1F,YAAa,KAGjB5T,EAAK0a,eAAgB,GAEvB1a,EAAKwO,QAAQR,UAAUqV,OAAO,eAAgBrjB,EAAK0a,eACrD,CAKA,UAAAiF,GACE,OAAO1gB,KAAKqa,cAAc7X,MAAMiK,MAClC,CAKA,KAAA8Q,GACE,IAAIxc,EAAOf,KACPe,EAAKma,YAAcna,EAAKoa,aAC5Bpa,EAAK4a,aAAc,EACf5a,EAAKsZ,cAAcgK,YACrBtjB,EAAKsZ,cAAckD,QAEnBxc,EAAK0Z,WAAW8C,QAElB/H,YAAW,KACTzU,EAAK4a,aAAc,EACnB5a,EAAK0d,SAAS,GACb,GACL,CAMA,IAAAI,GACE7e,KAAKya,WAAWoE,OAChB7e,KAAKwe,QACP,CASA,gBAAAzT,CAAiBT,GACf,OAAOtK,KAAKgb,OAAOjQ,iBAAiBT,EAAOtK,KAAKskB,mBAClD,CASA,gBAAAA,GACE,IAAIna,EAAWnK,KAAKmK,SAChBvE,EAAOuE,EAAS2J,UAMpB,MALkC,iBAAvB3J,EAAS2J,YAClBlO,EAAO,CAAC,CACNkF,MAAOX,EAAS2J,aAGb,CACL1I,OAAQjB,EAAS4J,YACjBrI,YAAavB,EAAS6J,kBACtBpO,KAAMA,EACN+G,QAASxC,EAASwC,QAEtB,CAOA,MAAAnD,CAAOc,GACL,IAAIrH,EAAQshB,EACRxjB,EAAOf,KACPgL,EAAUhL,KAAKskB,mBAGnB,GAAIvjB,EAAKoJ,SAASd,OAEc,mBAD9Bkb,EAAiBxjB,EAAKoJ,SAASd,MAAMqM,KAAK3U,EAAMuJ,IAE9C,MAAM,IAAI0P,MAAM,yEAsBpB,OAjBI1P,IAAUvJ,EAAKuf,WACjBvf,EAAKuf,UAAYhW,EACjBrH,EAASlC,EAAKia,OAAOxR,OAAOc,EAAOpG,OAAOsI,OAAOxB,EAAS,CACxD3B,MAAOkb,KAETxjB,EAAK+a,eAAiB7Y,GAEtBA,EAASiB,OAAOsI,OAAO,CAAC,EAAGzL,EAAK+a,gBAI9B/a,EAAKoJ,SAAS0I,eAChB5P,EAAOiH,MAAQjH,EAAOiH,MAAM/I,QAAO0L,IACjC,IAAI2X,EAASzP,EAASlI,EAAKX,IAC3B,QAASsY,IAA0C,IAAhCzjB,EAAKmJ,MAAMtJ,QAAQ4jB,GAAe,KAGlDvhB,CACT,CAOA,cAAA4e,CAAe4C,GAAkB,GAC/B,IAAI3iB,EAAG+E,EAAG6d,EAAGnkB,EAAGsY,EAAU5G,EAAW0S,EAAMC,EAAmBC,EAC1DvS,EACJ,MAAMwS,EAAS,CAAC,EACVC,EAAe,GACrB,IAAIhkB,EAAOf,KACPsK,EAAQvJ,EAAK2f,aACjB,MAAMsE,EAAa1a,IAAUvJ,EAAKuf,WAAsB,IAAThW,GAAiC,MAAlBvJ,EAAKuf,UACnE,IAAI2E,EAAUlkB,EAAKyI,OAAOc,GACtB4a,EAAgB,KAChBC,EAAgBpkB,EAAKoJ,SAASuI,aAAc,EAC5C8H,EAAmBzZ,EAAKyZ,iBACxBwK,IACFE,EAAgBnkB,EAAKkb,gBAEnB4I,EAAeK,EAAcE,QAAQ,iBAKzC7kB,EAAI0kB,EAAQ/a,MAAMzJ,OACsB,iBAA7BM,EAAKoJ,SAASwI,aACvBpS,EAAIkC,KAAK+E,IAAIjH,EAAGQ,EAAKoJ,SAASwI,aAE5BpS,EAAI,IACN4kB,GAAgB,GAIlB,MAAME,EAAmB,CAACxM,EAAU6B,KAClC,IAAI4K,EAAgBR,EAAOjM,GAC3B,QAAsBnY,IAAlB4kB,EAA6B,CAC/B,IAAIC,EAAcR,EAAaO,GAC/B,QAAoB5kB,IAAhB6kB,EACF,MAAO,CAACD,EAAeC,EAAYC,SAEvC,CACA,IAAIC,EAAiBlY,SAASmY,yBAO9B,OANAJ,EAAgBP,EAAatkB,OAC7BskB,EAAa1kB,KAAK,CAChBmlB,SAAUC,EACV/K,QACA7B,aAEK,CAACyM,EAAeG,EAAe,EAIxC,IAAK3jB,EAAI,EAAGA,EAAIvB,EAAGuB,IAAK,CAEtB,IAAI+K,EAAOoY,EAAQ/a,MAAMpI,GACzB,IAAK+K,EAAM,SACX,IAAI8Y,EAAY9Y,EAAKX,GACjBwL,EAAS3W,EAAKiK,QAAQ2a,GAC1B,QAAejlB,IAAXgX,EAAsB,SAC1B,IAAIkO,EAAW5Q,EAAS2Q,GACpBE,EAAY9kB,EAAK+kB,UAAUF,GAAU,GAQzC,IALK7kB,EAAKoJ,SAAS0I,cACjBgT,EAAU9W,UAAUqV,OAAO,WAAYrjB,EAAKmJ,MAAM6b,SAASH,IAE7D/M,EAAWnB,EAAO3W,EAAKoJ,SAASoJ,gBAAkB,GAE7C1M,EAAI,EAAG6d,GADZzS,EAAYpP,MAAM+G,QAAQiP,GAAYA,EAAW,CAACA,KACrB5G,EAAUxR,OAAQoG,EAAI6d,EAAG7d,IAAK,CACzDgS,EAAW5G,EAAUpL,GACrB,IAAI6T,EAAQhD,EAAOK,OACfiO,EAAgBjlB,EAAKkR,UAAU4G,QACbnY,IAAlBslB,EACFnN,EAAW,GAEX6B,EAAQsL,EAAcjO,OAExB,MAAOuN,EAAeG,GAAkBJ,EAAiBxM,EAAU6B,GAG/D7T,EAAI,IACNgf,EAAYA,EAAUvU,WAAU,GAChCrB,EAAQ4V,EAAW,CACjB3Z,GAAIwL,EAAOuO,IAAM,UAAYpf,EAC7B,gBAAiB,OAEnBgf,EAAU9W,UAAU9J,IAAI,aACxB+J,EAAc6W,EAAW,UAGrB9kB,EAAKkb,cAAgBlb,EAAKkb,aAAahE,QAAQzV,OAASmjB,GACtDd,GAAgBA,EAAa5M,QAAQG,QAAUS,EAASqN,aAC1DhB,EAAgBW,IAItBJ,EAAelU,YAAYsU,GACX,IAAZhN,IACFiM,EAAOjM,GAAYyM,EAEvB,CACF,CAjsDoBzW,IAClBsX,EAmsDEplB,EAAKoJ,SAAS0J,mBAChBkR,EAAanf,MAAK,CAACC,EAAGC,IACbD,EAAE6U,MAAQ5U,EAAE4U,QAKvBiK,EAAOpX,SAASmY,yBAChB7b,EAAUkb,GAAcqB,IACtB,IAAIX,EAAiBW,EAAYZ,SAC7B3M,EAAWuN,EAAYvN,SAC3B,IAAK4M,IAAmBA,EAAe9M,SAASlY,OAAQ,OACxD,IAAI4lB,EAAgBtlB,EAAKkR,UAAU4G,GACnC,QAAsBnY,IAAlB2lB,EAA6B,CAC/B,IAAIC,EAAgB/Y,SAASmY,yBACzBa,EAASxlB,EAAK+T,OAAO,kBAAmBuR,GAC5CvP,GAAOwP,EAAeC,GACtBzP,GAAOwP,EAAeb,GACtB,IAAIe,EAAazlB,EAAK+T,OAAO,WAAY,CACvCsD,MAAOiO,EACPrb,QAASsb,IAEXxP,GAAO6N,EAAM6B,EACf,MACE1P,GAAO6N,EAAMc,EACf,IAEFjL,EAAiB/M,UAAY,GAC7BqJ,GAAO0D,EAAkBmK,GAGrB5jB,EAAKoJ,SAASwG,YAluDhBwV,EAmuDgB3L,EAnuDFiM,iBAAiB,kBACnC5jB,MAAMqgB,UAAUtjB,QAAQ8V,KAAKyQ,GAAU,SAAUtX,GAC/C,IAAIkI,EAASlI,EAAGa,WAChBqH,EAAOrG,aAAa7B,EAAGlB,WAAYkB,GACnCkI,EAAO3S,WACT,IA+tDQ6gB,EAAQ3a,MAAM7J,QAAUwkB,EAAQxa,OAAOhK,QACzCoJ,EAAUob,EAAQxa,QAAQic,IACxB/V,EAAU6J,EAAkBkM,EAAInd,MAAM,KAM5C,IAAIod,EAAeC,IACjB,IAAIlZ,EAAU3M,EAAK+T,OAAO8R,EAAU,CAClC5jB,MAAOsH,IAMT,OAJIoD,IACFyX,GAAgB,EAChB3K,EAAiBqM,aAAanZ,EAAS8M,EAAiB7M,aAEnDD,CAAO,EAwBhB,GApBI3M,EAAKuU,QACPqR,EAAa,WAGH5lB,EAAKoJ,SAAS0K,WAAWa,KAAK3U,EAAMuJ,GAIZ,IAAzB2a,EAAQ/a,MAAMzJ,QACvBkmB,EAAa,cAJbA,EAAa,gBAQf/B,EAAoB7jB,EAAK+lB,UAAUxc,MAEjCgI,EAASqU,EAAa,kBAIxB5lB,EAAK8a,WAAaoJ,EAAQ/a,MAAMzJ,OAAS,GAAKmkB,EAC1CO,EAAe,CACjB,GAAIF,EAAQ/a,MAAMzJ,OAAS,GAIzB,GAHKykB,GAAwC,WAAvBnkB,EAAKoJ,SAAS8J,MAAsCvT,MAAjBK,EAAKmJ,MAAM,KAClEgb,EAAgBnkB,EAAK+kB,UAAU/kB,EAAKmJ,MAAM,MAEvCsQ,EAAiBhL,SAAS0V,GAAgB,CAC7C,IAAI6B,EAAe,EACfzU,IAAWvR,EAAKoJ,SAAS4I,gBAC3BgU,EAAe,GAEjB7B,EAAgBnkB,EAAKimB,aAAaD,EACpC,OACSzU,IACT4S,EAAgB5S,GAEdmS,IAAoB1jB,EAAKka,SAC3Bla,EAAKogB,OACLpgB,EAAKyiB,eAAe0B,EAAe,SAErCnkB,EAAKugB,gBAAgB4D,EACvB,MACEnkB,EAAKwhB,oBACDkC,GAAmB1jB,EAAKka,QAC1Bla,EAAKye,OAAM,EAGjB,CAMA,UAAAwH,GACE,OAAOhnB,KAAKwa,iBAAiBiM,iBAAiB,oBAChD,CAaA,SAAAtO,CAAU3M,EAAMyb,GAAe,GAC7B,MAAMlmB,EAAOf,KAIb,GAAI6C,MAAM+G,QAAQ4B,GAEhB,OADAzK,EAAKgf,WAAWvU,EAAMyb,IACf,EAET,MAAMtd,EAAMoL,EAASvJ,EAAKzK,EAAKoJ,SAASqJ,aACxC,OAAY,OAAR7J,IAAgB5I,EAAKiK,QAAQjB,eAAeJ,KAGhD6B,EAAKuM,OAASvM,EAAKuM,UAAYhX,EAAK2Z,MACpClP,EAAKya,IAAMllB,EAAK+Z,QAAU,QAAUtP,EAAKuM,OACzChX,EAAKiK,QAAQrB,GAAO6B,EACpBzK,EAAKuf,UAAY,KACb2G,IACFlmB,EAAKob,YAAYxS,GAAOsd,EACxBlmB,EAAKF,QAAQ,aAAc8I,EAAK6B,IAE3B7B,EACT,CAMA,UAAAoW,CAAWvU,EAAMyb,GAAe,GAC9Bpd,EAAU2B,GAAM0b,IACdlnB,KAAKmY,UAAU+O,EAAKD,EAAa,GAErC,CAKA,cAAAE,CAAe3b,GACb,OAAOxL,KAAKmY,UAAU3M,EACxB,CAOA,mBAAAwU,CAAoBxU,GAClB,IAAI7B,EAAMoL,EAASvJ,EAAKxL,KAAKmK,SAASyJ,qBACtC,OAAY,OAARjK,IACJ6B,EAAKuM,OAASvM,EAAKuM,UAAY/X,KAAK0a,MACpC1a,KAAKiS,UAAUtI,GAAO6B,EACf7B,EACT,CAOA,cAAAyd,CAAelb,EAAIV,GACjB,IAAI6b,EACJ7b,EAAKxL,KAAKmK,SAASyJ,oBAAsB1H,GACrCmb,EAAYrnB,KAAKggB,oBAAoBxU,KACvCxL,KAAKa,QAAQ,eAAgBwmB,EAAW7b,EAE5C,CAMA,iBAAA8b,CAAkBpb,GACZlM,KAAKiS,UAAUlI,eAAemC,YACzBlM,KAAKiS,UAAU/F,GACtBlM,KAAKunB,aACLvnB,KAAKa,QAAQ,kBAAmBqL,GAEpC,CAKA,iBAAAsb,GACExnB,KAAKiS,UAAY,CAAC,EAClBjS,KAAKunB,aACLvnB,KAAKa,QAAQ,iBACf,CAQA,YAAA4mB,CAAajlB,EAAOgJ,GAClB,MAAMzK,EAAOf,KACb,IAAI0nB,EACAC,EACJ,MAAMC,EAAY7S,EAASvS,GACrBqlB,EAAY9S,EAASvJ,EAAKzK,EAAKoJ,SAASqJ,aAG9C,GAAkB,OAAdoU,EAAoB,OACxB,MAAME,EAAW/mB,EAAKiK,QAAQ4c,GAC9B,GAAgBlnB,MAAZonB,EAAuB,OAC3B,GAAyB,iBAAdD,EAAwB,MAAM,IAAI7N,MAAM,oCACnD,MAAMtC,EAAS3W,EAAK+kB,UAAU8B,GACxB/a,EAAO9L,EAAKgnB,QAAQH,GAU1B,GATApc,EAAKuM,OAASvM,EAAKuM,QAAU+P,EAAS/P,cAC/BhX,EAAKiK,QAAQ4c,GAIpB7mB,EAAKinB,aAAaH,GAClB9mB,EAAKiK,QAAQ6c,GAAarc,EAGtBkM,EAAQ,CACV,GAAI3W,EAAKyZ,iBAAiBhL,SAASkI,GAAS,CAC1C,MAAMuQ,EAAalnB,EAAK6b,QAAQ,SAAUpR,GAC1C+E,EAAYmH,EAAQuQ,GAChBlnB,EAAKkb,eAAiBvE,GACxB3W,EAAKugB,gBAAgB2G,EAEzB,CACAvQ,EAAOzI,QACT,CAGIpC,KAEkB,KADpB8a,EAAa5mB,EAAKmJ,MAAMtJ,QAAQgnB,KAE9B7mB,EAAKmJ,MAAMvJ,OAAOgnB,EAAY,EAAGE,GAEnCH,EAAW3mB,EAAK6b,QAAQ,OAAQpR,GAC5BqB,EAAKkC,UAAUS,SAAS,WAAWjB,EAAWmZ,EAAU,UAC5DnX,EAAY1D,EAAM6a,IAIpB3mB,EAAKuf,UAAY,IACnB,CAMA,YAAA4H,CAAa1lB,EAAOkgB,GAClB,MAAM3hB,EAAOf,KACbwC,EAAQwS,EAASxS,GACjBzB,EAAKinB,aAAaxlB,UACXzB,EAAKob,YAAY3Z,UACjBzB,EAAKiK,QAAQxI,GACpBzB,EAAKuf,UAAY,KACjBvf,EAAKF,QAAQ,gBAAiB2B,GAC9BzB,EAAKonB,WAAW3lB,EAAOkgB,EACzB,CAKA,YAAA0F,CAAajnB,GACX,MAAMknB,GAAelnB,GAAUnB,KAAKsoB,aAAatc,KAAKhM,MACtDA,KAAKyV,eAAiB,CAAC,EACvBzV,KAAKmc,YAAc,CAAC,EACpBnc,KAAKunB,aACL,MAAM9O,EAAW,CAAC,EAClB5O,EAAU7J,KAAKgL,SAAS,CAAC0M,EAAQ/N,KAC3B0e,EAAY3Q,EAAQ/N,KACtB8O,EAAS9O,GAAO+N,EAClB,IAEF1X,KAAKgL,QAAUhL,KAAKgb,OAAO9Q,MAAQuO,EACnCzY,KAAKsgB,UAAY,KACjBtgB,KAAKa,QAAQ,eACf,CAOA,WAAAynB,CAAY5Q,EAAQlV,GAClB,OAAIxC,KAAKkK,MAAMtJ,QAAQ4B,IAAU,CAInC,CAOA,SAAAsjB,CAAUtjB,EAAO8P,GAAS,GACxB,MAAMkS,EAASzP,EAASvS,GACxB,GAAe,OAAXgiB,EAAiB,OAAO,KAC5B,MAAM9M,EAAS1X,KAAKgL,QAAQwZ,GAC5B,GAAc9jB,MAAVgX,EAAqB,CACvB,GAAIA,EAAO6Q,KACT,OAAO7Q,EAAO6Q,KAEhB,GAAIjW,EACF,OAAOtS,KAAK4c,QAAQ,SAAUlF,EAElC,CACA,OAAO,IACT,CAOA,WAAA2J,CAAY3J,EAAQrL,EAAWwJ,EAAO,UACpC,IACEpP,EACF,IAAKiR,EACH,OAAO,KAGPjR,EADU,QAARoP,EALO7V,KAMEmkB,kBANFnkB,KAQEwa,iBAAiBiM,iBAAiB,qBAE/C,IAAK,IAAI3kB,EAAI,EAAGA,EAAI2E,EAAIhG,OAAQqB,IAC9B,GAAI2E,EAAI3E,IAAM4V,EAGd,OAAIrL,EAAY,EACP5F,EAAI3E,EAAI,GAEV2E,EAAI3E,EAAI,GAEjB,OAAO,IACT,CAOA,OAAAimB,CAAQlb,GACN,GAAmB,iBAARA,EACT,OAAOA,EAET,IAAIrK,EAAQuS,EAASlI,GACrB,OAAiB,OAAVrK,EAAiBxC,KAAKua,QAAQ3M,cAAc,gBAAgBiJ,GAAWrU,QAAc,IAC9F,CAOA,QAAAogB,CAAS1J,EAAQwJ,GACf,IAAI3hB,EAAOf,KACPkK,EAAQrH,MAAM+G,QAAQsP,GAAUA,EAAS,CAACA,GAE9C,MAAMsP,GADNte,EAAQA,EAAM/I,QAAOsnB,IAAgC,IAA3B1nB,EAAKmJ,MAAMtJ,QAAQ6nB,MACrBve,EAAMzJ,OAAS,GACvCyJ,EAAMtK,SAAQiN,IACZ9L,EAAK2nB,UAAY7b,IAAS2b,EAC1BznB,EAAK8f,QAAQhU,EAAM6V,EAAO,GAE9B,CAOA,OAAA7B,CAAQre,EAAOkgB,GAEb/M,GAAgB3V,KADH0iB,EAAS,GAAK,CAAC,SAAU,mBACR,KAC5B,IAAI7V,EAAM8b,EACV,MAAM5nB,EAAOf,KACP6c,EAAY9b,EAAKoJ,SAAS8J,KAC1BuQ,EAASzP,EAASvS,GACxB,KAAIgiB,IAA0C,IAAhCzjB,EAAKmJ,MAAMtJ,QAAQ4jB,KACb,WAAd3H,GACF9b,EAAKye,QAEW,WAAd3C,GAA2B9b,EAAKoJ,SAAS2I,cAIhC,OAAX0R,GAAoBzjB,EAAKiK,QAAQjB,eAAeya,KAClC,WAAd3H,GAAwB9b,EAAK4hB,MAAMD,GACrB,UAAd7F,IAAyB9b,EAAK6nB,UAAlC,CASA,GARA/b,EAAO9L,EAAK6b,QAAQ,OAAQ7b,EAAKiK,QAAQwZ,IACrCzjB,EAAKwZ,QAAQ/K,SAAS3C,KAExBA,EAAOA,EAAKyE,WAAU,IAExBqX,EAAU5nB,EAAK6nB,SACf7nB,EAAKmJ,MAAMvJ,OAAOI,EAAKib,SAAU,EAAGwI,GACpCzjB,EAAK8nB,cAAchc,GACf9L,EAAK2a,QAAS,CAEhB,IAAK3a,EAAK2nB,WAAa3nB,EAAKoJ,SAAS0I,aAAc,CACjD,IAAI6E,EAAS3W,EAAK+kB,UAAUtB,GACxBpD,EAAOrgB,EAAKsgB,YAAY3J,EAAQ,GAChC0J,GACFrgB,EAAKugB,gBAAgBF,EAEzB,CAIKrgB,EAAK2nB,WAAc3nB,EAAKoJ,SAASiY,kBACpCrhB,EAAK8gB,eAAe9gB,EAAKya,WAA2B,WAAdqB,GAIF,GAAlC9b,EAAKoJ,SAASiY,kBAA6BrhB,EAAK6nB,SAClD7nB,EAAKye,QACKze,EAAK2nB,WACf3nB,EAAKie,mBAEPje,EAAKF,QAAQ,WAAY2jB,EAAQ3X,GAC5B9L,EAAK2nB,WACR3nB,EAAKue,oBAAoB,CACvBoD,OAAQA,GAGd,GACK3hB,EAAK2nB,YAAcC,GAAW5nB,EAAK6nB,YACtC7nB,EAAK+d,aACL/d,EAAKse,eAxC2C,CAyClD,GAEJ,CAOA,UAAA8I,CAAWtb,EAAO,KAAM6V,GACtB,MAAM3hB,EAAOf,KAEb,KADA6M,EAAO9L,EAAKgnB,QAAQlb,IACT,OACX,IAAI/K,EAAGwhB,EACP,MAAM9gB,EAAQqK,EAAKoL,QAAQzV,MAC3BV,EAAI+N,EAAUhD,GACdA,EAAKoC,SACDpC,EAAKkC,UAAUS,SAAS,YAC1B8T,EAAMviB,EAAKmb,YAAYtb,QAAQiM,GAC/B9L,EAAKmb,YAAYvb,OAAO2iB,EAAK,GAC7BtU,EAAcnC,EAAM,WAEtB9L,EAAKmJ,MAAMvJ,OAAOmB,EAAG,GACrBf,EAAKuf,UAAY,MACZvf,EAAKoJ,SAASkI,SAAWtR,EAAKob,YAAYpS,eAAevH,IAC5DzB,EAAKmnB,aAAa1lB,EAAOkgB,GAEvB5gB,EAAIf,EAAKib,UACXjb,EAAKmhB,SAASnhB,EAAKib,SAAW,GAEhCjb,EAAKue,oBAAoB,CACvBoD,OAAQA,IAEV3hB,EAAKse,eACLte,EAAKie,mBACLje,EAAKF,QAAQ,cAAe2B,EAAOqK,EACrC,CAWA,UAAAiU,CAAW9d,EAAQ,KAAMtD,EAAW,UAET,IAArBc,UAAUC,SACZf,EAAWc,UAAU,IAEA,mBAAZd,IACTA,EAAW,QAEb,IAEIopB,EAFA/nB,EAAOf,KACP+oB,EAAQhoB,EAAKib,SAGjB,GADAhZ,EAAQA,GAASjC,EAAK2f,cACjB3f,EAAK+lB,UAAU9jB,GAElB,OADAtD,KACO,EAETqB,EAAKioB,OACL,IAAIC,GAAU,EACV3W,EAAS9G,IAEX,GADAzK,EAAKmoB,UACA1d,GAAwB,iBAATA,EAAmB,OAAO9L,IAC9C,IAAI8C,EAAQuS,EAASvJ,EAAKzK,EAAKoJ,SAASqJ,aACxC,GAAqB,iBAAVhR,EACT,OAAO9C,IAETqB,EAAKyhB,kBACLzhB,EAAKoX,UAAU3M,GAAM,GACrBzK,EAAKmhB,SAAS6G,GACdhoB,EAAK8f,QAAQre,GACb9C,EAAS8L,GACTyd,GAAU,CAAI,EAahB,OAVEH,EADkC,mBAAzB/nB,EAAKoJ,SAASmI,OACdvR,EAAKoJ,SAASmI,OAAOoD,KAAK1V,KAAMgD,EAAOsP,GAEvC,CACP,CAACvR,EAAKoJ,SAASsJ,YAAazQ,EAC5B,CAACjC,EAAKoJ,SAASqJ,YAAaxQ,GAG3BimB,GACH3W,EAAOwW,IAEF,CACT,CAKA,YAAAvJ,GACE,IAAIxe,EAAOf,KACXe,EAAKuf,UAAY,KACbvf,EAAK2a,SACP3a,EAAK6hB,SAAS7hB,EAAKmJ,OAErBnJ,EAAKue,sBACLve,EAAKse,cACP,CAMA,YAAAA,GACE,MAAMte,EAAOf,KACbe,EAAKooB,uBACL,MAAMP,EAAS7nB,EAAK6nB,SACdrN,EAAWxa,EAAKwa,SACtBxa,EAAKwO,QAAQR,UAAUqV,OAAO,MAAOrjB,EAAK8Z,KAC1C,MAAMuO,EAAiBroB,EAAKwO,QAAQR,UA31ElBlG,MA41ElBugB,EAAehF,OAAO,QAASrjB,EAAKya,WACpC4N,EAAehF,OAAO,WAAYrjB,EAAKma,YACvCkO,EAAehF,OAAO,WAAYrjB,EAAKoa,YACvCiO,EAAehF,OAAO,WAAYrjB,EAAKqa,YACvCgO,EAAehF,OAAO,WAAYrjB,EAAKua,SACvC8N,EAAehF,OAAO,SAAU7I,GAChC6N,EAAehF,OAAO,OAAQwE,GAC9BQ,EAAehF,OAAO,eAAgBrjB,EAAKya,YAAcza,EAAK0a,eAC9D2N,EAAehF,OAAO,kBAAmBrjB,EAAKka,QAC9CmO,EAAehF,OAAO,eAr2EJvb,EAq2EiC9H,EAAKiK,QAp2EvB,IAA5B9G,OAAOC,KAAK0E,GAAKpI,SAq2EtB2oB,EAAehF,OAAO,YAAarjB,EAAKmJ,MAAMzJ,OAAS,EACzD,CAUA,oBAAA0oB,GACE,IAAIpoB,EAAOf,KACNe,EAAKiC,MAAMqmB,WAGhBtoB,EAAKua,QAAUva,EAAKiC,MAAMqmB,SAASC,MACnCvoB,EAAKsa,WAAata,EAAKua,QACzB,CAQA,MAAAsN,GACE,OAAkC,OAA3B5oB,KAAKmK,SAASyI,UAAqB5S,KAAKkK,MAAMzJ,QAAUT,KAAKmK,SAASyI,QAC/E,CAOA,mBAAA0M,CAAoBiK,EAAO,CAAC,GAC1B,MAAMxoB,EAAOf,KACb,IAAI0X,EAAQ2F,EACZ,MAAMmM,EAAezoB,EAAKiC,MAAM4K,cAAc,oBAC9C,GAAI7M,EAAK6Z,cAAe,CACtB,MAAMnC,EAAW,GACXgR,EAAe1oB,EAAKiC,MAAMyjB,iBAAiB,kBAAkBhmB,OACnE,SAASipB,EAAY7D,EAAWrjB,EAAO6a,GAiBrC,OAhBKwI,IACHA,EAAY3Y,EAAO,kBAAoB+H,EAAYzS,GAAS,KAAOyS,EAAYoI,GAAS,cAKtFwI,GAAa2D,GACfzoB,EAAKiC,MAAM8T,OAAO+O,GAEpBpN,EAASpY,KAAKwlB,IAIVA,GAAa2D,GAAgBC,EAAe,KAC9C5D,EAAUpN,UAAW,GAEhBoN,CACT,CAGA9kB,EAAKiC,MAAMyjB,iBAAiB,kBAAkB7mB,SAAQimB,IACpDA,EAAUpN,UAAW,CAAK,IAIH,GAArB1X,EAAKmJ,MAAMzJ,QAAqC,UAAtBM,EAAKoJ,SAAS8J,KAC1CyV,EAAYF,EAAc,GAAI,IAI9BzoB,EAAKmJ,MAAMtK,SAAQ4C,IACjBkV,EAAS3W,EAAKiK,QAAQxI,GACtB6a,EAAQ3F,EAAO3W,EAAKoJ,SAASsJ,aAAe,GACxCgF,EAASsN,SAASrO,EAAOc,SAE3BkR,EADkB3oB,EAAKiC,MAAM4K,cAAc,iBAAiBiJ,GAAWrU,sBAChDA,EAAO6a,GAE9B3F,EAAOc,QAAUkR,EAAYhS,EAAOc,QAAShW,EAAO6a,EACtD,GAGN,MACEtc,EAAKiC,MAAMR,MAAQzB,EAAK0hB,WAEtB1hB,EAAK2a,UACF6N,EAAK7G,QACR3hB,EAAKF,QAAQ,SAAUE,EAAK0hB,YAGlC,CAMA,IAAAtB,GACE,IAAIpgB,EAAOf,KACPe,EAAKwa,UAAYxa,EAAKka,QAAiC,UAAvBla,EAAKoJ,SAAS8J,MAAoBlT,EAAK6nB,WAC3E7nB,EAAKka,QAAS,EACdhL,EAAQlP,EAAK0Z,WAAY,CACvB,gBAAiB,SAEnB1Z,EAAKse,eACLjR,EAASrN,EAAKuZ,SAAU,CACtBqP,WAAY,SACZC,QAAS,UAEX7oB,EAAKie,mBACL5Q,EAASrN,EAAKuZ,SAAU,CACtBqP,WAAY,UACZC,QAAS,UAEX7oB,EAAKwc,QACLxc,EAAKF,QAAQ,gBAAiBE,EAAKuZ,UACrC,CAKA,KAAAkF,CAAMgD,GAAkB,GACtB,IAAIzhB,EAAOf,KACPa,EAAUE,EAAKka,OACfuH,IAEFzhB,EAAKyhB,kBACsB,WAAvBzhB,EAAKoJ,SAAS8J,MAAqBlT,EAAKmJ,MAAMzJ,QAChDM,EAAK+d,cAGT/d,EAAKka,QAAS,EACdhL,EAAQlP,EAAK0Z,WAAY,CACvB,gBAAiB,UAEnBrM,EAASrN,EAAKuZ,SAAU,CACtBsP,QAAS,SAEP7oB,EAAKoJ,SAAS0I,cAChB9R,EAAKwhB,oBAEPxhB,EAAKse,eACDxe,GAASE,EAAKF,QAAQ,iBAAkBE,EAAKuZ,SACnD,CAOA,gBAAA0E,GACE,GAAqC,SAAjChf,KAAKmK,SAASqK,eAAlB,CAGA,IAAIqV,EAAU7pB,KAAKua,QACfuP,EAAOD,EAAQ7F,wBACfC,EAAM4F,EAAQ/F,aAAegG,EAAK7F,IAAM3H,OAAOyN,QAC/CC,EAAOF,EAAKE,KAAO1N,OAAO2N,QAC9B7b,EAASpO,KAAKsa,SAAU,CACtBoD,MAAOoM,EAAKpM,MAAQ,KACpBuG,IAAKA,EAAM,KACX+F,KAAMA,EAAO,MARf,CAUF,CAOA,KAAArH,CAAMD,GACJ,IAAI3hB,EAAOf,KACX,GAAKe,EAAKmJ,MAAMzJ,OAAhB,CACA,IAAIyJ,EAAQnJ,EAAKojB,kBACjBta,EAAUK,GAAO2C,IACf9L,EAAKonB,WAAWtb,GAAM,EAAK,IAE7B9L,EAAK+d,aACA4D,GAAQ3hB,EAAKue,sBAClBve,EAAKF,QAAQ,QAPiB,CAQhC,CAOA,aAAAgoB,CAAcha,GACZ,MAAM9N,EAAOf,KACP+oB,EAAQhoB,EAAKib,SACb3M,EAAStO,EAAKwZ,QACpBlL,EAAOwX,aAAahY,EAAIQ,EAAOsJ,SAASoQ,IAAU,MAClDhoB,EAAKmhB,SAAS6G,EAAQ,EACxB,CAMA,eAAApH,CAAgB7D,GACd,IAAIzR,EAAW6d,EAAWnB,EAAOoB,EA3vEhBnnB,EA4vEbjC,EAAOf,KACXqM,EAAYyR,GA/7EM,IA+7EDA,EAAEkD,SAA6B,EAAI,EACpDkJ,EA7vEK,CACLhnB,OAFiBF,EA8vEQjC,EAAKsZ,eA5vEjB+P,gBAAkB,EAC/B3pB,QAASuC,EAAMqnB,cAAgB,IAAMrnB,EAAMonB,gBAAkB,IA8vE7D,MAAME,EAAW,GACjB,GAAIvpB,EAAKmb,YAAYzb,OACnB0pB,EAAOxa,EAAQ5O,EAAKmb,YAAa7P,GACjC0c,EAAQlZ,EAAUsa,GACd9d,EAAY,GACd0c,IAEFlf,EAAU9I,EAAKmb,aAAarP,GAAQyd,EAASjqB,KAAKwM,UAC7C,IAAK9L,EAAKya,WAAoC,WAAvBza,EAAKoJ,SAAS8J,OAAsBlT,EAAKmJ,MAAMzJ,OAAQ,CACnF,MAAMyJ,EAAQnJ,EAAKojB,kBACnB,IAAIoG,EACAle,EAAY,GAAyB,IAApB6d,EAAUhnB,OAAoC,IAArBgnB,EAAUzpB,OACtD8pB,EAAUrgB,EAAMnJ,EAAKib,SAAW,GACvB3P,EAAY,GAAK6d,EAAUhnB,QAAUnC,EAAK2f,aAAajgB,SAChE8pB,EAAUrgB,EAAMnJ,EAAKib,gBAEPtb,IAAZ6pB,GACFD,EAASjqB,KAAKkqB,EAElB,CACA,IAAKxpB,EAAKypB,aAAaF,EAAUxM,GAC/B,OAAO,EAQT,IANA/H,GAAe+H,GAAG,QAGG,IAAViL,GACThoB,EAAKmhB,SAAS6G,GAETuB,EAAS7pB,QACdM,EAAKonB,WAAWmC,EAASriB,OAK3B,OAHAlH,EAAK+d,aACL/d,EAAKie,mBACLje,EAAK8gB,gBAAe,IACb,CACT,CAKA,YAAA2I,CAAatgB,EAAO8L,GAClB,MAAMkD,EAAShP,EAAMhE,KAAI2G,GAAQA,EAAKoL,QAAQzV,QAG9C,SAAK0W,EAAOzY,QAA4C,mBAA3BT,KAAKmK,SAASsgB,WAAmE,IAAxCzqB,KAAKmK,SAASsgB,SAASvR,EAAQlD,GAIvG,CASA,gBAAA0L,CAAiBrV,EAAWyR,GAC1B,IAAIuF,EACFqH,EACA3pB,EAAOf,KACLe,EAAK8Z,MAAKxO,IAAc,GACxBtL,EAAK2f,aAAajgB,SAGlB4V,GAAUxE,EAAciM,IAAMzH,GAAU,WAAYyH,IAMlD4M,GALJrH,EAActiB,EAAKkiB,cAAc5W,IAE1BgX,EAAYtU,UAAUS,SAAS,UAGvBzO,EAAKsgB,YAAYgC,EAAahX,EAAW,QAFzCgX,EAMJhX,EAAY,EACVtL,EAAKsZ,cAAcsQ,mBAEnB5pB,EAAKsZ,cAAcrK,0BAG1B0a,EAAS3b,UAAUS,SAAS,WAC9BzO,EAAKqiB,iBAAiBC,GAExBtiB,EAAKoiB,mBAAmBuH,IAK1B3pB,EAAK6pB,UAAUve,GAEnB,CACA,SAAAue,CAAUve,GAAY,CAMtB,aAAA4W,CAAc5W,GACZ,IAAIgX,EAAcrjB,KAAKua,QAAQ3M,cAAc,gBAC7C,GAAIyV,EACF,OAAOA,EAET,IAAIpgB,EAASjD,KAAKua,QAAQkM,iBAAiB,WAC3C,OAAIxjB,EACK0M,EAAQ1M,EAAQoJ,QADzB,CAGF,CAUA,QAAA6V,CAAS2I,GACP7qB,KAAKgc,SAAWhc,KAAKkK,MAAMzJ,MAC7B,CAMA,eAAA0jB,GACE,OAAOthB,MAAMC,KAAK9C,KAAKua,QAAQkM,iBAAiB,kBAClD,CAMA,IAAAuC,GACEhpB,KAAK8qB,WAAU,EACjB,CAKA,MAAA5B,GACElpB,KAAK8qB,WAAU,EACjB,CAKA,SAAAA,CAAU9B,EAAOhpB,KAAKmb,YAAcnb,KAAKkb,YACvClb,KAAKub,SAAWyN,EAChBhpB,KAAKqf,cACP,CAMA,OAAAI,GACEzf,KAAK+qB,aAAY,GACjB/qB,KAAKwf,OACP,CAMA,MAAAI,GACE5f,KAAK+qB,aAAY,EACnB,CACA,WAAAA,CAAYxS,GACVvY,KAAKya,WAAWE,SAAWpC,GAAY,EAAIvY,KAAK2a,SAChD3a,KAAKkb,WAAa3C,EAClBvY,KAAKgD,MAAMuV,SAAWA,EACtBvY,KAAKqa,cAAc9B,SAAWA,EAC9BvY,KAAK8qB,WACP,CACA,WAAAnL,CAAYxE,GACVnb,KAAKmb,WAAaA,EAClBnb,KAAKgD,MAAM0c,SAAWvE,EACtBnb,KAAKqa,cAAcqF,SAAWvE,EAC9Bnb,KAAK8qB,WACP,CAOA,OAAAE,GACE,IAAIjqB,EAAOf,KACPkf,EAAiBne,EAAKme,eAC1Bne,EAAKF,QAAQ,WACbE,EAAKT,MACLS,EAAKwO,QAAQN,SACblO,EAAKuZ,SAASrL,SACdlO,EAAKiC,MAAMyK,UAAYyR,EAAezR,UACtC1M,EAAKiC,MAAM2X,SAAWuE,EAAevE,SACrC3L,EAAcjO,EAAKiC,MAAO,cAAe,wBACzCjC,EAAKga,kBACEha,EAAKiC,MAAMqZ,SACpB,CAOA,MAAAvH,CAAOmW,EAAczf,GACnB,IAAIU,EAAIyY,EACR,MAAM5jB,EAAOf,KACb,GAAkD,mBAAvCA,KAAKmK,SAAS2K,OAAOmW,GAC9B,OAAO,KAKT,KADAtG,EAAO5jB,EAAKoJ,SAAS2K,OAAOmW,GAAcvV,KAAK1V,KAAMwL,EAAMyJ,IAEzD,OAAO,KA0BT,GAxBA0P,EAAOzX,EAAOyX,GAGO,WAAjBsG,GAA8C,kBAAjBA,EAC3Bzf,EAAKzK,EAAKoJ,SAASuJ,eACrBzD,EAAQ0U,EAAM,CACZ,gBAAiB,SAGnB1U,EAAQ0U,EAAM,CACZ,kBAAmB,KAGG,aAAjBsG,IACT/e,EAAKV,EAAK4M,MAAMrX,EAAKoJ,SAASyJ,oBAC9B3D,EAAQ0U,EAAM,CACZ,aAAczY,IAEZV,EAAK4M,MAAMrX,EAAKoJ,SAASuJ,gBAC3BzD,EAAQ0U,EAAM,CACZ,gBAAiB,MAIF,WAAjBsG,GAA8C,SAAjBA,EAAyB,CACxD,MAAMzoB,EAAQwS,EAASxJ,EAAKzK,EAAKoJ,SAASqJ,aAC1CvD,EAAQ0U,EAAM,CACZ,aAAcniB,IAIK,SAAjByoB,GACF1c,EAAWoW,EAAM5jB,EAAKoJ,SAASmK,WAC/BrE,EAAQ0U,EAAM,CACZ,eAAgB,OAGlBpW,EAAWoW,EAAM5jB,EAAKoJ,SAASoK,aAC/BtE,EAAQ0U,EAAM,CACZzH,KAAM,SACNhR,GAAIV,EAAKya,MAIXza,EAAK+c,KAAO5D,EACZ5jB,EAAKiK,QAAQxI,GAASgJ,EAE1B,CACA,OAAOmZ,CACT,CAMA,OAAA/H,CAAQqO,EAAczf,GACpB,MAAMmZ,EAAO3kB,KAAK8U,OAAOmW,EAAczf,GACvC,GAAY,MAARmZ,EACF,KAAM,uBAER,OAAOA,CACT,CAQA,UAAA4C,GACE1d,EAAU7J,KAAKgL,SAAS0M,IAClBA,EAAO6Q,OACT7Q,EAAO6Q,KAAKtZ,gBACLyI,EAAO6Q,KAChB,GAEJ,CAMA,YAAAP,CAAaxlB,GACX,MAAMqjB,EAAY7lB,KAAK8lB,UAAUtjB,GAC7BqjB,GAAWA,EAAU5W,QAC3B,CAOA,SAAA6X,CAAU9jB,GACR,OAAOhD,KAAKmK,SAASmI,QAAUtP,EAAMvC,OAAS,GAAKT,KAAKmK,SAASqI,aAAakD,KAAK1V,KAAMgD,EAC3F,CASA,IAAAkoB,CAAKC,EAAMC,EAAQC,GACjB,IAAItqB,EAAOf,KACPsrB,EAAcvqB,EAAKqqB,GACvBrqB,EAAKqqB,GAAU,WACb,IAAInoB,EAAQsoB,EAKZ,MAJa,UAATJ,IACFloB,EAASqoB,EAAYtqB,MAAMD,EAAMP,YAEnC+qB,EAAaF,EAAOrqB,MAAMD,EAAMP,WACnB,YAAT2qB,EACKI,GAEI,WAATJ,IACFloB,EAASqoB,EAAYtqB,MAAMD,EAAMP,YAE5ByC,EACT,CACF,EAw3BF,OAfAoW,GAAUK,OAAO,mBAv1BjB,WACEvD,GAASnW,KAAKgD,MAAO,UAAU,KAC7BhD,KAAKof,MAAM,GAEf,IAo1BA/F,GAAUK,OAAO,oBAn0BjB,SAA2ByC,GACzB,IAAIpb,EAAOf,KACPwrB,EAAsBzqB,EAAKmd,eAC/Bnd,EAAKoJ,SAAS0I,cAAe,EAC7B,MAAM4Y,EAAYvnB,OAAOsI,OAAO,CAE9ByE,UAAW,qBAEXya,uBAAmBhrB,EACnBirB,yBAAqBjrB,GACpByb,GACH,IAAIyP,EAAgB,SAAuBC,EAAUC,GAC/CA,GACFD,EAASE,SAAU,EACfN,EAAUE,qBACZE,EAAS9c,UAAUE,UAAUwc,EAAUE,qBAErCF,EAAUC,mBACZG,EAAS9c,UAAU9J,OAAOwmB,EAAUC,qBAGtCG,EAASE,SAAU,EACfN,EAAUC,mBACZG,EAAS9c,UAAUE,UAAUwc,EAAUC,mBAErCD,EAAUE,qBACZE,EAAS9c,UAAU9J,OAAOwmB,EAAUE,qBAG1C,EAGIK,EAAiB,SAAwBtU,GAC3ClC,YAAW,KACT,IAAIqW,EAAWnU,EAAO9J,cAAc,SAAW6d,EAAUxa,WACrD4a,aAAoBI,kBACtBL,EAAcC,EAAUnU,EAAO3I,UAAUS,SAAS,YACpD,GACC,EACL,EAGAzO,EAAKmqB,KAAK,QAAS,kBAAkB,KACnC,IAAIgB,EAAqBnrB,EAAKoJ,SAAS2K,OAAO4C,OAC9C3W,EAAKoJ,SAAS2K,OAAO4C,OAAS,CAAClM,EAAMyJ,KACnC,IAAIkX,EAAWjf,EAAOgf,EAAmBxW,KAAK3U,EAAMyK,EAAMyJ,IACtD4W,EAAWte,SAASC,cAAc,SAClCie,EAAUxa,WACZ4a,EAAS9c,UAAU9J,IAAIwmB,EAAUxa,WAEnC4a,EAASzV,iBAAiB,SAAS,SAAUJ,GAC3CD,GAAeC,EACjB,IACA6V,EAAShW,KAAO,WAChB,MAAM2O,EAASzP,EAASvJ,EAAKzK,EAAKoJ,SAASqJ,aAG3C,OAFAoY,EAAcC,KAAarH,GAAUzjB,EAAKmJ,MAAMtJ,QAAQ4jB,IAAW,IACnE2H,EAASC,QAAQP,GACVM,CAAQ,CAChB,IAIHprB,EAAKb,GAAG,eAAesC,IACrB,IAAIkV,EAAS3W,EAAK+kB,UAAUtjB,GACxBkV,IAEFA,EAAO3I,UAAUE,OAAO,YACxB+c,EAAetU,GACjB,IAIF3W,EAAKb,GAAG,YAAYsC,IAClB,IAAIkV,EAAS3W,EAAK+kB,UAAUtjB,GACxBkV,GAEFsU,EAAetU,EACjB,IAIF3W,EAAKmqB,KAAK,UAAW,kBAAkB,CAAClV,EAAK0B,KAC3C,GAAIA,EAAO3I,UAAUS,SAAS,YAK5B,OAJAkI,EAAO3I,UAAUE,OAAO,YACxBlO,EAAKonB,WAAWzQ,EAAOO,QAAQzV,OAC/BzB,EAAK8gB,sBACL9L,GAAeC,GAAK,GAGtBwV,EAAoB9V,KAAK3U,EAAMiV,EAAK0B,GACpCsU,EAAetU,EAAO,GAE1B,IAwuBA2B,GAAUK,OAAO,gBAvtBjB,SAAuByC,GACrB,MAAMpb,EAAOf,KACPgL,EAAU9G,OAAOsI,OAAO,CAC5ByE,UAAW,eACXob,MAAO,YACP1H,KAAMnZ,GACG,eAAeA,EAAKyF,qBAAqBzF,EAAK6gB,yBAEtDlQ,GACHpb,EAAKb,GAAG,cAAc,KACpB,IAAIosB,EAASpf,EAAOlC,EAAQ2Z,KAAK3Z,IACjCshB,EAAOlW,iBAAiB,SAASJ,IAC3BjV,EAAKwa,WACTxa,EAAK4hB,QACsB,WAAvB5hB,EAAKoJ,SAAS8J,MAAqBlT,EAAKoJ,SAAS+I,kBACnDnS,EAAK8f,QAAQ,IAEf7K,EAAID,iBACJC,EAAIE,kBAAiB,IAEvBnV,EAAKwZ,QAAQhJ,YAAY+a,EAAO,GAEpC,IAksBAjT,GAAUK,OAAO,aA/pBjB,WACE,IAAI3Y,EAAOf,KACX,GAA2B,UAAvBe,EAAKoJ,SAAS8J,KAAkB,OACpC,IAAIsY,EAAYxrB,EAAKioB,KACjBwD,EAAczrB,EAAKmoB,OACvB,IACIuD,EADAC,GAAW,EAMf3rB,EAAKmqB,KAAK,QAAS,kBAAkB,KACnC,IAAIyB,EAAmB5rB,EAAKoJ,SAAS2K,OAAOjI,KAC5C9L,EAAKoJ,SAAS2K,OAAOjI,KAAO,CAACrB,EAAM0U,KACjC,MAAMrT,EAAOK,EAAOyf,EAAiBjX,KAAK3U,EAAMyK,EAAM0U,IACtDjQ,EAAQpD,EAAM,CACZ,UAAa,SAIf,MAUM+f,EAAW5W,IACfA,EAAID,iBACJlJ,EAAKkC,UAAU9J,IAAI,gBACnB4nB,EAAShgB,EAAM4f,EAAU,EAKrBI,EAAW,CAACC,EAAYC,KAxDhB,IAACC,EAAeC,EAC9BC,OAwDmBxsB,IAAbqsB,IAjDK,EAACC,EAAeC,KAC/B,EAAG,CACD,IAAIE,EAEJ,GAAIH,IADJC,EAAkC,OAAvBE,EAAWF,QAAmB,EAASE,EAASnd,wBAEzD,OAAO,CAEX,OAASid,GAAWA,EAAQjd,wBAC5B,OAAO,CAAK,EA0CFod,CAASL,EAAUlgB,IA1DKogB,EA2DFF,EAzDsB,OAArDG,GAFkBF,EA2DCF,GAzDmBpd,aAAuBwd,EAAsBrG,aAAaoG,EAASD,EAAcK,cAErG,EAACL,EAAeC,KACnC,IAAIK,EACmD,OAAtDA,EAAyBN,EAActd,aAAuB4d,EAAuBzG,aAAaoG,EAASD,EAAc,EAuDlHnG,CAAaiG,EAAYC,GAC3B,EAwBF,OANA5W,GAAStJ,EAAM,aA1CGmJ,IACX0W,GAAU3W,GAAeC,GAC9BA,EAAIE,iBAAiB,IAyCvBC,GAAStJ,EAAM,aAvCGmJ,IAChByW,EAAY5f,EACZ2I,YAAW,KACT3I,EAAKkC,UAAU9J,IAAI,cAAc,GAChC,EAAE,IAoCPkR,GAAStJ,EAAM,YAAa+f,GAC5BzW,GAAStJ,EAAM,WAAY+f,GAC3BzW,GAAStJ,EAAM,aA/BG,KAChBA,EAAKkC,UAAUE,OAAO,eAAe,IA+BvCkH,GAAStJ,EAAM,WArBC,KACd,IAAI0gB,EACJhgB,SAASkZ,iBAAiB,iBAAiB7mB,SAAQiP,GAAMA,EAAGE,UAAUE,OAAO,kBACjD,OAA3Bse,EAAad,IAAsBc,EAAWxe,UAAUE,OAAO,eAChEwd,OAAY/rB,EACZ,IAAIwY,EAAS,GACbnY,EAAKwZ,QAAQkM,iBAAiB,gBAAgB7mB,SAAQiP,IACpD,GAAIA,EAAGoJ,QAAQzV,MAAO,CACpB,IAAIA,EAAQqM,EAAGoJ,QAAQzV,MACnBA,GACF0W,EAAO7Y,KAAKmC,EAEhB,KAEFzB,EAAKsf,SAASnH,EAAO,IAQhBrM,CAAI,CACZ,IAEH9L,EAAKmqB,KAAK,UAAW,QAAQ,KAC3BwB,GAAW,EACJH,EAAU7W,KAAK3U,MAExBA,EAAKmqB,KAAK,UAAW,UAAU,KAC7BwB,GAAW,EACJF,EAAY9W,KAAK3U,KAE5B,IAilBAsY,GAAUK,OAAO,mBAhkBjB,SAA0ByC,GACxB,MAAMpb,EAAOf,KACPgL,EAAU9G,OAAOsI,OAAO,CAC5B6f,MAAO,WACPmB,YAAa,kBACbC,cAAe,wBACfC,WAAY,wBACZC,WAAY,wBACZhJ,KAAMnZ,GACG,eAAiBA,EAAKgiB,YAAtB,iBAA4DhiB,EAAKiiB,cAAjE,kBAA0GjiB,EAAKkiB,WAAa,KAAOliB,EAAK6gB,MAAxI,oBAA2K7gB,EAAKmiB,WAAhL,6BAERxR,GACHpb,EAAKb,GAAG,cAAc,KACpB,IAAIqmB,EAASrZ,EAAOlC,EAAQ2Z,KAAK3Z,IAC7B4iB,EAAarH,EAAO3Y,cAAc,IAAM5C,EAAQ2iB,YAChDC,GACFA,EAAWxX,iBAAiB,SAASJ,IACnCD,GAAeC,GAAK,GACpBjV,EAAKye,OAAO,IAGhBze,EAAKuZ,SAASuM,aAAaN,EAAQxlB,EAAKuZ,SAAS3M,WAAW,GAEhE,IA0iBA0L,GAAUK,OAAO,kBAzhBjB,WACE,IAAI3Y,EAAOf,KAUXe,EAAKmqB,KAAK,UAAW,YAAYL,IACJ,WAAvB9pB,EAAKoJ,SAAS8J,MAAsBlT,EAAKwZ,QAAQ/K,SAASzO,EAAKsZ,gBAGjEwQ,EAAUpoB,KAAKC,IAAI,EAAGD,KAAK+E,IAAIzG,EAAKmJ,MAAMzJ,OAAQoqB,MACnC9pB,EAAKib,UAAajb,EAAK2nB,WACpC3nB,EAAKojB,kBAAkBvkB,SAAQ,CAACgZ,EAAO/R,KACjCA,EAAIgkB,EACN9pB,EAAKsZ,cAAc8E,sBAAsB,cAAevG,GAExD7X,EAAKwZ,QAAQhJ,YAAYqH,EAC3B,IATJiS,EAAU9pB,EAAKmJ,MAAMzJ,OAavBM,EAAKib,SAAW6O,CAAO,IAEzB9pB,EAAKmqB,KAAK,UAAW,aAAa7e,IAChC,IAAKtL,EAAKya,UAAW,OAGrB,MAAM6H,EAActiB,EAAKkiB,cAAc5W,GACvC,GAAIgX,EAAa,CACf,MAAMC,EAAMzT,EAAUwT,GACtBtiB,EAAKmhB,SAAS7V,EAAY,EAAIiX,EAAM,EAAIA,GACxCviB,EAAKkhB,gBACLjT,EAAcqU,EAAa,cAG7B,MACEtiB,EAAKmhB,SAASnhB,EAAKib,SAAW3P,EAChC,GAEJ,IA8eAgN,GAAUK,OAAO,kBA7djB,WACE,MAAM3Y,EAAOf,KACbe,EAAKoJ,SAASuI,YAAa,EAE3B3R,EAAKmqB,KAAK,SAAU,SAAS,KAC3BnqB,EAAK0Z,WAAa1Z,EAAKwZ,QACvBhM,EAAWxN,EAAKsZ,cAAe,kBAC/B,MAAMwT,EAAM3gB,EAAO,qCACnB2gB,EAAI/W,OAAO/V,EAAKsZ,eAChBtZ,EAAKuZ,SAASuM,aAAagH,EAAK9sB,EAAKuZ,SAAS3M,YAG9C,MAAMgH,EAAczH,EAAO,qDAC3ByH,EAAYA,YAAc5T,EAAKoJ,SAASwK,aAAe,GACvD5T,EAAKwZ,QAAQzD,OAAOnC,EAAY,IAElC5T,EAAKb,GAAG,cAAc,KAEpBa,EAAKsZ,cAAcjE,iBAAiB,WAAWJ,IAE7C,OAAQA,EAAIgL,SACV,KAlsGQ,GAwsGN,OALIjgB,EAAKka,SACPlF,GAAeC,GAAK,GACpBjV,EAAKye,cAEPze,EAAKwf,mBAEP,KAlsGQ,EAmsGNxf,EAAK0Z,WAAWE,UAAY,EAGhC,OAAO5Z,EAAKsd,UAAU3I,KAAK3U,EAAMiV,EAAI,IAEvCjV,EAAKb,GAAG,QAAQ,KACda,EAAK0Z,WAAWE,SAAW5Z,EAAKma,YAAc,EAAIna,EAAK4Z,QAAQ,IAIjE5Z,EAAKb,GAAG,iBAAiB,KACvBa,EAAKsZ,cAAckD,OAAO,IAI5B,MAAMuQ,EAAc/sB,EAAKyd,OACzBzd,EAAKmqB,KAAK,UAAW,UAAUlV,IAC7B,IAAIA,GAAOA,EAAI+X,eAAiBhtB,EAAKsZ,cACrC,OAAOyT,EAAYpY,KAAK3U,EAAK,IAE/BoV,GAASpV,EAAKsZ,cAAe,QAAQ,IAAMtZ,EAAKyd,WAGhDzd,EAAKmqB,KAAK,SAAU,SAAS,KACtBnqB,EAAKka,QACVla,EAAK0Z,WAAW8C,MAAM,CACpByQ,eAAe,GACf,GACF,GAEN,IAmaA3U,GAAUK,OAAO,kBAnZjB,WACE,IAAI3Y,EAAOf,KACXe,EAAKb,GAAG,cAAc,KACpB,IAAI+tB,EAAa1gB,SAASC,cAAc,QACpC+M,EAAUxZ,EAAKsZ,cACnB4T,EAAW3f,MAAM4f,QAAU,2FAC3BntB,EAAKwO,QAAQgC,YAAY0c,GAEzB,IAAK,MAAME,IADW,CAAC,gBAAiB,WAAY,aAAc,aAAc,iBAG9EF,EAAW3f,MAAM6f,GAAc5T,EAAQjM,MAAM6f,GAO/C,IAAIC,EAAS,KACXH,EAAWtW,YAAc4C,EAAQ/X,MACjC+X,EAAQjM,MAAMoP,MAAQuQ,EAAWI,YAAc,IAAI,EAErDD,IACArtB,EAAKb,GAAG,8BAA+BkuB,GACvCjY,GAASoE,EAAS,QAAS6T,GAC3BjY,GAASoE,EAAS,QAAS6T,GAC3BjY,GAASoE,EAAS,OAAQ6T,GAC1BjY,GAASoE,EAAS,SAAU6T,EAAO,GAEvC,IAwXA/U,GAAUK,OAAO,uBAxWjB,WACE,IAAI3Y,EAAOf,KACPsuB,EAAuBvtB,EAAK4gB,gBAChC3hB,KAAKkrB,KAAK,UAAW,mBAAmBlV,KAClCjV,EAAKmb,YAAYzb,QACZ6tB,EAAqB5Y,KAAK3U,EAAMiV,IAI7C,IAgWAqD,GAAUK,OAAO,mBAhVjB,WACE1Z,KAAKkrB,KAAK,UAAW,iBAAiB,SACtClrB,KAAKkrB,KAAK,UAAW,aAAa,QACpC,IA8UA7R,GAAUK,OAAO,oBA7TjB,WACE,IAAI3Y,EAAOf,KACPuuB,EAAextB,EAAKsd,UACxBtd,EAAKmqB,KAAK,UAAW,aAAalV,IAChC,IAAI5E,EAAOsG,EAAQ1M,EAAS6N,EAC5B,IAAK9X,EAAKka,QAr1GG,KAq1GSjF,EAAIgL,SAn1GZ,KAm1GoChL,EAAIgL,QACpD,OAAOuN,EAAa7Y,KAAK3U,EAAMiV,GAEjCjV,EAAK6a,aAAc,EACnB/C,EAAWzJ,EAAYrO,EAAKkb,aAAc,gBAC1C7K,EAAQvB,EAAU9O,EAAKkb,aAAc,qBAChCpD,IAIHA,EA/1GW,KA81GT7C,EAAIgL,QACKnI,EAAS2V,gBAET3V,EAASwU,eAMtB3V,GADA1M,EAAU6N,EAAS4N,iBAAiB,sBACnBhkB,KAAK+E,IAAIwD,EAAQvK,OAAS,EAAG2Q,MAE5CrQ,EAAKugB,gBAAgB5J,EACvB,GAEJ,IAkSA2B,GAAUK,OAAO,iBAjRjB,SAAwByC,GACtB,MAAMnR,EAAU9G,OAAOsI,OAAO,CAC5B6Q,MAAO,UACPgP,MAAO,SACPpb,UAAW,SACX6F,QAAQ,GACPqF,GAGH,IAAIpb,EAAOf,KAGX,GAAKgL,EAAQ8L,OAAb,CAGA,IAAI6N,EAAO,uCAAyC3Z,EAAQiG,UAAY,0BAA4BgE,EAAYjK,EAAQqhB,OAAS,KAAOrhB,EAAQqS,MAAQ,OACxJtc,EAAKmqB,KAAK,QAAS,kBAAkB,KACnC,IAAIyB,EAAmB5rB,EAAKoJ,SAAS2K,OAAOjI,KAC5C9L,EAAKoJ,SAAS2K,OAAOjI,KAAO,CAACrB,EAAM0U,KACjC,IAAIrT,EAAOK,EAAOyf,EAAiBjX,KAAK3U,EAAMyK,EAAM0U,IAChDuO,EAAevhB,EAAOyX,GAgB1B,OAfA9X,EAAK0E,YAAYkd,GACjBtY,GAASsY,EAAc,aAAazY,IAClCD,GAAeC,GAAK,EAAK,IAE3BG,GAASsY,EAAc,SAASzY,IAC1BjV,EAAKwa,WAGTxF,GAAeC,GAAK,GAChBjV,EAAKwa,UACJxa,EAAKypB,aAAa,CAAC3d,GAAOmJ,KAC/BjV,EAAKonB,WAAWtb,GAChB9L,EAAK8gB,gBAAe,GACpB9gB,EAAK+d,cAAY,IAEZjS,CAAI,CACZ,GAvBH,CAyBF,IA2OAwM,GAAUK,OAAO,wBA1NjB,SAA+ByC,GAC7B,MAAMpb,EAAOf,KACPgL,EAAU9G,OAAOsI,OAAO,CAC5BkiB,KAAMhX,GACGA,EAAO3W,EAAKoJ,SAASsJ,aAE7B0I,GACHpb,EAAKb,GAAG,eAAe,SAAUsC,GAC/B,GAAKzB,EAAKya,WAG8B,KAApCza,EAAKsZ,cAAc7X,MAAMiK,OAAe,CAC1C,IAAIiL,EAAS3W,EAAKiK,QAAQxI,GACtBkV,GACF3W,EAAKyhB,gBAAgBxX,EAAQ0jB,KAAKhZ,KAAK3U,EAAM2W,GAEjD,CACF,GACF,IAyMA2B,GAAUK,OAAO,kBAxLjB,WACE,MAAM3Y,EAAOf,KACP2uB,EAAe5tB,EAAKshB,QACpBuM,EAAyB7tB,EAAKwhB,kBAC9BsM,EAAoB9tB,EAAKuhB,aAC/B,IACI9H,EAEAsU,EAHAC,EAAa,CAAC,EAEdC,GAAe,EAEfC,EAAiB,GAkBrB,GAjBKluB,EAAKoJ,SAAS+kB,iBAEjBnuB,EAAKoJ,SAAS+kB,eAAiB,KAE7B,GADuB1U,EAAiBmJ,cAAgBnJ,EAAiB2U,aAAe3U,EAAiBoJ,WACpF,GACnB,OAAO,EAET,GAAI7iB,EAAKkb,aAAc,CACrB,IAAI+K,EAAajmB,EAAKimB,aAEtB,GADYnkB,MAAMC,KAAKkkB,GAAYpmB,QAAQG,EAAKkb,eACnC+K,EAAWvmB,OAAS,EAC/B,OAAO,CAEX,CACA,OAAO,CAAK,IAGXM,EAAKoJ,SAASilB,SACjB,KAAM,qDAKRruB,EAAKoJ,SAAS2J,UAAY,CAAC,CACzBhJ,MAAO,UACN,CACDA,MAAO,WAIT,MAAMukB,EAAc/kB,KACsB,iBAA7BvJ,EAAKoJ,SAASwI,YAA2B6H,EAAiB7B,SAASlY,QAAUM,EAAKoJ,SAASwI,cAGlGrI,KAASykB,KAAcA,EAAWzkB,IAKlCge,EAAc,CAAC5Q,EAAQlV,IACvBzB,EAAKmJ,MAAMtJ,QAAQ4B,IAAU,GAAKysB,EAAeruB,QAAQ4B,IAAU,EAOzEzB,EAAKuuB,WAAa,CAAC9sB,EAAO+sB,KACxBR,EAAWvsB,GAAS+sB,CAAQ,EAI9BxuB,EAAKyuB,OAASllB,IACZ,GAAIA,KAASykB,EAAY,CACvB,MAAMQ,EAAWR,EAAWzkB,GAE5B,OADAykB,EAAWzkB,IAAS,EACbilB,CACT,CAKA,OADAxuB,EAAK0uB,kBACE1uB,EAAKoJ,SAASilB,SAAS1Z,KAAK3U,EAAMuJ,EAAM,EAIjDvJ,EAAK0uB,gBAAkB,KACrBV,EAAa,CAAC,CAAC,EAKjBhuB,EAAKmqB,KAAK,UAAW,qBAAqB,KACxC,IAAI8D,EAGJ,OAAOJ,EAAuBlZ,KAAK3U,EAAK,IAI1CA,EAAKmqB,KAAK,UAAW,WAAW5gB,GAExBA,KAASykB,EAGRM,EAAY/kB,GAFVqkB,EAAajZ,KAAK3U,EAAMuJ,KAMnCvJ,EAAKmqB,KAAK,UAAW,gBAAgB,CAAClgB,EAASiH,KAC7C,GAAK+c,GAEE,GAAIF,EAAe,CACxB,MAAMY,EAAe1kB,EAAQ,QACRtK,IAAjBgvB,IACFZ,EAAc7W,QAAQzV,MAAQktB,EAAa3uB,EAAKoJ,SAASqJ,YAE7D,OANEzS,EAAKqnB,aAAaE,GAOpBuG,EAAkBnZ,KAAK3U,EAAMiK,EAASiH,GACtC+c,GAAe,CAAK,IAMtBjuB,EAAKmqB,KAAK,QAAS,kBAAkB,KACnC,MAAM5gB,EAAQvJ,EAAKgb,UACnB,IAAIrE,EACA2X,EAAY/kB,IACdoN,EAAS3W,EAAK+T,OAAO,eAAgB,CACnCxK,MAAOA,OAGPoN,EAAOpH,aAAa,kBAAmB,IACvCwe,EAAgBpX,GAETpN,KAASykB,IAAevU,EAAiB5M,cAAc,iBAChE8J,EAAS3W,EAAK+T,OAAO,kBAAmB,CACtCxK,MAAOA,KAGPoN,IACFnJ,EAAWmJ,EAAQ3W,EAAKoJ,SAASoK,aACjCiG,EAAiB1D,OAAOY,GAC1B,IAIF3W,EAAKb,GAAG,cAAc,KACpB+uB,EAAiB/qB,OAAOC,KAAKpD,EAAKiK,SAClCwP,EAAmBzZ,EAAKyZ,iBAGxBzZ,EAAKoJ,SAAS2K,OAAS5Q,OAAOsI,OAAO,CAAC,EAAG,CACvCwiB,aAAc,IACL,oEAETW,gBAAiB,IACR,sDAER5uB,EAAKoJ,SAAS2K,QAGjB0F,EAAiBpE,iBAAiB,UAAU,KACrCrV,EAAKoJ,SAAS+kB,eAAexZ,KAAK3U,IAKlCsuB,EAAYtuB,EAAKgb,aAKlBiT,IACJA,GAAe,EACfjuB,EAAK8c,KAAKnI,KAAK3U,EAAMA,EAAKgb,YAAU,GACpC,GAEN,IAiBO1C,EAEP,CAzqKgFuW,yBCNjFtwB,EAAOC,QAAUswB,SCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBtvB,IAAjBuvB,EACH,OAAOA,EAAa1wB,QAGrB,IAAID,EAASwwB,EAAyBE,GAAY,CAGjDzwB,QAAS,CAAC,GAOX,OAHA2wB,EAAoBF,GAAUta,KAAKpW,EAAOC,QAASD,EAAQA,EAAOC,QAASwwB,GAGpEzwB,EAAOC,OACf,CCrBAwwB,EAAoBxvB,EAAKjB,IACxB,IAAI6wB,EAAS7wB,GAAUA,EAAO8wB,WAC7B,IAAO9wB,EAAiB,QACxB,IAAM,EAEP,OADAywB,EAAoBM,EAAEF,EAAQ,CAAEtqB,EAAGsqB,IAC5BA,CAAM,ECLdJ,EAAoBM,EAAI,CAAC9wB,EAAS+wB,KACjC,IAAI,IAAI3mB,KAAO2mB,EACXP,EAAoBQ,EAAED,EAAY3mB,KAASomB,EAAoBQ,EAAEhxB,EAASoK,IAC5EzF,OAAOssB,eAAejxB,EAASoK,EAAK,CAAE8mB,YAAY,EAAMC,IAAKJ,EAAW3mB,IAE1E,ECNDomB,EAAoBQ,EAAI,CAAC1nB,EAAK8nB,IAAUzsB,OAAOgf,UAAUnZ,eAAe2L,KAAK7M,EAAK8nB,kRCa3E,SAASC,IAAyE,IAA/DC,EAAQrwB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMgL,EAAIhL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMswB,EAAStwB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAMuwB,EAAMvwB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAE1D,CAAE,oBAAqB,mBAAoB,yBAA0B,oBAAqB,2BAA4B,6BAA8B,uBAGrJulB,SAAU8K,GAE1BG,IAAAA,KAAO,CACH5F,OAAQ,OACR6F,IAAQC,kBAAkBC,QAAUN,EAAW,IAC/CrlB,KAAQwlB,IAAAA,MAASxlB,GAAS,IAAMwlB,IAAAA,MAAQ,CAAEI,WAAY,IAGtDC,WAAY,SAAUC,GAClBA,EAAIC,iBAAkB,aAAcL,kBAAkBM,MAC1D,EAEAC,QAAS,SAAUC,GAEVC,EAAWb,IAEZA,EAAWY,EAEnB,EAEAE,WAAY,CACR,IAAK,WACDC,SAASC,QACb,GAGJC,KAAM,SAAWL,GACRC,EAAWZ,IACZA,EAAQW,EAEhB,IAIJM,QAAQC,MAAM,OAAD9iB,OAAU0hB,EAAQ,6BAEvC,CASO,IAAMc,EAAY,SAAEO,GAEvB,OAAO,MAAOA,CAClB,EASaC,EAAU,SAAED,GACrB,IAAIR,GAAW,EAgBf,OAbKC,EAAWO,KAGRR,EADCQ,EAAStoB,QACoB,GAAnBsoB,EAASzxB,OAEd2xB,EAAUF,GACLhuB,OAAOC,KAAM+tB,GAAWzxB,OAGZ,IAAZyxB,GAIZR,CACX,EASaU,EAAW,SAAEF,GACtB,MAA2B,WAApBG,EAAOH,IAAsC,OAAbA,CAC3C,81CCsMA,QAxSe,WAab,SAZD,SAAAI,iGAAaC,CAAA,KAAAD,GAEZtyB,KAAKwyB,cAGAxyB,KAAKyyB,sBAETzyB,KAAK0yB,gBAGL1yB,KAAK2yB,gBAEP,KAAC,EAAAhpB,IAAA,cAAAnH,MAED,WAECxC,KAAK4yB,UAAY,CAChBC,MAAO7B,EAAG,qBAEZ,GAAC,CAAArnB,IAAA,gBAAAnH,MAED,WAAe,IAAAswB,EAAA,KAGd9yB,KAAK4yB,UAAUC,MAAM3yB,GAAI,QAAS,mCAAmC,SAAEL,GAEtEA,EAAMkW,iBAGN,IAAMgd,EAAc/B,EAAGnxB,EAAMmzB,eAGvBC,EAAOF,EAAY3N,QAAS,MAKlC6N,EAAKC,KAAM,iBAAkBC,YAAa,iCAG1C,IAAMC,EAAU,CACfC,KAAWJ,EAAKC,KAAM,sBACtBI,MAAWL,EAAKC,KAAM,wBACtBK,IAAWN,EAAKC,KAAM,qBACtBM,KAAWP,EAAKC,KAAM,sBACtBO,OAAWR,EAAKC,KAAM,yBAIjBQ,EAAc,CACnBL,KAAWD,EAAQC,KAAKljB,MACxBmjB,MAAWF,EAAQE,MAAMnjB,MACzBojB,IAAWH,EAAQG,IAAIpjB,MACvBqjB,KAAWJ,EAAQI,KAAKrjB,MACxBsjB,OAAWL,EAAQK,OAAOtjB,OAIrB3E,EAAImoB,EAAAA,EAAA,GACN,CACFC,SAAWX,EAAKznB,KAAM,SACtBqoB,QAAWZ,EAAKznB,KAAM,QACtBsoB,UAAWb,EAAKznB,KAAM,UAEtBuoB,OAAW,SAETL,GAMApY,GAAU,EAGd,IAAM,IAAI0Y,KAAWN,EAAa,EAE5BvB,EAASuB,EAAaM,KAAeC,MAAOC,SAAUR,EAAaM,QAEvE1Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAG9B,IAAIC,EAAaF,SAAUd,EAASY,GAAU,GAAGxxB,OAEjD,OAAOwxB,GACN,IAAK,QACAI,EAAa,MAAQA,EAAa,QAErC9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,SACe,IAAfC,GAAoBA,EAAa,MAEpC9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,OACe,IAAfC,GAAoBA,EAAa,MAEpC9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,OACCC,EAAa,KAEjB9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,SACCC,EAAa,KAEjB9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAIjC,CAGK7Y,IAEJ2X,EAAKkB,SAAU,iCACfpB,EAAYoB,SAAU,+BAGtBvD,EAAU,mBAAoBplB,GAAM,SAAEkmB,GAMrC,GAJAuB,EAAKE,YAAa,iCAClBJ,EAAYI,YAAa,+BAGpBzB,EAASD,QAAS,CAEtBwB,EAAKkB,SAAU,iCACfnC,QAAQqC,IAAI7oB,GACZ,IAAI8oB,EAAO9oB,EAAK6nB,KAAO,IAAM7nB,EAAK8nB,MAAQ,IAAM9nB,EAAK+nB,IAAM,IAAM/nB,EAAKgoB,KAAO,IAAMhoB,EAAKioB,OAAS,MAE7Fc,EAAa,IAAIC,KAAKF,GAAOG,UACjCxB,EAAKznB,KAAK,OAAO+oB,GAEjBzB,EAAKF,UAAU8B,UAAUC,MAAK,EAC/B,MAGC1B,EAAKkB,SAAU,+BACfS,MAAO,mBAAqBlD,EAASlmB,KAAKqpB,SAI3Crf,YAAW,WAEVyd,EAAKE,YAAa,6DAClBtB,SAASC,QACV,GAAG,IACJ,IAAG,SAAEJ,GAEJuB,EAAKkB,SAAU,+BAGf3e,YAAW,WAEVyd,EAAKE,YAAa,6DAClBtB,SAASC,QACV,GAAG,IACJ,IAEF,IAGA9xB,KAAK4yB,UAAU8B,UAAUx0B,GAAI,QAAS,qCAAqC,SAAEL,GAE5EA,EAAMkW,iBAGN,IAAM+e,EAAgB9D,EAAGnxB,EAAMmzB,eAGzBC,EAAO6B,EAAc1P,QAAS,MAG9B5Z,EAAO,CACZooB,SAAUX,EAAKznB,KAAM,SACrBqoB,QAAUZ,EAAKznB,KAAM,QACrBsoB,UAAUb,EAAKznB,KAAM,UAErBuoB,OAAU,UAIXd,EAAKkB,SAAU,iCACfW,EAAcX,SAAU,+BAGxBvD,EAAU,mBAAoBplB,GAAM,SAAEkmB,GAErCuB,EAAKE,YAAa,iCAClB2B,EAAc3B,YAAa,+BAGtBzB,EAASD,SAEbwB,EAAKkB,SAAU,iCACflB,EAAKC,KAAK,SAAS/iB,IAAI,IACvB8iB,EAAKC,KAAK,UAAUvC,KAAK,gBAAiB,GAC1CsC,EAAKznB,KAAK,OAAO,GACjBsnB,EAAKF,UAAU8B,UAAUC,MAAK,IAI9B1B,EAAKkB,SAAU,+BAIhB3e,YAAW,WAEVyd,EAAKE,YAAa,4DACnB,GAAG,IACJ,IAAG,SAAEzB,GAEJuB,EAAKkB,SAAU,+BAGf3e,YAAW,WAEVyd,EAAKE,YAAa,4DACnB,GAAG,IACJ,GACD,GACD,GAAC,CAAAxpB,IAAA,gBAAAnH,MAED,WAECxC,KAAK4yB,UAAUC,MAAM3yB,GAAI,WAAW,WACnC60B,eACD,IAEA/0B,KAAK4yB,UAAU8B,UAAY10B,KAAK4yB,UAAUC,MAAMmC,UAAU,CACzDC,UAAW,CACV,CACCC,WAAW,EACXC,aAAa,GAEd,CACCD,WAAW,EACXC,aAAa,EACbC,UAAW,CAAE,GACbC,QAAS,CAAE,IAEZ,CACCH,WAAW,EACXI,UAAU,EACVC,MAAO,UACPF,QAAS,CAAE,IAEZ,CACCH,WAAW,EACXI,UAAU,GAEX,CACCJ,WAAW,IAGbxa,MAAO,CACN,CAAE,EAAG,QAEN8a,WAAY,CACX,CAAE,GAAI,GAAI,KAAM,GAChB,CAAE,GAAI,GAAI,IAAKtE,kBAAkBuE,KAAKhvB,OAGzC,GAAC,CAAAkD,IAAA,oBAAAnH,MAED,WACC,OAAOxC,KAAK4yB,UAAUC,MAAMpyB,OAAS,CACtC,mFAAC,CArSa,m2CCwSf,QAxSoB,WAalB,SAZD,SAAAi1B,iGAAanD,CAAA,KAAAmD,GAEZ11B,KAAKwyB,cAGAxyB,KAAKyyB,sBAETzyB,KAAK0yB,gBAGL1yB,KAAK2yB,gBAEP,KAAC,EAAAhpB,IAAA,cAAAnH,MAED,WAECxC,KAAK4yB,UAAY,CAChBC,MAAO7B,EAAG,2BAEZ,GAAC,CAAArnB,IAAA,gBAAAnH,MAED,WAAe,IAAAswB,EAAA,KAGd9yB,KAAK4yB,UAAUC,MAAM3yB,GAAI,QAAS,yCAAyC,SAAEL,GAE5EA,EAAMkW,iBAGN,IAAMgd,EAAc/B,EAAGnxB,EAAMmzB,eAGvBC,EAAOF,EAAY3N,QAAS,MAKlC6N,EAAKC,KAAM,iBAAkBC,YAAa,iCAG1C,IAAMC,EAAU,CACfC,KAAWJ,EAAKC,KAAM,sBACtBI,MAAWL,EAAKC,KAAM,wBACtBK,IAAWN,EAAKC,KAAM,qBACtBM,KAAWP,EAAKC,KAAM,sBACtBO,OAAWR,EAAKC,KAAM,yBAIjBQ,EAAc,CACnBL,KAAWD,EAAQC,KAAKljB,MACxBmjB,MAAWF,EAAQE,MAAMnjB,MACzBojB,IAAWH,EAAQG,IAAIpjB,MACvBqjB,KAAWJ,EAAQI,KAAKrjB,MACxBsjB,OAAWL,EAAQK,OAAOtjB,OAIrB3E,EAAImoB,EAAAA,EAAA,GACN,CACFC,SAAWX,EAAKznB,KAAM,SACtBqoB,QAAWZ,EAAKznB,KAAM,QACtBsoB,UAAWb,EAAKznB,KAAM,UAEtBuoB,OAAW,SAETL,GAMApY,GAAU,EAGd,IAAM,IAAI0Y,KAAWN,EAAa,EAE5BvB,EAASuB,EAAaM,KAAeC,MAAOC,SAAUR,EAAaM,QAEvE1Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAG9B,IAAIC,EAAaF,SAAUd,EAASY,GAAU,GAAGxxB,OAEjD,OAAOwxB,GACN,IAAK,QACAI,EAAa,MAAQA,EAAa,QAErC9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,SACe,IAAfC,GAAoBA,EAAa,MAEpC9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,OACe,IAAfC,GAAoBA,EAAa,MAEpC9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,OACCC,EAAa,KAEjB9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAE9B,MACD,IAAK,SACCC,EAAa,KAEjB9Y,GAAU,EAGV8X,EAASY,GAAUG,SAAU,kCAIjC,CAGK7Y,IAEJ2X,EAAKkB,SAAU,uCACfpB,EAAYoB,SAAU,+BAGtBvD,EAAU,yBAA0BplB,GAAM,SAAEkmB,GAM3C,GAJAuB,EAAKE,YAAa,uCAClBJ,EAAYI,YAAa,+BAGpBzB,EAASD,QAAS,CAEtBwB,EAAKkB,SAAU,uCACfnC,QAAQqC,IAAI7oB,GACZ,IAAI8oB,EAAO9oB,EAAK6nB,KAAO,IAAM7nB,EAAK8nB,MAAQ,IAAM9nB,EAAK+nB,IAAM,IAAM/nB,EAAKgoB,KAAO,IAAMhoB,EAAKioB,OAAS,MAE7Fc,EAAa,IAAIC,KAAKF,GAAOG,UACjCxB,EAAKznB,KAAK,OAAO+oB,GAEjBzB,EAAKF,UAAU8B,UAAUC,MAAK,EAC/B,MAGC1B,EAAKkB,SAAU,qCACfS,MAAO,mBAAqBlD,EAASlmB,KAAKqpB,SAI3Crf,YAAW,WAEVyd,EAAKE,YAAa,yEAClBtB,SAASC,QACV,GAAG,IACJ,IAAG,SAAEJ,GAEJuB,EAAKkB,SAAU,qCAGf3e,YAAW,WAEVyd,EAAKE,YAAa,yEAClBtB,SAASC,QACV,GAAG,IACJ,IAEF,IAGA9xB,KAAK4yB,UAAU8B,UAAUx0B,GAAI,QAAS,2CAA2C,SAAEL,GAElFA,EAAMkW,iBAGN,IAAM+e,EAAgB9D,EAAGnxB,EAAMmzB,eAGzBC,EAAO6B,EAAc1P,QAAS,MAG9B5Z,EAAO,CACZooB,SAAUX,EAAKznB,KAAM,SACrBqoB,QAAUZ,EAAKznB,KAAM,QACrBsoB,UAAUb,EAAKznB,KAAM,UAErBuoB,OAAU,UAIXd,EAAKkB,SAAU,uCACfW,EAAcX,SAAU,+BAGxBvD,EAAU,yBAA0BplB,GAAM,SAAEkmB,GAE3CuB,EAAKE,YAAa,uCAClB2B,EAAc3B,YAAa,+BAGtBzB,EAASD,SAEbwB,EAAKkB,SAAU,uCACflB,EAAKC,KAAK,SAAS/iB,IAAI,IACvB8iB,EAAKC,KAAK,UAAUvC,KAAK,gBAAiB,GAC1CsC,EAAKznB,KAAK,OAAO,GACjBsnB,EAAKF,UAAU8B,UAAUC,MAAK,IAI9B1B,EAAKkB,SAAU,qCAIhB3e,YAAW,WAEVyd,EAAKE,YAAa,wEACnB,GAAG,IACJ,IAAG,SAAEzB,GAEJuB,EAAKkB,SAAU,qCAGf3e,YAAW,WAEVyd,EAAKE,YAAa,wEACnB,GAAG,IACJ,GACD,GACD,GAAC,CAAAxpB,IAAA,gBAAAnH,MAED,WAECxC,KAAK4yB,UAAUC,MAAM3yB,GAAI,WAAW,WACnC60B,eACD,IAEA/0B,KAAK4yB,UAAU8B,UAAY10B,KAAK4yB,UAAUC,MAAMmC,UAAU,CACzDC,UAAW,CACV,CACCC,WAAW,EACXC,aAAa,GAEd,CACCD,WAAW,EACXC,aAAa,EACbC,UAAW,CAAE,GACbC,QAAS,CAAE,IAEZ,CACCH,WAAW,EACXI,UAAU,EACVC,MAAO,UACPF,QAAS,CAAE,IAEZ,CACCH,WAAW,EACXI,UAAU,GAEX,CACCJ,WAAW,IAGbxa,MAAO,CACN,CAAE,EAAG,QAEN8a,WAAY,CACX,CAAE,GAAI,GAAI,KAAM,GAChB,CAAE,GAAI,GAAI,IAAKtE,kBAAkBuE,KAAKhvB,OAGzC,GAAC,CAAAkD,IAAA,oBAAAnH,MAED,WACC,OAAOxC,KAAK4yB,UAAUC,MAAMpyB,OAAS,CACtC,mFAAC,CArSkB,orBCNpB,IAAM4Y,EAAYS,EAAS,KAuF3B,QArFwB,WAgBtB,SAfD,SAAA6b,iGAAapD,CAAA,KAAAoD,GAEZ31B,KAAKwyB,cAGLxyB,KAAK41B,cAGL51B,KAAK61B,gCAGL71B,KAAK81B,kCAGL91B,KAAK+1B,2BACN,KAAC,EAAApsB,IAAA,cAAAnH,MAED,WAECxC,KAAK4yB,UAAY,CAChBoD,QAA2BhF,EAAG,yBAC9BiF,uBAA2BjF,EAAG,iDAC9BkF,0BAA2BlF,EAAG,8CAC9BmF,gBAA2BnF,EAAG,sCAC9BoF,QAA2BpF,EAAG,wCAEhC,GAAC,CAAArnB,IAAA,cAAAnH,MAED,WAICwuB,EAAEqF,KAAMr2B,KAAK4yB,UAAUwD,SAAS,SAAEhlB,EAAOklB,GACxC,IAAIjd,EAAWid,EAAS,CACXpkB,QAAS,CAAE,kBAAmB,sBAAuB,kBAEnE,GACD,GAAC,CAAAvI,IAAA,gCAAAnH,MAED,WAA+B,IAAAswB,EAAA,KAE9B9yB,KAAK4yB,UAAUqD,uBAAuB/1B,GAAI,UAAU,SAAEL,GAEhDizB,EAAKF,UAAUqD,uBAAuBM,GAAI,YAE9CzD,EAAKF,UAAUoD,QAAQ7B,SAAU,iCAIjCrB,EAAKF,UAAUoD,QAAQ7C,YAAa,gCAEtC,GACD,GAAC,CAAAxpB,IAAA,kCAAAnH,MAED,WAAiC,IAAAg0B,EAAA,KAEhCx2B,KAAK4yB,UAAUsD,0BAA0Bh2B,GAAI,UAAU,SAAEL,GAEnD22B,EAAK5D,UAAUsD,0BAA0BK,GAAI,YAEjDC,EAAK5D,UAAUoD,QAAQ7B,SAAU,4CAIjCqC,EAAK5D,UAAUoD,QAAQ7C,YAAa,2CAEtC,GACD,GAAC,CAAAxpB,IAAA,4BAAAnH,MAED,WAA2B,IAAAi0B,EAAA,KAE1Bz2B,KAAK4yB,UAAUuD,gBAAgBj2B,GAAI,UAAU,SAAEL,GAE9C,IAAM62B,EAAgBD,EAAK7D,UAAUuD,gBAAgBh1B,OAAQ,YAAagP,MAG1EsmB,EAAK7D,UAAUoD,QAAQ7C,YAAa,uFAGpCsD,EAAK7D,UAAUoD,QAAQ7B,SAAS,qCAADhlB,OAAwCunB,GACxE,GACD,mFAAC,CAlFsB,orBCuDxB,QAnDkB,WAUhB,SATD,SAAAC,iGAAapE,CAAA,KAAAoE,GAEZ32B,KAAKwyB,cAG2C,GAA3CxyB,KAAK4yB,UAAUgE,kBAAkBn2B,QAErCT,KAAK62B,YAEP,KAAC,EAAAltB,IAAA,cAAAnH,MAED,WACCxC,KAAK4yB,UAAY,CAChBgE,kBAAmB5F,EAAG,qCAExB,GAAC,CAAArnB,IAAA,aAAAnH,MAED,WAECxC,KAAK4yB,UAAUgE,kBAAkB12B,GAAI,SAAS,SAAEL,GAE/CA,EAAMkW,iBAGN,IAAM+gB,EAAiB9F,EAAGnxB,EAAMmzB,eAAgB5N,QAAS,wCAGzD0R,EAAe3C,SAAU,gDAGzBvD,EAAU,2BAA4B,CACrCmD,OAAQ,iBACN,SAAErC,GAECA,EAASD,QAEbqF,EAAe7nB,SAIf6nB,EAAe3D,YAAa,+CAE9B,IAAG,WAEF2D,EAAe3D,YAAa,+CAC7B,GACD,GACD,mFAAC,CAhDgB,k5BCyElB,QA7EwB,WAOnB,SAND,SAAA4D,iGAAcxE,CAAA,KAAAwE,GAEN/2B,KAAK6U,cAEL7U,KAAK2yB,eAEb,IAAC,EAAAhpB,IAAA,aAAAnH,MAED,WACI,MAA0C,oBAA/Bw0B,4BAA8CA,2BAA2Bv2B,OAAS,CAIjG,GAAC,CAAAkJ,IAAA,gBAAAnH,MAED,WAEIwuB,EAAEzjB,UAAU0pB,OAAM,WACd,GAAK,+BAAgCD,2BAA6B,CAC9D,IAAIE,EAAYF,2BAA2BG,2BACvC,IAAMD,GACNlG,EAAE,0DAA4DkG,EAAY,KAAKvG,KAAK,WAAY,WAExG,CACJ,IAGAK,EAAE,4CAA4CoG,QAAO,WAGjDv3B,MAAMkW,iBAGF,2BADWib,EAAEhxB,MAAMmQ,OAKvB6gB,EAAE,8CAA8CrM,KAC5C,uBAAyBqS,2BAA2BK,mBAAqB,YAEjF,IAGArG,EAAE,6CAA6CoG,QAAO,WAGlDv3B,MAAMkW,iBAEN,IAAImhB,EAAYlG,EAAEhxB,MAAMmQ,MAExB,GAAI,2BADW6gB,EAAE,4CAA4C7gB,MAC7D,CAIA,IAAM3E,idAAImoB,CAAA,GACH,CACCC,SAAUsD,IAIlBtG,EAAS,oBAAqBplB,GAAM,SAACkmB,GACjCA,EAAWA,EAASlmB,KAEpBwlB,EAAE,8CAA8CrM,KAC5C,oBAAsBqS,2BAA2BM,cAAjD,gCACyBN,2BAA2BO,YAAc,aAGtEvG,EAAEqF,KAAK3E,GAAU,SAAU5vB,EAAGqO,GAC1B6gB,EAAE,8CAA8Cla,OAAO,kBAAoBhV,EAAI,KAAOqO,EAAM,YAChG,GACJ,GAnBA,CAoBJ,GACJ,oFAAC,CA1EmB,orBCqExB,QAvEgC,WAU9B,SATD,SAAAqnB,iGAAajF,CAAA,KAAAiF,GAEZ,IACCx3B,KAAKwyB,cACLxyB,KAAKy3B,mBACLz3B,KAAK03B,gBACN,CACA,MAAQ5Z,GAAKkU,QAAQqC,IAAKvW,EAAK,CAEhC,KAAC,EAAAnU,IAAA,cAAAnH,MAED,WACCxC,KAAK4yB,UAAY,CAChB+E,QAAS,CACRC,gBAAiB5G,EAAE,gCACnB6G,gBAAiB7G,EAAE,qCACnB8G,gBAAiB9G,EAAE,qCACnB+G,cAAe/G,EAAE,8BACjBgH,sBAAwBhH,EAAE,kCAC1BiH,sBAAwBjH,EAAE,mCAG7B,GAAC,CAAArnB,IAAA,mBAAAnH,MAED,WAAkB,IAAAswB,EAAA,KACjB9yB,KAAK4yB,UAAU+E,QAAQC,gBAAgB13B,GAAI,SAAS,SAAE4d,GACrDkU,QAAQqC,IAAI,4BACZ,IAAM7oB,EAAO,IAAI0sB,SACjBC,MAAMjH,kBAAkBC,QAAQ,0BAA2B,CAC1D/F,OAAQ,OACRgN,KAAM5sB,IAEN6sB,MAAK,SAAC3G,GAAQ,OAAKA,EAASxZ,MAAM,IAClCmgB,MAAK,SAAC7sB,IACe,IAAjBA,EAAKimB,QACRqB,EAAKF,UAAU+E,QAAQE,gBAAgBxpB,IAAI,UAAU,SAErDykB,EAAKF,UAAU+E,QAAQG,gBAAgBzpB,IAAI,UAAU,QAEvD,IAAE,OACK,SAAC4jB,GACPD,QAAQC,MAAMA,EACf,GACD,GACD,GAAC,CAAAtoB,IAAA,iBAAAnH,MAED,WAAgB,IAAAg0B,EAAA,KACfx2B,KAAK4yB,UAAU+E,QAAQI,cAAc73B,GAAI,SAAS,SAAE4d,GACnD,IAAMtS,EAAO,IAAI0sB,SACjBC,MAAMjH,kBAAkBC,QAAQ,sCAAuC,CACtE/F,OAAQ,OACRgN,KAAM5sB,IAEN6sB,MAAK,SAAC3G,GAAQ,OAAKA,EAASxZ,MAAM,IAClCmgB,MAAK,SAAC7sB,IACe,IAAjBA,EAAKimB,QACR+E,EAAK5D,UAAU+E,QAAQK,sBAAsB3pB,IAAI,UAAU,SAE3DmoB,EAAK5D,UAAU+E,QAAQM,sBAAsB5pB,IAAI,UAAU,QAE7D,IAAE,OACK,SAAC4jB,GACPD,QAAQC,MAAMA,EACf,GACD,GACD,mFAAC,CAlE8B,GCUhC1kB,SAAS6I,iBAAkB,oBAAoB,WAC9C,IAAIkc,EACJ,IAAIoD,EACJ,IAAIC,EACJ,IAAIgB,EACJ,IAAI2B,EACJ,IAAId,CACL","sources":["webpack://uncanny-pro-toolkit-release/./node_modules/tom-select/dist/js/tom-select.complete.js","webpack://uncanny-pro-toolkit-release/external var \"jQuery\"","webpack://uncanny-pro-toolkit-release/webpack/bootstrap","webpack://uncanny-pro-toolkit-release/webpack/runtime/compat get default export","webpack://uncanny-pro-toolkit-release/webpack/runtime/define property getters","webpack://uncanny-pro-toolkit-release/webpack/runtime/hasOwnProperty shorthand","webpack://uncanny-pro-toolkit-release/./src/assets/src/common/js/utilities.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/group-drip.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/group-drip-topic.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/restrict-page-access.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/try-automator.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/ld-drip-notification.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/download-certificates.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/index.js"],"sourcesContent":["/**\n* Tom Select v2.3.1\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n})(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = void 0;\n\t    this._events = {};\n\t  }\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      const event_array = this._events[event] || [];\n\t      event_array.push(fct);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\t    forEvents(events, event => {\n\t      if (n === 1) {\n\t        delete this._events[event];\n\t        return;\n\t      }\n\t      const event_array = this._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.splice(event_array.indexOf(fct), 1);\n\t      this._events[event] = event_array;\n\t    });\n\t  }\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      const event_array = self._events[event];\n\t      if (event_array === undefined) return;\n\t      event_array.forEach(fct => {\n\t        fct.apply(self, args);\n\t      });\n\t    });\n\t  }\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\t        self.loadPlugin(name);\n\t      }\n\t      return plugins.loaded[name];\n\t    }\n\t  };\n\t}\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {string[]} chars\n\t * @return {string}\n\t */\n\tconst arrayToPattern = chars => {\n\t  chars = chars.filter(Boolean);\n\n\t  if (chars.length < 2) {\n\t    return chars[0] || '';\n\t  }\n\n\t  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n\t};\n\t/**\n\t * @param {string[]} array\n\t * @return {string}\n\t */\n\n\tconst sequencePattern = array => {\n\t  if (!hasDuplicates(array)) {\n\t    return array.join('');\n\t  }\n\n\t  let pattern = '';\n\t  let prev_char_count = 0;\n\n\t  const prev_pattern = () => {\n\t    if (prev_char_count > 1) {\n\t      pattern += '{' + prev_char_count + '}';\n\t    }\n\t  };\n\n\t  array.forEach((char, i) => {\n\t    if (char === array[i - 1]) {\n\t      prev_char_count++;\n\t      return;\n\t    }\n\n\t    prev_pattern();\n\t    pattern += char;\n\t    prev_char_count = 1;\n\t  });\n\t  prev_pattern();\n\t  return pattern;\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t * @param {Set<string>} chars\n\t * @return {string}\n\t */\n\n\tconst setToPattern = chars => {\n\t  let array = toArray(chars);\n\t  return arrayToPattern(array);\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n\t * @param {any[]} array\n\t */\n\n\tconst hasDuplicates = array => {\n\t  return new Set(array).size !== array.length;\n\t};\n\t/**\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n\t};\n\t/**\n\t * Return the max length of array values\n\t * @param {string[]} array\n\t *\n\t */\n\n\tconst maxValueLength = array => {\n\t  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n\t};\n\t/**\n\t * @param {string} str\n\t */\n\n\tconst unicodeLength = str => {\n\t  return toArray(str).length;\n\t};\n\t/**\n\t * @param {any} p\n\t * @return {any[]}\n\t */\n\n\tconst toArray = p => Array.from(p);\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t * @param {string} input\n\t * @return {string[][]}\n\t */\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  /** @type {string[][]} */\n\n\t  let result = [];\n\t  const start = input.substring(1);\n\t  const suba = allSubstrings(start);\n\t  suba.forEach(function (subresult) {\n\t    let tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\n\t/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n\t/**\n\t * @typedef {{[key:string]:string}} TUnicodeMap\n\t * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n\t * @typedef {[[number,number]]} TCodePoints\n\t * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n\t * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n\t */\n\t/** @type {TCodePoints} */\n\n\tconst code_points = [[0, 65535]];\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n\t/** @type {TUnicodeMap} */\n\n\tlet unicode_map;\n\t/** @type {RegExp} */\n\n\tlet multi_char_reg;\n\tconst max_char_length = 3;\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_convert = {};\n\t/** @type {TUnicodeMap} */\n\n\tconst latin_condensed = {\n\t  '/': '⁄∕',\n\t  '0': '߀',\n\t  \"a\": \"ⱥɐɑ\",\n\t  \"aa\": \"ꜳ\",\n\t  \"ae\": \"æǽǣ\",\n\t  \"ao\": \"ꜵ\",\n\t  \"au\": \"ꜷ\",\n\t  \"av\": \"ꜹꜻ\",\n\t  \"ay\": \"ꜽ\",\n\t  \"b\": \"ƀɓƃ\",\n\t  \"c\": \"ꜿƈȼↄ\",\n\t  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n\t  \"e\": \"ɛǝᴇɇ\",\n\t  \"f\": \"ꝼƒ\",\n\t  \"g\": \"ǥɠꞡᵹꝿɢ\",\n\t  \"h\": \"ħⱨⱶɥ\",\n\t  \"i\": \"ɨı\",\n\t  \"j\": \"ɉȷ\",\n\t  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n\t  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n\t  \"m\": \"ɱɯϻ\",\n\t  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n\t  \"o\": \"øǿɔɵꝋꝍᴑ\",\n\t  \"oe\": \"œ\",\n\t  \"oi\": \"ƣ\",\n\t  \"oo\": \"ꝏ\",\n\t  \"ou\": \"ȣ\",\n\t  \"p\": \"ƥᵽꝑꝓꝕρ\",\n\t  \"q\": \"ꝗꝙɋ\",\n\t  \"r\": \"ɍɽꝛꞧꞃ\",\n\t  \"s\": \"ßȿꞩꞅʂ\",\n\t  \"t\": \"ŧƭʈⱦꞇ\",\n\t  \"th\": \"þ\",\n\t  \"tz\": \"ꜩ\",\n\t  \"u\": \"ʉ\",\n\t  \"v\": \"ʋꝟʌ\",\n\t  \"vy\": \"ꝡ\",\n\t  \"w\": \"ⱳ\",\n\t  \"y\": \"ƴɏỿ\",\n\t  \"z\": \"ƶȥɀⱬꝣ\",\n\t  \"hv\": \"ƕ\"\n\t};\n\n\tfor (let latin in latin_condensed) {\n\t  let unicode = latin_condensed[latin] || '';\n\n\t  for (let i = 0; i < unicode.length; i++) {\n\t    let char = unicode.substring(i, i + 1);\n\t    latin_convert[char] = latin;\n\t  }\n\t}\n\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n\t/**\n\t * Initialize the unicode_map from the give code point ranges\n\t *\n\t * @param {TCodePoints=} _code_points\n\t */\n\n\tconst initialize = _code_points => {\n\t  if (unicode_map !== undefined) return;\n\t  unicode_map = generateMap(_code_points || code_points);\n\t};\n\t/**\n\t * Helper method for normalize a string\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n\t * @param {string} str\n\t * @param {string} form\n\t */\n\n\tconst normalize = (str, form = 'NFKD') => str.normalize(form);\n\t/**\n\t * Remove accents without reordering string\n\t * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst asciifold = str => {\n\t  return toArray(str).reduce(\n\t  /**\n\t   * @param {string} result\n\t   * @param {string} char\n\t   */\n\t  (result, char) => {\n\t    return result + _asciifold(char);\n\t  }, '');\n\t};\n\t/**\n\t * @param {string} str\n\t * @return {string}\n\t */\n\n\tconst _asciifold = str => {\n\t  str = normalize(str).toLowerCase().replace(convert_pat, (\n\t  /** @type {string} */\n\t  char) => {\n\t    return latin_convert[char] || '';\n\t  }); //return str;\n\n\t  return normalize(str, 'NFC');\n\t};\n\t/**\n\t * Generate a list of unicode variants from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @yield {TCodePointObj}\n\t */\n\n\tfunction* generator(code_points) {\n\t  for (const [code_point_min, code_point_max] of code_points) {\n\t    for (let i = code_point_min; i <= code_point_max; i++) {\n\t      let composed = String.fromCharCode(i);\n\t      let folded = asciifold(composed);\n\n\t      if (folded == composed.toLowerCase()) {\n\t        continue;\n\t      } // skip when folded is a string longer than 3 characters long\n\t      // bc the resulting regex patterns will be long\n\t      // eg:\n\t      // folded صلى الله عليه وسلم length 18 code point 65018\n\t      // folded جل جلاله length 8 code point 65019\n\n\n\t      if (folded.length > max_char_length) {\n\t        continue;\n\t      }\n\n\t      if (folded.length == 0) {\n\t        continue;\n\t      }\n\n\t      yield {\n\t        folded: folded,\n\t        composed: composed,\n\t        code_point: i\n\t      };\n\t    }\n\t  }\n\t}\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeSets}\n\t */\n\n\tconst generateSets = code_points => {\n\t  /** @type {{[key:string]:Set<string>}} */\n\t  const unicode_sets = {};\n\t  /**\n\t   * @param {string} folded\n\t   * @param {string} to_add\n\t   */\n\n\t  const addMatching = (folded, to_add) => {\n\t    /** @type {Set<string>} */\n\t    const folded_set = unicode_sets[folded] || new Set();\n\t    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n\t    if (to_add.match(patt)) {\n\t      return;\n\t    }\n\n\t    folded_set.add(escape_regex(to_add));\n\t    unicode_sets[folded] = folded_set;\n\t  };\n\n\t  for (let value of generator(code_points)) {\n\t    addMatching(value.folded, value.folded);\n\t    addMatching(value.folded, value.composed);\n\t  }\n\n\t  return unicode_sets;\n\t};\n\t/**\n\t * Generate a unicode map from the list of code points\n\t * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\t *\n\t * @param {TCodePoints} code_points\n\t * @return {TUnicodeMap}\n\t */\n\n\tconst generateMap = code_points => {\n\t  /** @type {TUnicodeSets} */\n\t  const unicode_sets = generateSets(code_points);\n\t  /** @type {TUnicodeMap} */\n\n\t  const unicode_map = {};\n\t  /** @type {string[]} */\n\n\t  let multi_char = [];\n\n\t  for (let folded in unicode_sets) {\n\t    let set = unicode_sets[folded];\n\n\t    if (set) {\n\t      unicode_map[folded] = setToPattern(set);\n\t    }\n\n\t    if (folded.length > 1) {\n\t      multi_char.push(escape_regex(folded));\n\t    }\n\t  }\n\n\t  multi_char.sort((a, b) => b.length - a.length);\n\t  const multi_char_patt = arrayToPattern(multi_char);\n\t  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n\t  return unicode_map;\n\t};\n\t/**\n\t * Map each element of an array from it's folded value to all possible unicode matches\n\t * @param {string[]} strings\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst mapSequence = (strings, min_replacement = 1) => {\n\t  let chars_replaced = 0;\n\t  strings = strings.map(str => {\n\t    if (unicode_map[str]) {\n\t      chars_replaced += str.length;\n\t    }\n\n\t    return unicode_map[str] || str;\n\t  });\n\n\t  if (chars_replaced >= min_replacement) {\n\t    return sequencePattern(strings);\n\t  }\n\n\t  return '';\n\t};\n\t/**\n\t * Convert a short string and split it into all possible patterns\n\t * Keep a pattern only if min_replacement is met\n\t *\n\t * 'abc'\n\t * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n\t *\t\t=> ['abc-pattern','ab-c-pattern'...]\n\t *\n\t *\n\t * @param {string} str\n\t * @param {number} min_replacement\n\t * @return {string}\n\t */\n\n\tconst substringsToPattern = (str, min_replacement = 1) => {\n\t  min_replacement = Math.max(min_replacement, str.length - 1);\n\t  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n\t    return mapSequence(sub_pat, min_replacement);\n\t  }));\n\t};\n\t/**\n\t * Convert an array of sequences into a pattern\n\t * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n\t *\n\t * @param {Sequence[]} sequences\n\t * @param {boolean} all\n\t */\n\n\tconst sequencesToPattern = (sequences, all = true) => {\n\t  let min_replacement = sequences.length > 1 ? 1 : 0;\n\t  return arrayToPattern(sequences.map(sequence => {\n\t    let seq = [];\n\t    const len = all ? sequence.length() : sequence.length() - 1;\n\n\t    for (let j = 0; j < len; j++) {\n\t      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n\t    }\n\n\t    return sequencePattern(seq);\n\t  }));\n\t};\n\t/**\n\t * Return true if the sequence is already in the sequences\n\t * @param {Sequence} needle_seq\n\t * @param {Sequence[]} sequences\n\t */\n\n\n\tconst inSequences = (needle_seq, sequences) => {\n\t  for (const seq of sequences) {\n\t    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n\t      continue;\n\t    }\n\n\t    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n\t      continue;\n\t    }\n\n\t    let needle_parts = needle_seq.parts;\n\t    /**\n\t     * @param {TSequencePart} part\n\t     */\n\n\t    const filter = part => {\n\t      for (const needle_part of needle_parts) {\n\t        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n\t          return false;\n\t        }\n\n\t        if (part.length == 1 || needle_part.length == 1) {\n\t          continue;\n\t        } // check for overlapping parts\n\t        // a = ['::=','==']\n\t        // b = ['::','===']\n\t        // a = ['r','sm']\n\t        // b = ['rs','m']\n\n\n\t        if (part.start < needle_part.start && part.end > needle_part.start) {\n\t          return true;\n\t        }\n\n\t        if (needle_part.start < part.start && needle_part.end > part.start) {\n\t          return true;\n\t        }\n\t      }\n\n\t      return false;\n\t    };\n\n\t    let filtered = seq.parts.filter(filter);\n\n\t    if (filtered.length > 0) {\n\t      continue;\n\t    }\n\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\n\tclass Sequence {\n\t  constructor() {\n\t    /** @type {TSequencePart[]} */\n\t    this.parts = [];\n\t    /** @type {string[]} */\n\n\t    this.substrs = [];\n\t    this.start = 0;\n\t    this.end = 0;\n\t  }\n\t  /**\n\t   * @param {TSequencePart|undefined} part\n\t   */\n\n\n\t  add(part) {\n\t    if (part) {\n\t      this.parts.push(part);\n\t      this.substrs.push(part.substr);\n\t      this.start = Math.min(part.start, this.start);\n\t      this.end = Math.max(part.end, this.end);\n\t    }\n\t  }\n\n\t  last() {\n\t    return this.parts[this.parts.length - 1];\n\t  }\n\n\t  length() {\n\t    return this.parts.length;\n\t  }\n\t  /**\n\t   * @param {number} position\n\t   * @param {TSequencePart} last_piece\n\t   */\n\n\n\t  clone(position, last_piece) {\n\t    let clone = new Sequence();\n\t    let parts = JSON.parse(JSON.stringify(this.parts));\n\t    let last_part = parts.pop();\n\n\t    for (const part of parts) {\n\t      clone.add(part);\n\t    }\n\n\t    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n\t    let clone_last_len = last_substr.length;\n\t    clone.add({\n\t      start: last_part.start,\n\t      end: last_part.start + clone_last_len,\n\t      length: clone_last_len,\n\t      substr: last_substr\n\t    });\n\t    return clone;\n\t  }\n\n\t}\n\t/**\n\t * Expand a regular expression pattern to include unicode variants\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t * Issue:\n\t *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n\t *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n\t *\n\t *\tİĲ = IIJ = ⅡJ\n\t *\n\t * \t1/2/4\n\t *\n\t * @param {string} str\n\t * @return {string|undefined}\n\t */\n\n\n\tconst getPattern = str => {\n\t  initialize();\n\t  str = asciifold(str);\n\t  let pattern = '';\n\t  let sequences = [new Sequence()];\n\n\t  for (let i = 0; i < str.length; i++) {\n\t    let substr = str.substring(i);\n\t    let match = substr.match(multi_char_reg);\n\t    const char = str.substring(i, i + 1);\n\t    const match_str = match ? match[0] : null; // loop through sequences\n\t    // add either the char or multi_match\n\n\t    let overlapping = [];\n\t    let added_types = new Set();\n\n\t    for (const sequence of sequences) {\n\t      const last_piece = sequence.last();\n\n\t      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n\t        // if we have a multi match\n\t        if (match_str) {\n\t          const len = match_str.length;\n\t          sequence.add({\n\t            start: i,\n\t            end: i + len,\n\t            length: len,\n\t            substr: match_str\n\t          });\n\t          added_types.add('1');\n\t        } else {\n\t          sequence.add({\n\t            start: i,\n\t            end: i + 1,\n\t            length: 1,\n\t            substr: char\n\t          });\n\t          added_types.add('2');\n\t        }\n\t      } else if (match_str) {\n\t        let clone = sequence.clone(i, last_piece);\n\t        const len = match_str.length;\n\t        clone.add({\n\t          start: i,\n\t          end: i + len,\n\t          length: len,\n\t          substr: match_str\n\t        });\n\t        overlapping.push(clone);\n\t      } else {\n\t        // don't add char\n\t        // adding would create invalid patterns: 234 => [2,34,4]\n\t        added_types.add('3');\n\t      }\n\t    } // if we have overlapping\n\n\n\t    if (overlapping.length > 0) {\n\t      // ['ii','iii'] before ['i','i','iii']\n\t      overlapping = overlapping.sort((a, b) => {\n\t        return a.length() - b.length();\n\t      });\n\n\t      for (let clone of overlapping) {\n\t        // don't add if we already have an equivalent sequence\n\t        if (inSequences(clone, sequences)) {\n\t          continue;\n\t        }\n\n\t        sequences.push(clone);\n\t      }\n\n\t      continue;\n\t    } // if we haven't done anything unique\n\t    // clean up the patterns\n\t    // helps keep patterns smaller\n\t    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n\t    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n\t      pattern += sequencesToPattern(sequences, false);\n\t      let new_seq = new Sequence();\n\t      const old_seq = sequences[0];\n\n\t      if (old_seq) {\n\t        new_seq.add(old_seq.last());\n\t      }\n\n\t      sequences = [new_seq];\n\t    }\n\t  }\n\n\t  pattern += sequencesToPattern(sequences, true);\n\t  return pattern;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  if (token.regex == null) return 0;\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\t  if (typeof value == 'function') return value;\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate$1 = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = void 0;\n\t    this.settings = void 0;\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        if (this.settings.diacritics) {\n\t          regex = getPattern(word) || null;\n\t        } else {\n\t          regex = escape_regex(word);\n\t        }\n\n\t        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {T.ScoreFn}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\t  /**\n\t   * @returns {T.ScoreFn}\n\t   *\n\t   */\n\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate$1(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var score,\n\t            sum = 0;\n\n\t        for (let token of tokens) {\n\t          score = scoreObject(token, data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate$1(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var implicit_score,\n\t        sort_flds = [];\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n\t    if (typeof sort == 'function') {\n\t      return sort.bind(this);\n\t    }\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (let s of sort) {\n\t        if (search.query || s.field !== '$score') {\n\t          sort_flds.push(s);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (let fld of sort_flds) {\n\t        if (fld.field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      } // without a search.query, all items will have the same score\n\n\t    } else {\n\t      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    }\n\n\t    return function (a, b) {\n\t      var result, field;\n\n\t      for (let sort_fld of sort_flds) {\n\t        field = sort_fld.field;\n\t        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n\t        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n\t        if (result) return result;\n\t      }\n\n\t      return 0;\n\t    };\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate$1(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate$1(self.items, (_, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\t  if (isHtmlString(query)) {\n\t    var tpl = document.createElement('template');\n\t    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t    return tpl.content.firstChild;\n\t  }\n\t  return document.querySelector(query);\n\t};\n\tconst isHtmlString = arg => {\n\t  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\n\t/**\n\t * Add css classes\n\t *\n\t */\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\n\t/**\n\t * Return arguments\n\t *\n\t */\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\t  return arg;\n\t};\n\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\t    target = target.parentNode;\n\t  }\n\t};\n\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\t  return list[0];\n\t};\n\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\t  return i;\n\t};\n\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\tconst setAttr = (el, attrs) => {\n\t  iterate(attrs, (val, attr) => {\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  });\n\t};\n\n\t/**\n\t * Replace a node\n\t */\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return;\n\n\t  // convet string to regex\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  }\n\n\t  // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\t    return 0;\n\t  };\n\n\t  // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      Array.from(node.childNodes).forEach(element => {\n\t        highlightRecursive(element);\n\t      });\n\t    }\n\t  };\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\t  highlightRecursive(element);\n\t};\n\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  //closeAfterSelect: false,\n\t  refreshThrottle: 300,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-wrapper',\n\t  controlClass: 'ts-control',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\t  copyClassesToDropdown: false,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\n\t/**\n\t * use setTimeout if timeout > 0 \n\t */\n\tconst timeout = (fn, timeout) => {\n\t  if (timeout > 0) {\n\t    return setTimeout(fn, timeout);\n\t  }\n\t  fn.call(null);\n\t  return null;\n\t};\n\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {};\n\n\t  // override trigger method\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  };\n\n\t  // invoke provided function\n\t  fn.apply(self, []);\n\t  self.trigger = trigger;\n\n\t  // trigger queued events\n\t  for (type of types) {\n\t    if (type in event_args) {\n\t      trigger.apply(self, event_args[type]);\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n\t * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n\t */\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\n\t/**\n\t * Prevent default\n\t *\n\t */\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Add event helper\n\t *\n\t */\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\n\t/**\n\t *\n\t */\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\t    let $order = 0;\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\t      var json = attr_data && data[attr_data];\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\t      return data;\n\t    };\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return;\n\n\t      // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        option_data.$order = option_data.$order || ++$order;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      optgroup_data.$order = optgroup_data.$order || ++$order;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\t      iterate(optgroup.children, option => {\n\t        addOption(option, id);\n\t      });\n\t    };\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\t    iterate(input.children, child => {\n\t      tagName = child.tagName.toLowerCase();\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    });\n\t  };\n\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\t      iterate(values, value => {\n\t        const option = {};\n\t        option[field_label] = value;\n\t        option[field_value] = value;\n\t        settings_element.options.push(option);\n\t      });\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\t      iterate(settings_element.options, opt => {\n\t        settings_element.items.push(opt[field_value]);\n\t      });\n\t    }\n\t  };\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  constructor(input_arg, user_settings) {\n\t    super();\n\t    this.control_input = void 0;\n\t    this.wrapper = void 0;\n\t    this.dropdown = void 0;\n\t    this.control = void 0;\n\t    this.dropdown_content = void 0;\n\t    this.focus_node = void 0;\n\t    this.order = 0;\n\t    this.settings = void 0;\n\t    this.input = void 0;\n\t    this.tabIndex = void 0;\n\t    this.is_select_tag = void 0;\n\t    this.rtl = void 0;\n\t    this.inputId = void 0;\n\t    this._destroy = void 0;\n\t    this.sifter = void 0;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isReadOnly = false;\n\t    this.isRequired = void 0;\n\t    this.isInvalid = false;\n\t    // @deprecated 1.8\n\t    this.isValid = true;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.ignoreHover = false;\n\t    this.hasOptions = false;\n\t    this.currentResults = void 0;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    this.refreshTimeout = null;\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\t    input.tomselect = this;\n\n\t    // detect rtl environment\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction');\n\n\t    // setup default state\n\t    const settings = getSettings(input, user_settings);\n\t    this.settings = settings;\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required;\n\n\t    // search system\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: settings.diacritics\n\t    });\n\n\t    // option-dependent defaults\n\t    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t    if (typeof settings.hideSelected !== 'boolean') {\n\t      settings.hideSelected = settings.mode === 'multi';\n\t    }\n\t    if (typeof settings.hidePlaceholder !== 'boolean') {\n\t      settings.hidePlaceholder = settings.mode !== 'multi';\n\t    }\n\n\t    // set up createFilter callback\n\t    var filter = settings.createFilter;\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\t      if (filter instanceof RegExp) {\n\t        settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        settings.createFilter = value => {\n\t          return this.settings.duplicates || !this.options[value];\n\t        };\n\t      }\n\t    }\n\t    this.initializePlugins(settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates();\n\n\t    // Create all elements\n\t    const wrapper = getDom('<div>');\n\t    const control = getDom('<div>');\n\t    const dropdown = this._render('dropdown');\n\t    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t    const classes = this.input.getAttribute('class') || '';\n\t    const inputMode = settings.mode;\n\t    var control_input;\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    addClasses(control, settings.controlClass);\n\t    append(wrapper, control);\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\t    if (settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n\t    // default controlInput\n\t    if (isHtmlString(settings.controlInput)) {\n\t      control_input = getDom(settings.controlInput);\n\n\t      // set attributes\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];\n\t      iterate$1(attrs, attr => {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      });\n\t      control_input.tabIndex = -1;\n\t      control.appendChild(control_input);\n\t      this.focus_node = control_input;\n\n\t      // dom element\n\t    } else if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t      this.focus_node = control_input;\n\t    } else {\n\t      control_input = getDom('<input/>');\n\t      this.focus_node = control;\n\t    }\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.setup();\n\t  }\n\n\t  /**\n\t   * set up event bindings.\n\t   *\n\t   */\n\t  setup() {\n\t    const self = this;\n\t    const settings = self.settings;\n\t    const control_input = self.control_input;\n\t    const dropdown = self.dropdown;\n\t    const dropdown_content = self.dropdown_content;\n\t    const wrapper = self.wrapper;\n\t    const control = self.control;\n\t    const input = self.input;\n\t    const focus_node = self.focus_node;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    setAttr(dropdown_content, {\n\t      id: listboxId\n\t    });\n\t    setAttr(focus_node, {\n\t      role: 'combobox',\n\t      'aria-haspopup': 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    const control_id = getId(focus_node, self.inputId + '-ts-control');\n\t    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    const label = document.querySelector(query);\n\t    const label_click = self.focus.bind(self);\n\t    if (label) {\n\t      addEvent(label, 'click', label_click);\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      const label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(focus_node, {\n\t        'aria-labelledby': label_id\n\t      });\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\t    wrapper.style.width = input.style.width;\n\t    if (self.plugins.names.length) {\n\t      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\t    if (settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    }\n\n\t    // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t    if (!settings.splitOn && settings.delimiter) {\n\t      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t    }\n\n\t    // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\t    if (settings.load && settings.loadThrottle) {\n\t      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n\t    }\n\t    addEvent(dropdown, 'mousemove', () => {\n\t      self.ignoreHover = false;\n\t    });\n\t    addEvent(dropdown, 'mouseenter', e => {\n\t      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n\t      if (target_match) self.onOptionHover(e, target_match);\n\t    }, {\n\t      capture: true\n\t    });\n\n\t    // clicking on an option should select it\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      }\n\n\t      // retain focus (see control_input mousedown)\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    });\n\n\t    // keydown on focus_node for arrow_down/arrow_up\n\t    addEvent(focus_node, 'keydown', e => self.onKeyDown(e));\n\n\t    // keypress and input/keyup\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'input', e => self.onInput(e));\n\t    addEvent(focus_node, 'blur', e => self.onBlur(e));\n\t    addEvent(focus_node, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\t        self.inputState();\n\t        return;\n\t      }\n\n\t      // retain focus by preventing native handling. if the\n\t      // event target is the input it should not be modified.\n\t      // otherwise, text selection within the input won't work.\n\t      // Fixes bug #212 which is no covered by tests\n\t      if (target == control_input && self.isOpen) {\n\t        evt.stopPropagation();\n\n\t        // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t      } else {\n\t        preventDefault(evt, true);\n\t      }\n\t    };\n\t    const win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'scroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('scroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t      if (label) label.removeEventListener('click', label_click);\n\t    };\n\n\t    // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.sync(false);\n\t    settings.items = [];\n\t    delete settings.optgroups;\n\t    delete settings.options;\n\t    addEvent(input, 'invalid', () => {\n\t      if (self.isValid) {\n\t        self.isValid = false;\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\t    if (input.disabled) {\n\t      self.disable();\n\t    } else if (input.readOnly) {\n\t      self.setReadOnly(true);\n\t    } else {\n\t      self.enable(); //sets tabIndex\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n\t    self.trigger('initialize');\n\n\t    // preload options\n\t    if (settings.preload === true) {\n\t      self.preload();\n\t    }\n\t  }\n\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    this.addOptions(options);\n\n\t    // build optgroup table\n\t    iterate$1(optgroups, optgroup => {\n\t      this.registerOptionGroup(optgroup);\n\t    });\n\t  }\n\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\n\t  /**\n\t   * Sync the Tom Select instance with the original input or select\n\t   *\n\t   */\n\t  sync(get_settings = true) {\n\t    const self = this;\n\t    const settings = get_settings ? getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }) : self.settings;\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items || [], true); // silent prevents recursion\n\n\t    self.lastQuery = null; // so updated options will be displayed in dropdown\n\t  }\n\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\t  onClick() {\n\t    var self = this;\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\t  onMouseDown() {}\n\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\t  onPaste(e) {\n\t    var self = this;\n\t    if (self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\t    if (!self.settings.splitOn) {\n\t      return;\n\t    }\n\n\t    // Wait for pasted text to be recognized in value\n\t    setTimeout(() => {\n\t      var pastedText = self.inputValue();\n\t      if (!pastedText.match(self.settings.splitOn)) {\n\t        return;\n\t      }\n\t      var splitInput = pastedText.trim().split(self.settings.splitOn);\n\t      iterate$1(splitInput, piece => {\n\t        const hash = hash_key(piece);\n\t        if (hash) {\n\t          if (this.options[piece]) {\n\t            self.addItem(piece);\n\t          } else {\n\t            self.createItem(piece);\n\t          }\n\t        }\n\t      });\n\t    }, 0);\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\t  onKeyPress(e) {\n\t    var self = this;\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\t  onKeyDown(e) {\n\t    var self = this;\n\t    self.ignoreHover = true;\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\t      return;\n\t    }\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          if (self.control_input.value == '') {\n\t            preventDefault(e);\n\t            self.selectAll();\n\t            return;\n\t          }\n\t        }\n\t        break;\n\n\t      // esc: close dropdown\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\t        self.clearActiveItems();\n\t        return;\n\n\t      // down: open dropdown or move selection down\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\t        preventDefault(e);\n\t        return;\n\n\t      // up: move selection up\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\t        preventDefault(e);\n\t        return;\n\n\t      // return: select active option\n\t      case KEY_RETURN:\n\t        if (self.canSelect(self.activeOption)) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e);\n\n\t          // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e);\n\n\t          // don't submit form when searching for a value\n\t        } else if (document.activeElement == self.control_input && self.isOpen) {\n\t          preventDefault(e);\n\t        }\n\t        return;\n\n\t      // left: modifiy item selection to the left\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\n\t      // right: modifiy item selection to the right\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\n\t      // tab: select active option and/or create item\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.canSelect(self.activeOption)) {\n\t            self.onOptionSelect(e, self.activeOption);\n\n\t            // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\t            preventDefault(e);\n\t          }\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\t        return;\n\n\t      // delete|backspace: delete items\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    }\n\n\t    // don't enter text in the control_input when active items are selected\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\t  onInput(e) {\n\t    if (this.isLocked) {\n\t      return;\n\t    }\n\t    const value = this.inputValue();\n\t    if (this.lastValue === value) return;\n\t    this.lastValue = value;\n\t    if (value == '') {\n\t      this._onInput();\n\t      return;\n\t    }\n\t    if (this.refreshTimeout) {\n\t      clearTimeout(this.refreshTimeout);\n\t    }\n\t    this.refreshTimeout = timeout(() => {\n\t      this.refreshTimeout = null;\n\t      this._onInput();\n\t    }, this.settings.refreshThrottle);\n\t  }\n\t  _onInput() {\n\t    const value = this.lastValue;\n\t    if (this.settings.shouldLoad.call(this, value)) {\n\t      this.load(value);\n\t    }\n\t    this.refreshOptions();\n\t    this.trigger('type', value);\n\t  }\n\n\t  /**\n\t   * Triggered when the user rolls over\n\t   * an option in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  onOptionHover(evt, option) {\n\t    if (this.ignoreHover) return;\n\t    this.setActiveOption(option, false);\n\t  }\n\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\t    if (self.isDisabled || self.isReadOnly) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.preload();\n\t    if (!wasFocused) self.trigger('focus');\n\t    if (!self.activeItems.length) {\n\t      self.inputState();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\t    self.refreshState();\n\t  }\n\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\t  onBlur(e) {\n\t    if (document.hasFocus() === false) return;\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t      self = this;\n\n\t    // should not be possible to trigger a option under a disabled optgroup\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Return true if the given option can be selected\n\t   *\n\t   */\n\t  canSelect(option) {\n\t    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\t    self.trigger('load', options, optgroups);\n\t  }\n\t  preload() {\n\t    var classList = this.wrapper.classList;\n\t    if (classList.contains('preloaded')) return;\n\t    classList.add('preloaded');\n\t    this.load('');\n\t  }\n\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return;\n\n\t    // clear the active selection\n\t    if (!item) {\n\t      self.clearActiveItems();\n\t      if (self.isFocused) {\n\t        self.inputState();\n\t      }\n\t      return;\n\t    }\n\n\t    // modify selection\n\t    eventName = e && e.type.toLowerCase();\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    }\n\n\t    // ensure control has focus\n\t    self.inputState();\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\t  setActiveOption(option, scroll = true) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    if (scroll) this.scrollToOption(option);\n\t  }\n\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\t    this.activeOption = null;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\t  selectAll() {\n\t    const self = this;\n\t    if (self.settings.mode === 'single') return;\n\t    const activeItems = self.controlChildren();\n\t    if (!activeItems.length) return;\n\t    self.inputState();\n\t    self.close();\n\t    self.activeItems = activeItems;\n\t    iterate$1(activeItems, item => {\n\t      self.setActiveItemClass(item);\n\t    });\n\t  }\n\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\t  inputState() {\n\t    var self = this;\n\t    if (!self.control.contains(self.control_input)) return;\n\t    setAttr(self.control_input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\t    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t    } else {\n\t      if (self.settings.hidePlaceholder && self.items.length > 0) {\n\t        setAttr(self.control_input, {\n\t          placeholder: ''\n\t        });\n\t      }\n\t      self.isInputHidden = false;\n\t    }\n\t    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n\t  }\n\n\t  /**\n\t   * Get the input value\n\t   */\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled || self.isReadOnly) return;\n\t    self.ignoreFocus = true;\n\t    if (self.control_input.offsetWidth) {\n\t      self.control_input.focus();\n\t    } else {\n\t      self.focus_node.focus();\n\t    }\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\t  blur() {\n\t    this.focus_node.blur();\n\t    this.onBlur();\n\t  }\n\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\t  search(query) {\n\t    var result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions();\n\n\t    // validate user-provided result scoring function\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    }\n\n\t    // perform search\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    }\n\n\t    // filter out selected items\n\t    if (self.settings.hideSelected) {\n\t      result.items = result.items.filter(item => {\n\t        let hashed = hash_key(item.id);\n\t        return !(hashed && self.items.indexOf(hashed) !== -1);\n\t      });\n\t    }\n\t    return result;\n\t  }\n\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n\t    var results = self.search(query);\n\t    var active_option = null;\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\t    if (same_query) {\n\t      active_option = self.activeOption;\n\t      if (active_option) {\n\t        active_group = active_option.closest('[data-group]');\n\t      }\n\t    }\n\n\t    // build markup\n\t    n = results.items.length;\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    }\n\n\t    // get fragment for group and the position of the group in group_order\n\t    const getGroupFragment = (optgroup, order) => {\n\t      let group_order_i = groups[optgroup];\n\t      if (group_order_i !== undefined) {\n\t        let order_group = groups_order[group_order_i];\n\t        if (order_group !== undefined) {\n\t          return [group_order_i, order_group.fragment];\n\t        }\n\t      }\n\t      let group_fragment = document.createDocumentFragment();\n\t      group_order_i = groups_order.length;\n\t      groups_order.push({\n\t        fragment: group_fragment,\n\t        order,\n\t        optgroup\n\t      });\n\t      return [group_order_i, group_fragment];\n\t    };\n\n\t    // render and group available options individually\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let item = results.items[i];\n\t      if (!item) continue;\n\t      let opt_value = item.id;\n\t      let option = self.options[opt_value];\n\t      if (option === undefined) continue;\n\t      let opt_hash = get_hash(opt_value);\n\t      let option_el = self.getOption(opt_hash, true);\n\n\t      // toggle 'selected' class\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_hash));\n\t      }\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\t        let order = option.$order;\n\t        let self_optgroup = self.optgroups[optgroup];\n\t        if (self_optgroup === undefined) {\n\t          optgroup = '';\n\t        } else {\n\t          order = self_optgroup.$order;\n\t        }\n\t        const [group_order_i, group_fragment] = getGroupFragment(optgroup, order);\n\n\t        // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active');\n\n\t          // make sure we keep the activeOption in the same group\n\t          if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n\t            if (active_group && active_group.dataset.group === optgroup.toString()) {\n\t              active_option = option_el;\n\t            }\n\t          }\n\t        }\n\t        group_fragment.appendChild(option_el);\n\t        if (optgroup != '') {\n\t          groups[optgroup] = group_order_i;\n\t        }\n\t      }\n\t    }\n\n\t    // sort optgroups\n\t    if (self.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        return a.order - b.order;\n\t      });\n\t    }\n\n\t    // render optgroup headers & join groups\n\t    html = document.createDocumentFragment();\n\t    iterate$1(groups_order, group_order => {\n\t      let group_fragment = group_order.fragment;\n\t      let optgroup = group_order.optgroup;\n\t      if (!group_fragment || !group_fragment.children.length) return;\n\t      let group_heading = self.optgroups[optgroup];\n\t      if (group_heading !== undefined) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', group_heading);\n\t        append(group_options, header);\n\t        append(group_options, group_fragment);\n\t        let group_html = self.render('optgroup', {\n\t          group: group_heading,\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, group_fragment);\n\t      }\n\t    });\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html);\n\n\t    // highlight matching terms inline\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\t      if (results.query.length && results.tokens.length) {\n\t        iterate$1(results.tokens, tok => {\n\t          highlight(dropdown_content, tok.regex);\n\t        });\n\t      }\n\t    }\n\n\t    // helper method for adding templates to dropdown\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\t      return content;\n\t    };\n\n\t    // add loading message\n\t    if (self.loading) {\n\t      add_template('loading');\n\n\t      // invalid query\n\t    } else if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading');\n\n\t      // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    }\n\n\t    // add create option\n\t    has_create_option = self.canCreate(query);\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    }\n\n\t    // activate\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\t  addOption(data, user_created = false) {\n\t    const self = this;\n\n\t    // @deprecated 1.7.7\n\t    // use addOptions( array, user_created ) for adding multiple options\n\t    if (Array.isArray(data)) {\n\t      self.addOptions(data, user_created);\n\t      return false;\n\t    }\n\t    const key = hash_key(data[self.settings.valueField]);\n\t    if (key === null || self.options.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\t    data.$order = data.$order || ++self.order;\n\t    data.$id = self.inputId + '-opt-' + data.$order;\n\t    self.options[key] = data;\n\t    self.lastQuery = null;\n\t    if (user_created) {\n\t      self.userOptions[key] = user_created;\n\t      self.trigger('option_add', key, data);\n\t    }\n\t    return key;\n\t  }\n\n\t  /**\n\t   * Add multiple options\n\t   *\n\t   */\n\t  addOptions(data, user_created = false) {\n\t    iterate$1(data, dat => {\n\t      this.addOption(dat, user_created);\n\t    });\n\t  }\n\n\t  /**\n\t   * @deprecated 1.7.7\n\t   */\n\t  registerOption(data) {\n\t    return this.addOption(data);\n\t  }\n\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const value_old = hash_key(value);\n\t    const value_new = hash_key(data[self.settings.valueField]);\n\n\t    // sanity checks\n\t    if (value_old === null) return;\n\t    const data_old = self.options[value_old];\n\t    if (data_old == undefined) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    const option = self.getOption(value_old);\n\t    const item = self.getItem(value_old);\n\t    data.$order = data.$order || data_old.$order;\n\t    delete self.options[value_old];\n\n\t    // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\t    self.uncacheValue(value_new);\n\t    self.options[value_new] = data;\n\n\t    // update the option if it's in the dropdown\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\t        replaceNode(option, option_new);\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\t      option.remove();\n\t    }\n\n\t    // update the item if we have one\n\t    if (item) {\n\t      index_item = self.items.indexOf(value_old);\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    }\n\n\t    // invalidate last query because we might have updated the sortField\n\t    self.lastQuery = null;\n\t  }\n\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\n\t  /**\n\t   * Clears all options.\n\t   */\n\t  clearOptions(filter) {\n\t    const boundFilter = (filter || this.clearFilter).bind(this);\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    const selected = {};\n\t    iterate$1(this.options, (option, key) => {\n\t      if (boundFilter(option, key)) {\n\t        selected[key] = option;\n\t      }\n\t    });\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\n\t  /**\n\t   * Used by clearOptions() to decide whether or not an option should be removed\n\t   * Return true to keep an option, false to remove\n\t   *\n\t   */\n\t  clearFilter(option, value) {\n\t    if (this.items.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\t  getOption(value, create = false) {\n\t    const hashed = hash_key(value);\n\t    if (hashed === null) return null;\n\t    const option = this.options[hashed];\n\t    if (option != undefined) {\n\t      if (option.$div) {\n\t        return option.$div;\n\t      }\n\t      if (create) {\n\t        return this._render('option', option);\n\t      }\n\t    }\n\t    return null;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t      all;\n\t    if (!option) {\n\t      return null;\n\t    }\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\t      return all[i - 1];\n\t    }\n\t    return null;\n\t  }\n\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\t    const last_item = items[items.length - 1];\n\t    items.forEach(item => {\n\t      self.isPending = item !== last_item;\n\t      self.addItem(item, silent);\n\t    });\n\t  }\n\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change', 'dropdown_close'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\t      if (self.isSetup) {\n\t        // update menu / remove the option (if this is not one item being added as part of series)\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        }\n\n\t        // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t        if (!self.isPending && !self.settings.closeAfterSelect) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        }\n\n\t        // hide the menu if the maximum number of items have been selected or no options are left\n\t        if (self.settings.closeAfterSelect != false && self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\t        self.trigger('item_add', hashed, item);\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.inputState();\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\t  createItem(input = null, callback = () => {}) {\n\t    // triggerDropdown parameter @deprecated 2.1.1\n\t    if (arguments.length === 3) {\n\t      callback = arguments[2];\n\t    }\n\t    if (typeof callback != 'function') {\n\t      callback = () => {};\n\t    }\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\t    self.lock();\n\t    var created = false;\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\t      self.setTextboxValue();\n\t      self.addOption(data, true);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      callback(data);\n\t      created = true;\n\t    };\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\t    if (!created) {\n\t      create(output);\n\t    }\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\t  refreshState() {\n\t    const self = this;\n\t    self.refreshValidityState();\n\t    const isFull = self.isFull();\n\t    const isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    const wrap_classList = self.wrapper.classList;\n\t    wrap_classList.toggle('focus', self.isFocused);\n\t    wrap_classList.toggle('disabled', self.isDisabled);\n\t    wrap_classList.toggle('readonly', self.isReadOnly);\n\t    wrap_classList.toggle('required', self.isRequired);\n\t    wrap_classList.toggle('invalid', !self.isValid);\n\t    wrap_classList.toggle('locked', isLocked);\n\t    wrap_classList.toggle('full', isFull);\n\t    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    wrap_classList.toggle('dropdown-active', self.isOpen);\n\t    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n\t    wrap_classList.toggle('has-items', self.items.length > 0);\n\t  }\n\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\t  refreshValidityState() {\n\t    var self = this;\n\t    if (!self.input.validity) {\n\t      return;\n\t    }\n\t    self.isValid = self.input.validity.valid;\n\t    self.isInvalid = !self.isValid;\n\t  }\n\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var option, label;\n\t    const empty_option = self.input.querySelector('option[value=\"\"]');\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\t      const has_selected = self.input.querySelectorAll('option:checked').length;\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        }\n\n\t        // don't move empty option from top of list\n\t        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t        if (option_el != empty_option) {\n\t          self.input.append(option_el);\n\t        }\n\t        selected.push(option_el);\n\n\t        // marking empty option as selected can break validation\n\t        // fixes https://github.com/orchidjs/tom-select/issues/303\n\t        if (option_el != empty_option || has_selected > 0) {\n\t          option_el.selected = true;\n\t        }\n\t        return option_el;\n\t      }\n\n\t      // unselect all selected options\n\t      self.input.querySelectorAll('option:checked').forEach(option_el => {\n\t        option_el.selected = false;\n\t      });\n\n\t      // nothing selected?\n\t      if (self.items.length == 0 && self.settings.mode == 'single') {\n\t        AddSelected(empty_option, \"\", \"\");\n\n\t        // order selected <option> tags for values in self.items\n\t      } else {\n\t        self.items.forEach(value => {\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        });\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.inputState();\n\t      }\n\t    }\n\t    self.isOpen = false;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\t    iterate$1(items, item => {\n\t      self.removeItem(item, true);\n\t    });\n\t    self.inputState();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\t  insertAtCaret(el) {\n\t    const self = this;\n\t    const caret = self.caretPos;\n\t    const target = self.control;\n\t    target.insertBefore(el, target.children[caret] || null);\n\t    self.setCaret(caret + 1);\n\t  }\n\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input);\n\n\t    // determine items that will be removed\n\t    const rm_items = [];\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\t      iterate$1(self.activeItems, item => rm_items.push(item));\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\t      let rm_item;\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_item = items[self.caretPos - 1];\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_item = items[self.caretPos];\n\t      }\n\t      if (rm_item !== undefined) {\n\t        rm_items.push(rm_item);\n\t      }\n\t    }\n\t    if (!self.shouldDelete(rm_items, e)) {\n\t      return false;\n\t    }\n\t    preventDefault(e, true);\n\n\t    // perform removal\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\t    self.inputState();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Return true if the items should be deleted\n\t   */\n\t  shouldDelete(items, evt) {\n\t    const values = items.map(item => item.dataset.value);\n\n\t    // allow the callback to abort\n\t    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\t  advanceSelection(direction, e) {\n\t    var last_active,\n\t      adjacent,\n\t      self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return;\n\n\t    // add or remove to active items\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        }\n\n\t        // if no active item, get items adjacent to the control input\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      }\n\n\t      // move caret to the left or right\n\t    } else {\n\t      self.moveCaret(direction);\n\t    }\n\t  }\n\t  moveCaret(direction) {}\n\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\t    var result = this.control.querySelectorAll('.active');\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\t  setCaret(new_pos) {\n\t    this.caretPos = this.items.length;\n\t  }\n\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\t  controlChildren() {\n\t    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n\t  }\n\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\t  lock() {\n\t    this.setLocked(true);\n\t  }\n\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\t  unlock() {\n\t    this.setLocked(false);\n\t  }\n\n\t  /**\n\t   * Disable or enable user input on the control\n\t   */\n\t  setLocked(lock = this.isReadOnly || this.isDisabled) {\n\t    this.isLocked = lock;\n\t    this.refreshState();\n\t  }\n\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\t  disable() {\n\t    this.setDisabled(true);\n\t    this.close();\n\t  }\n\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\t  enable() {\n\t    this.setDisabled(false);\n\t  }\n\t  setDisabled(disabled) {\n\t    this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;\n\t    this.isDisabled = disabled;\n\t    this.input.disabled = disabled;\n\t    this.control_input.disabled = disabled;\n\t    this.setLocked();\n\t  }\n\t  setReadOnly(isReadOnly) {\n\t    this.isReadOnly = isReadOnly;\n\t    this.input.readOnly = isReadOnly;\n\t    this.control_input.readOnly = isReadOnly;\n\t    this.setLocked();\n\t  }\n\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\t    self._destroy();\n\t    delete self.input.tomselect;\n\t  }\n\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\t  render(templateName, data) {\n\t    var id, html;\n\t    const self = this;\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    }\n\n\t    // render markup\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\t    if (!html) {\n\t      return null;\n\t    }\n\t    html = getDom(html);\n\n\t    // add mandatory attributes\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      const value = get_hash(data[self.settings.valueField]);\n\t      setAttr(html, {\n\t        'data-value': value\n\t      });\n\n\t      // make sure we have some classes if a template is overwritten\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t        setAttr(html, {\n\t          'data-ts-item': ''\n\t        });\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        });\n\n\t        // update cache\n\t        data.$div = html;\n\t        self.options[value] = data;\n\t      }\n\t    }\n\t    return html;\n\t  }\n\n\t  /**\n\t   * Type guarded rendering\n\t   *\n\t   */\n\t  _render(templateName, data) {\n\t    const html = this.render(templateName, data);\n\t    if (html == null) {\n\t      throw 'HTMLElement expected';\n\t    }\n\t    return html;\n\t  }\n\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\t  clearCache() {\n\t    iterate$1(this.options, option => {\n\t      if (option.$div) {\n\t        option.$div.remove();\n\t        delete option.$div;\n\t      }\n\t    });\n\t  }\n\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\t  uncacheValue(value) {\n\t    const option_el = this.getOption(value);\n\t    if (option_el) option_el.remove();\n\t  }\n\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\t    self[method] = function () {\n\t      var result, result_new;\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\t      result_new = new_fn.apply(self, arguments);\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction change_listener () {\n\t  addEvent(this.input, 'change', () => {\n\t    this.sync();\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"checkbox_options\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction checkbox_options (userOptions) {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false;\n\t  const cbOptions = Object.assign({\n\t    // so that the user may add different ones as well\n\t    className: \"tomselect-checkbox\",\n\t    // the following default to the historic plugin's values\n\t    checkedClassNames: undefined,\n\t    uncheckedClassNames: undefined\n\t  }, userOptions);\n\t  var UpdateChecked = function UpdateChecked(checkbox, toCheck) {\n\t    if (toCheck) {\n\t      checkbox.checked = true;\n\t      if (cbOptions.uncheckedClassNames) {\n\t        checkbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t      }\n\t      if (cbOptions.checkedClassNames) {\n\t        checkbox.classList.add(...cbOptions.checkedClassNames);\n\t      }\n\t    } else {\n\t      checkbox.checked = false;\n\t      if (cbOptions.checkedClassNames) {\n\t        checkbox.classList.remove(...cbOptions.checkedClassNames);\n\t      }\n\t      if (cbOptions.uncheckedClassNames) {\n\t        checkbox.classList.add(...cbOptions.uncheckedClassNames);\n\t      }\n\t    }\n\t  };\n\n\t  // update the checkbox for an option\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input.' + cbOptions.className);\n\t      if (checkbox instanceof HTMLInputElement) {\n\t        UpdateChecked(checkbox, option.classList.contains('selected'));\n\t      }\n\t    }, 1);\n\t  };\n\n\t  // add checkbox to option template\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      if (cbOptions.className) {\n\t        checkbox.classList.add(cbOptions.className);\n\t      }\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\t      UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  });\n\n\t  // uncheck when item removed\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\t      UpdateCheckbox(option);\n\t    }\n\t  });\n\n\t  // check when item added\n\t  self.on('item_add', value => {\n\t    var option = self.getOption(value);\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      UpdateCheckbox(option);\n\t    }\n\t  });\n\n\t  // remove items when selected option is clicked\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction clear_button (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      if (self.isLocked) return;\n\t      self.clear();\n\t      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n\t        self.addItem('');\n\t      }\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tconst insertAfter = (referenceNode, newNode) => {\n\t  var _referenceNode$parent;\n\t  (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);\n\t};\n\tconst insertBefore = (referenceNode, newNode) => {\n\t  var _referenceNode$parent2;\n\t  (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);\n\t};\n\tconst isBefore = (referenceNode, newNode) => {\n\t  do {\n\t    var _newNode;\n\t    newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;\n\t    if (referenceNode == newNode) {\n\t      return true;\n\t    }\n\t  } while (newNode && newNode.previousElementSibling);\n\t  return false;\n\t};\n\tfunction drag_drop () {\n\t  var self = this;\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  let sortable = true;\n\t  let drag_item;\n\n\t  /**\n\t   * Add draggable attribute to item\n\t   */\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\t    self.settings.render.item = (data, escape) => {\n\t      const item = getDom(orig_render_item.call(self, data, escape));\n\t      setAttr(item, {\n\t        'draggable': 'true'\n\t      });\n\n\t      // prevent doc_mousedown (see tom-select.ts)\n\t      const mousedown = evt => {\n\t        if (!sortable) preventDefault(evt);\n\t        evt.stopPropagation();\n\t      };\n\t      const dragStart = evt => {\n\t        drag_item = item;\n\t        setTimeout(() => {\n\t          item.classList.add('ts-dragging');\n\t        }, 0);\n\t      };\n\t      const dragOver = evt => {\n\t        evt.preventDefault();\n\t        item.classList.add('ts-drag-over');\n\t        moveitem(item, drag_item);\n\t      };\n\t      const dragLeave = () => {\n\t        item.classList.remove('ts-drag-over');\n\t      };\n\t      const moveitem = (targetitem, dragitem) => {\n\t        if (dragitem === undefined) return;\n\t        if (isBefore(dragitem, item)) {\n\t          insertAfter(targetitem, dragitem);\n\t        } else {\n\t          insertBefore(targetitem, dragitem);\n\t        }\n\t      };\n\t      const dragend = () => {\n\t        var _drag_item;\n\t        document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));\n\t        (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');\n\t        drag_item = undefined;\n\t        var values = [];\n\t        self.control.querySelectorAll(`[data-value]`).forEach(el => {\n\t          if (el.dataset.value) {\n\t            let value = el.dataset.value;\n\t            if (value) {\n\t              values.push(value);\n\t            }\n\t          }\n\t        });\n\t        self.setValue(values);\n\t      };\n\t      addEvent(item, 'mousedown', mousedown);\n\t      addEvent(item, 'dragstart', dragStart);\n\t      addEvent(item, 'dragenter', dragOver);\n\t      addEvent(item, 'dragover', dragOver);\n\t      addEvent(item, 'dragleave', dragLeave);\n\t      addEvent(item, 'dragend', dragend);\n\t      return item;\n\t    };\n\t  });\n\t  self.hook('instead', 'lock', () => {\n\t    sortable = false;\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    sortable = true;\n\t    return orig_unlock.call(self);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction dropdown_header (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction caret_position () {\n\t  var self = this;\n\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return;\n\n\t    // move caret before or after selected items\n\t    const last_active = self.getLastActive(direction);\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem();\n\t      removeClasses(last_active, 'last-active');\n\n\t      // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction dropdown_input () {\n\t  const self = this;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('before', 'setup', () => {\n\t    self.focus_node = self.control;\n\t    addClasses(self.control_input, 'dropdown-input');\n\t    const div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.append(self.control_input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t    // set a placeholder in the select control\n\t    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n\t    placeholder.placeholder = self.settings.placeholder || '';\n\t    self.control.append(placeholder);\n\t  });\n\t  self.on('initialize', () => {\n\t    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t    self.control_input.addEventListener('keydown', evt => {\n\t      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t      switch (evt.keyCode) {\n\t        case KEY_ESC:\n\t          if (self.isOpen) {\n\t            preventDefault(evt, true);\n\t            self.close();\n\t          }\n\t          self.clearActiveItems();\n\t          return;\n\t        case KEY_TAB:\n\t          self.focus_node.tabIndex = -1;\n\t          break;\n\t      }\n\t      return self.onKeyDown.call(self, evt);\n\t    });\n\t    self.on('blur', () => {\n\t      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t    });\n\n\t    // give the control_input focus when the dropdown is open\n\t    self.on('dropdown_open', () => {\n\t      self.control_input.focus();\n\t    });\n\n\t    // prevent onBlur from closing when focus is on the control_input\n\t    const orig_onBlur = self.onBlur;\n\t    self.hook('instead', 'onBlur', evt => {\n\t      if (evt && evt.relatedTarget == self.control_input) return;\n\t      return orig_onBlur.call(self);\n\t    });\n\t    addEvent(self.control_input, 'blur', () => self.onBlur());\n\n\t    // return focus to control to allow further keyboard input\n\t    self.hook('before', 'close', () => {\n\t      if (!self.isOpen) return;\n\t      self.focus_node.focus({\n\t        preventScroll: true\n\t      });\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction input_autogrow () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\t    var resize = () => {\n\t      test_input.textContent = control.value;\n\t      control.style.width = test_input.clientWidth + 'px';\n\t    };\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction no_backspace_delete () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\t    return false;\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"no_active_items\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction no_active_items () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t}\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction optgroup_columns () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\t    self.ignoreHover = true;\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction remove_button (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions);\n\n\t  //options.className = 'remove-single';\n\t  var self = this;\n\n\t  // override the render method to add remove button to each item\n\t  if (!options.append) {\n\t    return;\n\t  }\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\t    self.settings.render.item = (data, escape) => {\n\t      var item = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      item.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        if (self.isLocked) return;\n\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        if (!self.shouldDelete([item], evt)) return;\n\t        self.removeItem(item);\n\t        self.refreshOptions(false);\n\t        self.inputState();\n\t      });\n\t      return item;\n\t    };\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction restore_on_backspace (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (!self.isFocused) {\n\t      return;\n\t    }\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\n\tfunction virtual_scroll () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\t  var load_more_opt;\n\t  var default_values = [];\n\t  if (!self.settings.shouldLoadMore) {\n\t    // return true if additional results should be loaded\n\t    self.settings.shouldLoadMore = () => {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t      if (scroll_percent > 0.9) {\n\t        return true;\n\t      }\n\t      if (self.activeOption) {\n\t        var selectable = self.selectable();\n\t        var index = Array.from(selectable).indexOf(self.activeOption);\n\t        if (index >= selectable.length - 2) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  }\n\n\t  // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }];\n\n\t  // can we load more results for given query?\n\t  const canLoadMore = query => {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\t  const clearFilter = (option, value) => {\n\t    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\n\t  // set the next url that will be\n\t  self.setNextUrl = (value, next_url) => {\n\t    pagination[value] = next_url;\n\t  };\n\n\t  // getUrl() to be used in settings.load()\n\t  self.getUrl = query => {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    }\n\n\t    // if the user goes back to a previous query\n\t    // we need to load the first page again\n\t    self.clearPagination();\n\t    return self.settings.firstUrl.call(self, query);\n\t  };\n\n\t  // clear pagination\n\t  self.clearPagination = () => {\n\t    pagination = {};\n\t  };\n\n\t  // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\t    return orig_clearActiveOption.call(self);\n\t  });\n\n\t  // override the canLoad method\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\t    return canLoadMore(query);\n\t  });\n\n\t  // wrap the load\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions(clearFilter);\n\t    } else if (load_more_opt) {\n\t      const first_option = options[0];\n\t      if (first_option !== undefined) {\n\t        load_more_opt.dataset.value = first_option[self.settings.valueField];\n\t      }\n\t    }\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  });\n\n\t  // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\t      if (option) {\n\t        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t        load_more_opt = option;\n\t      }\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  });\n\n\t  // add scroll listener and default templates\n\t  self.on('initialize', () => {\n\t    default_values = Object.keys(self.options);\n\t    dropdown_content = self.dropdown_content;\n\n\t    // default templates\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: () => {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: () => {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render);\n\n\t    // watch dropdown content scroll position\n\t    dropdown_content.addEventListener('scroll', () => {\n\t      if (!self.settings.shouldLoadMore.call(self)) {\n\t        return;\n\t      }\n\n\t      // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      }\n\n\t      // don't call load() too much\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t}\n\n\tTomSelect.define('change_listener', change_listener);\n\tTomSelect.define('checkbox_options', checkbox_options);\n\tTomSelect.define('clear_button', clear_button);\n\tTomSelect.define('drag_drop', drag_drop);\n\tTomSelect.define('dropdown_header', dropdown_header);\n\tTomSelect.define('caret_position', caret_position);\n\tTomSelect.define('dropdown_input', dropdown_input);\n\tTomSelect.define('input_autogrow', input_autogrow);\n\tTomSelect.define('no_backspace_delete', no_backspace_delete);\n\tTomSelect.define('no_active_items', no_active_items);\n\tTomSelect.define('optgroup_columns', optgroup_columns);\n\tTomSelect.define('remove_button', remove_button);\n\tTomSelect.define('restore_on_backspace', restore_on_backspace);\n\tTomSelect.define('virtual_scroll', virtual_scroll);\n\n\treturn TomSelect;\n\n}));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map\n","module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import $ from 'jquery';\n\n/**\n * Performs a REST Call\n *\n * @param {string}    endPoint - Endpoint of the REST call\n * @param {object}    data - Data to be sent in the call\n * @param {callback}  [onSuccess] - Function to be invoked if the call is successful\n * @param {callback}  [onFail] - Function to be invoked if the call fails\n *\n * @return null\n */\n\nexport function restCall( endPoint = null, data = null, onSuccess = null, onFail = null ){\n    // Define the valid endpoints\n    let validEndpoints = [ 'course_navigation', 'update_drip_date', 'update_drip_date_topic', 'get_group_courses', 'try-automator-visibility', 'get-certificates-dropdowns', 'get-groups-dropdown' ];\n\n    // Check if the endPoint parameter is a valid endpoint\n    if ( validEndpoints.includes( endPoint ) ){\n        // Do AJAX\n        $.ajax({\n            method: 'POST',\n            url:    UncannyToolkitPro.restURL + endPoint + '/',\n            data:   $.param( data ) + '&' + $.param({ doing_rest: 1 }),\n\n            // Attach Nonce the the header of the request\n            beforeSend: function( xhr ){\n                xhr.setRequestHeader( 'X-WP-Nonce', UncannyToolkitPro.nonce );\n            },\n\n            success: function( response ){\n                // Check if onSuccess\n                if ( isDefined( onSuccess ) ){\n                    // Invoke callback\n                    onSuccess( response );\n                }\n            },\n\n            statusCode: {\n                403: function(){\n                    location.reload();\n                }\n            },\n\n            fail: function ( response ){\n                if ( isDefined( onFail ) ){\n                    onFail( response );\n                }\n            },\n        });\n    }\n    else {\n        console.error( `The ${ endPoint } endPoint does not exists` );\n    }\n}\n\n/**\n * Determine if a variable is set and is not NULL\n *\n * @param  {mixed}      variable - The variable being evaluated\n * @return {boolean}    TRUE if the variable is defined\n */\n\nexport const isDefined = ( variable ) => {\n\t// Returns true if the variable is undefined\n    return typeof variable !== 'undefined' && variable !== null;\n}\n\n/**\n * Determine whether a variable is empty\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is empty\n */\n\nexport const isEmpty = ( variable ) => {\n    let response = true;\n\n    // Check if the variable is defined, otherwise is empty\n    if ( isDefined( variable ) ){\n        // Check if it's array\n        if ( variable.isArray ){\n            response = variable.length == 0;\n        }\n        else if ( isObject( variable ) ){\n            response = Object.keys( variable ).length;\n        }\n        else {\n            response = variable == '';\n        }\n    }\n\n    return response;\n}\n\n/**\n * Determine whether a variable is an object\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is an object\n */\n\nexport const isObject = ( variable ) => {\n    return typeof variable === 'object' && variable !== null;\n}\n","import {\n\trestCall,\n\tisEmpty,\n\tisDefined\n} from '../../common/js/utilities.js';\n\nclass GroupDrip {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Check if it has the group drip table\n\t\tif ( this.hasGroupDripTable() ){\n\t\t\t// Init DataTables in the table\n\t\t\tthis.addDataTables();\n\n\t\t\t// Listen to clicks on the buttons\n\t\t\tthis.listenActions();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\t// Get elements\n\t\tthis.$elements = {\n\t\t\ttable: $( '#uo-ld-group-drip' )\n\t\t}\n\t}\n\n\tlistenActions(){\n\n\t\t// Listen clicks to the save date button\n\t\tthis.$elements.table.on( 'click', '.uo-ld-group-drip__action--save', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get button\n\t\t\tconst $saveButton = $( event.currentTarget );\n\n\t\t\t// Get row\n\t\t\tconst $row = $saveButton.closest( 'tr' );\n\n\t\t\t// Remove the error class from all the fields\n\t\t\t// This is useful if the fields were invalid\n\t\t\t// but are valid now\n\t\t\t$row.find( 'input, select' ).removeClass( 'ultp-gutenberg-field--invalid' );\n\n\t\t\t// Get fields\n\t\t\tconst $fields = {\n\t\t\t\tyear:      $row.find( 'input[name=\"year\"]' ),\n\t\t\t\tmonth:     $row.find( 'select[name=\"month\"]' ),\n\t\t\t\tday:       $row.find( 'input[name=\"day\"]' ),\n\t\t\t\thour:      $row.find( 'input[name=\"hour\"]' ),\n\t\t\t\tminute:    $row.find( 'input[name=\"minute\"]' ),\n\t\t\t}\n\n\t\t\t// Get fields values\n\t\t\tconst fieldsValue = {\n\t\t\t\tyear:      $fields.year.val(),\n\t\t\t\tmonth:     $fields.month.val(),\n\t\t\t\tday:       $fields.day.val(),\n\t\t\t\thour:      $fields.hour.val(),\n\t\t\t\tminute:    $fields.minute.val(),\n\t\t\t}\n\n\t\t\t// Get data. Merge the fields value\n\t\t\tconst data = {\n\t\t\t\t...{\n\t\t\t\t\tgroup_id:  $row.data( 'group' ),\n\t\t\t\t\tpost_id:   $row.data( 'post' ),\n\t\t\t\t\tcourse_id: $row.data( 'course' ),\n\n\t\t\t\t\taction:    'save',\n\t\t\t\t},\n\t\t\t\t...fieldsValue\n\t\t\t}\n\n\t\t\t// Validate fields. Create the variable to save the\n\t\t\t// result of the validation and set true as the default\n\t\t\t// value\n\t\t\tlet isValid = true;\n\n\t\t\t// Check if the fields are numeric and aren't empty\n\t\t\tfor ( let fieldId in fieldsValue ){\n\t\t\t\t// Check if it's empty or it's not a number\n\t\t\t\tif ( isEmpty( fieldsValue[ fieldId ] ) || isNaN( parseInt( fieldsValue[ fieldId ] ) ) ){\n\t\t\t\t\t// Update validation result\n\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t}\n\n\t\t\t\tlet fieldValue = parseInt( $fields[ fieldId ][0].value );\n\n\t\t\t\tswitch(fieldId) {\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tif (fieldValue < 2015 || fieldValue > 2100) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\tif (fieldValue === 0 || fieldValue > 12) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'day':\n\t\t\t\t\t\tif (fieldValue === 0 || fieldValue > 31) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hour':\n\t\t\t\t\t\tif ( fieldValue > 23) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'minute':\n\t\t\t\t\t\tif ( fieldValue > 59) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it's valid\n\t\t\tif ( isValid ){\n\t\t\t\t// Add loading class to the button and to the row\n\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t\t$saveButton.addClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t// Do REST call\n\t\t\t\trestCall( 'update_drip_date', data, ( response ) => {\n\t\t\t\t\t// Remove loading class from the button and to the row\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t\t\t$saveButton.removeClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t\t// On success\n\t\t\t\t\tif ( response.success ){\n\t\t\t\t\t\t// Add success class\n\t\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--success' );\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\tlet date = data.year + '-' + data.month + '-' + data.day + ' ' + data.hour + ':' + data.minute + ':00';\n\n\t\t\t\t\t\tlet timestamp = (new Date(date)).getTime();\n\t\t\t\t\t\t$row.data('sort',timestamp);\n\n\t\t\t\t\t\tthis.$elements.dataTable.draw(false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add error class\n\t\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\t\t\t\t\t\talert( 'Failed to save: ' + response.data.message );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove class after three seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000 );\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// Add error class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\n\t\t\t\t\t// Remove class after three seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000 );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Listen clicks to the remove date button\n\t\tthis.$elements.dataTable.on( 'click', '.uo-ld-group-drip__action--remove', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get button\n\t\t\tconst $removeButton = $( event.currentTarget );\n\n\t\t\t// Get row\n\t\t\tconst $row = $removeButton.closest( 'tr' );\n\n\t\t\t// Get data\n\t\t\tconst data = {\n\t\t\t\tgroup_id: $row.data( 'group' ),\n\t\t\t\tpost_id:  $row.data( 'post' ),\n\t\t\t\tcourse_id:$row.data( 'course' ),\n\n\t\t\t\taction:   'remove'\n\t\t\t}\n\n\t\t\t// Add loading class to the button and to the row\n\t\t\t$row.addClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t$removeButton.addClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t// Do REST call\n\t\t\trestCall( 'update_drip_date', data, ( response ) => {\n\t\t\t\t// Remove loading class from the button and to the row\n\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t\t$removeButton.removeClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t// On success\n\t\t\t\tif ( response.success ){\n\t\t\t\t\t// Add success class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--success' );\n\t\t\t\t\t$row.find('input').val('')\n\t\t\t\t\t$row.find('select').prop('selectedIndex', 0);\n\t\t\t\t\t$row.data('sort',0);\n\t\t\t\t\tthis.$elements.dataTable.draw(false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Add error class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\t\t\t\t}\n\n\t\t\t\t// Remove class after three seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t}, 3000 );\n\t\t\t}, ( response ) => {\n\t\t\t\t// Add error class\n\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\n\t\t\t\t// Remove class after three seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t}, 3000 );\n\t\t\t});\n\t\t});\n\t}\n\n\taddDataTables(){\n\t\t// Init DataTables\n\t\tthis.$elements.table.on( 'init.dt', function () {\n\t\t\tuoAddSwitcher();\n\t\t} );\n\n\t\tthis.$elements.dataTable = this.$elements.table.DataTable({\n\t\t\taoColumns: [\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbSearchable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbSearchable: false,\n\t\t\t\t\torderData: [ 2 ],\n\t\t\t\t\ttargets: [ 2 ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbVisible: false,\n\t\t\t\t\tsType: 'numeric',\n\t\t\t\t\ttargets: [ 1 ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: false,\n\t\t\t\t\tbVisible: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: false\n\t\t\t\t}\n\t\t\t],\n\t\t\torder: [\n\t\t\t\t[ 1, 'asc' ]\n\t\t\t],\n\t\t\tlengthMenu: [\n\t\t\t\t[ 25, 50, 100, -1 ],\n\t\t\t\t[ 25, 50, 100, UncannyToolkitPro.i18n.all ]\n\t\t\t]\n\t\t});\n\t}\n\n\thasGroupDripTable(){\n\t\treturn this.$elements.table.length > 0;\n\t}\n}\n\nexport default GroupDrip;","import {\n\trestCall,\n\tisEmpty,\n\tisDefined\n} from '../../common/js/utilities.js';\n\nclass GroupDripTopic {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Check if it has the group drip table\n\t\tif ( this.hasGroupDripTable() ){\n\t\t\t// Init DataTables in the table\n\t\t\tthis.addDataTables();\n\n\t\t\t// Listen to clicks on the buttons\n\t\t\tthis.listenActions();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\t// Get elements\n\t\tthis.$elements = {\n\t\t\ttable: $( '#uo-ld-group-drip-topic' )\n\t\t}\n\t}\n\n\tlistenActions(){\n\n\t\t// Listen clicks to the save date button\n\t\tthis.$elements.table.on( 'click', '.uo-ld-group-drip-topic__action--save', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get button\n\t\t\tconst $saveButton = $( event.currentTarget );\n\n\t\t\t// Get row\n\t\t\tconst $row = $saveButton.closest( 'tr' );\n\n\t\t\t// Remove the error class from all the fields\n\t\t\t// This is useful if the fields were invalid\n\t\t\t// but are valid now\n\t\t\t$row.find( 'input, select' ).removeClass( 'ultp-gutenberg-field--invalid' );\n\n\t\t\t// Get fields\n\t\t\tconst $fields = {\n\t\t\t\tyear:      $row.find( 'input[name=\"year\"]' ),\n\t\t\t\tmonth:     $row.find( 'select[name=\"month\"]' ),\n\t\t\t\tday:       $row.find( 'input[name=\"day\"]' ),\n\t\t\t\thour:      $row.find( 'input[name=\"hour\"]' ),\n\t\t\t\tminute:    $row.find( 'input[name=\"minute\"]' ),\n\t\t\t}\n\n\t\t\t// Get fields values\n\t\t\tconst fieldsValue = {\n\t\t\t\tyear:      $fields.year.val(),\n\t\t\t\tmonth:     $fields.month.val(),\n\t\t\t\tday:       $fields.day.val(),\n\t\t\t\thour:      $fields.hour.val(),\n\t\t\t\tminute:    $fields.minute.val(),\n\t\t\t}\n\n\t\t\t// Get data. Merge the fields value\n\t\t\tconst data = {\n\t\t\t\t...{\n\t\t\t\t\tgroup_id:  $row.data( 'group' ),\n\t\t\t\t\tpost_id:   $row.data( 'post' ),\n\t\t\t\t\tcourse_id: $row.data( 'course' ),\n\n\t\t\t\t\taction:    'save',\n\t\t\t\t},\n\t\t\t\t...fieldsValue\n\t\t\t}\n\n\t\t\t// Validate fields. Create the variable to save the\n\t\t\t// result of the validation and set true as the default\n\t\t\t// value\n\t\t\tlet isValid = true;\n\n\t\t\t// Check if the fields are numeric and aren't empty\n\t\t\tfor ( let fieldId in fieldsValue ){\n\t\t\t\t// Check if it's empty or it's not a number\n\t\t\t\tif ( isEmpty( fieldsValue[ fieldId ] ) || isNaN( parseInt( fieldsValue[ fieldId ] ) ) ){\n\t\t\t\t\t// Update validation result\n\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t}\n\n\t\t\t\tlet fieldValue = parseInt( $fields[ fieldId ][0].value );\n\n\t\t\t\tswitch(fieldId) {\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tif (fieldValue < 2015 || fieldValue > 2100) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\tif (fieldValue === 0 || fieldValue > 12) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'day':\n\t\t\t\t\t\tif (fieldValue === 0 || fieldValue > 31) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hour':\n\t\t\t\t\t\tif ( fieldValue > 23) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'minute':\n\t\t\t\t\t\tif ( fieldValue > 59) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it's valid\n\t\t\tif ( isValid ){\n\t\t\t\t// Add loading class to the button and to the row\n\t\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--loading' );\n\t\t\t\t$saveButton.addClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t// Do REST call\n\t\t\t\trestCall( 'update_drip_date_topic', data, ( response ) => {\n\t\t\t\t\t// Remove loading class from the button and to the row\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-topic-row--loading' );\n\t\t\t\t\t$saveButton.removeClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t\t// On success\n\t\t\t\t\tif ( response.success ){\n\t\t\t\t\t\t// Add success class\n\t\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--success' );\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\tlet date = data.year + '-' + data.month + '-' + data.day + ' ' + data.hour + ':' + data.minute + ':00';\n\n\t\t\t\t\t\tlet timestamp = (new Date(date)).getTime();\n\t\t\t\t\t\t$row.data('sort',timestamp);\n\n\t\t\t\t\t\tthis.$elements.dataTable.draw(false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add error class\n\t\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--error' );\n\t\t\t\t\t\talert( 'Failed to save: ' + response.data.message );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove class after three seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-topic-row--success uo-ld-group-drip-topic-row--error' );\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000 );\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// Add error class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--error' );\n\n\t\t\t\t\t// Remove class after three seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-topic-row--success uo-ld-group-drip-topic-row--error' );\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000 );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Listen clicks to the remove date button\n\t\tthis.$elements.dataTable.on( 'click', '.uo-ld-group-drip-topic__action--remove', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get button\n\t\t\tconst $removeButton = $( event.currentTarget );\n\n\t\t\t// Get row\n\t\t\tconst $row = $removeButton.closest( 'tr' );\n\n\t\t\t// Get data\n\t\t\tconst data = {\n\t\t\t\tgroup_id: $row.data( 'group' ),\n\t\t\t\tpost_id:  $row.data( 'post' ),\n\t\t\t\tcourse_id:$row.data( 'course' ),\n\n\t\t\t\taction:   'remove'\n\t\t\t}\n\n\t\t\t// Add loading class to the button and to the row\n\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--loading' );\n\t\t\t$removeButton.addClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t// Do REST call\n\t\t\trestCall( 'update_drip_date_topic', data, ( response ) => {\n\t\t\t\t// Remove loading class from the button and to the row\n\t\t\t\t$row.removeClass( 'uo-ld-group-drip-topic-row--loading' );\n\t\t\t\t$removeButton.removeClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t// On success\n\t\t\t\tif ( response.success ){\n\t\t\t\t\t// Add success class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--success' );\n\t\t\t\t\t$row.find('input').val('')\n\t\t\t\t\t$row.find('select').prop('selectedIndex', 0);\n\t\t\t\t\t$row.data('sort',0);\n\t\t\t\t\tthis.$elements.dataTable.draw(false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Add error class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--error' );\n\t\t\t\t}\n\n\t\t\t\t// Remove class after three seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-topic-row--success uo-ld-group-drip-topic-row--error' );\n\t\t\t\t}, 3000 );\n\t\t\t}, ( response ) => {\n\t\t\t\t// Add error class\n\t\t\t\t$row.addClass( 'uo-ld-group-drip-topic-row--error' );\n\n\t\t\t\t// Remove class after three seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-topic-row--success uo-ld-group-drip-topic-row--error' );\n\t\t\t\t}, 3000 );\n\t\t\t});\n\t\t});\n\t}\n\n\taddDataTables(){\n\t\t// Init DataTables\n\t\tthis.$elements.table.on( 'init.dt', function () {\n\t\t\tuoAddSwitcher();\n\t\t} );\n\n\t\tthis.$elements.dataTable = this.$elements.table.DataTable({\n\t\t\taoColumns: [\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbSearchable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbSearchable: false,\n\t\t\t\t\torderData: [ 2 ],\n\t\t\t\t\ttargets: [ 2 ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbVisible: false,\n\t\t\t\t\tsType: 'numeric',\n\t\t\t\t\ttargets: [ 1 ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: false,\n\t\t\t\t\tbVisible: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: false\n\t\t\t\t}\n\t\t\t],\n\t\t\torder: [\n\t\t\t\t[ 1, 'asc' ]\n\t\t\t],\n\t\t\tlengthMenu: [\n\t\t\t\t[ 25, 50, 100, -1 ],\n\t\t\t\t[ 25, 50, 100, UncannyToolkitPro.i18n.all ]\n\t\t\t]\n\t\t});\n\t}\n\n\thasGroupDripTable(){\n\t\treturn this.$elements.table.length > 0;\n\t}\n}\n\nexport default GroupDripTopic;\n","const TomSelect = require( 'tom-select/dist/js/tom-select.complete.js' );\n\nclass RestrictPageAccess {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Add select2 to dropdowns\n\t\tthis.initSelect2();\n\n\t\t// Listen changes to the \"Enable restrict access\" checkbox\n\t\tthis.listenChangesToEnableCheckbox();\n\n\t\t// Listen changes to the \"Redirect\" checkbox\n\t\tthis.listenChangesToRedirectCheckbox();\n\n\t\t// Listen changes to the \"Redirect to\" radios\n\t\tthis.listenChangesToRedirectTo();\n\t}\n\n\tgetElements(){\n\t\t// Get elements\n\t\tthis.$elements = {\n\t\t\tmetabox:                   $( '#ultp-restrict-access' ),\n\t\t\trestrictAccessCheckbox:    $( '#ultp-restrict-access__enable-restrict-access' ),\n\t\t\tredirectIfDefinedCheckbox: $( '#ultp-restrict-access__redirect-if-defined' ),\n\t\t\tredirectToRadio:           $( '.ultp-restrict-access__redirect-to' ),\n\t\t\tselects:                   $( '.ultp-restrict-access__option select' ),\n\t\t}\n\t}\n\n\tinitSelect2(){\n\t\t// Add select2 pillboxes to multi selects\n\t\t// this.$elements.selects.select2();\n\n\t\t$.each( this.$elements.selects, ( index, $select ) => {\n\t\t\tnew TomSelect( $select, {\n                plugins: [ 'no_active_items', 'no_backspace_delete', 'remove_button' ],\n            } );\n\t\t} );\n\t}\n\n\tlistenChangesToEnableCheckbox(){\n\t\t// Listen if the checkbox changes\n\t\tthis.$elements.restrictAccessCheckbox.on( 'change', ( event ) => {\n\t\t\t// Check if it's checked\n\t\t\tif ( this.$elements.restrictAccessCheckbox.is( ':checked' ) ){\n\t\t\t\t// Add \"enabled\" class\n\t\t\t\tthis.$elements.metabox.addClass( 'ultp-restrict-access--enabled' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove \"enabled\" class\n\t\t\t\tthis.$elements.metabox.removeClass( 'ultp-restrict-access--enabled' );\n\t\t\t}\n\t\t});\n\t}\n\n\tlistenChangesToRedirectCheckbox(){\n\t\t// Listen if the checkbox changes\n\t\tthis.$elements.redirectIfDefinedCheckbox.on( 'change', ( event ) => {\n\t\t\t// Check if it's checked\n\t\t\tif ( this.$elements.redirectIfDefinedCheckbox.is( ':checked' ) ){\n\t\t\t\t// Add \"redirect-if-denied\" class\n\t\t\t\tthis.$elements.metabox.addClass( 'ultp-restrict-access--redirect-if-denied' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove \"redirect-if-denied\" class\n\t\t\t\tthis.$elements.metabox.removeClass( 'ultp-restrict-access--redirect-if-denied' );\n\t\t\t}\n\t\t});\n\t}\n\n\tlistenChangesToRedirectTo(){\n\t\t// Listen if the checkbox changes\n\t\tthis.$elements.redirectToRadio.on( 'change', ( event ) => {\n\t\t\t// Get the selected value\n\t\t\tconst selectedValue = this.$elements.redirectToRadio.filter( ':checked' ).val();\n\n\t\t\t// Remove all the classes\n\t\t\tthis.$elements.metabox.removeClass( 'ultp-restrict-access--redirect-to-post ultp-restrict-access--redirect-to-custom_url' );\n\n\t\t\t// Add class to the metabox\n\t\t\tthis.$elements.metabox.addClass( `ultp-restrict-access--redirect-to-${ selectedValue }` );\n\t\t});\n\t}\n}\n\nexport default RestrictPageAccess;\n","import {\n\trestCall,\n\tisEmpty,\n\tisDefined\n} from '../../common/js/utilities.js';\n\nclass TryAutomator {\n\tconstructor(){\n\t\t// Get the elements\n\t\tthis.getElements();\n\n\t\t// Check if the element exists\n\t\tif ( this.$elements.tryAutomatorXIcon.length == 1 ){\n\t\t\t// Listen clicks to it\n\t\t\tthis.handleHide();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\tthis.$elements = {\n\t\t\ttryAutomatorXIcon: $( '#ultp-sidebar-try-automator-close' )\n\t\t}\n\t}\n\n\thandleHide(){\n\t\t// Listen clicks to the \"X\" icon\n\t\tthis.$elements.tryAutomatorXIcon.on( 'click', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get the row\n\t\t\tconst $itemContainer = $( event.currentTarget ).closest( '.ult-sidebar-featured-item-container' );\n\n\t\t\t// Add loading class to the row\n\t\t\t$itemContainer.addClass( 'ult-sidebar-featured-item-container--loading' );\n\n\t\t\t// Do a call to hide the row\n\t\t\trestCall( 'try-automator-visibility', {\n\t\t\t\taction: 'hide-forever'\n\t\t\t}, ( response ) => {\n\t\t\t\t// Check if the task was successful\n\t\t\t\tif ( response.success ){\n\t\t\t\t\t// Hide the row\n\t\t\t\t\t$itemContainer.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Remove the loading class to the row\n\t\t\t\t\t$itemContainer.removeClass( 'ult-sidebar-featured-item-container--loading' );\n\t\t\t\t}\n\t\t\t}, () => {\n\t\t\t\t// Remove the loading class to the row\n\t\t\t\t$itemContainer.removeClass( 'ult-sidebar-featured-item-container--loading' );\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default TryAutomator;","import {restCall} from \"../../common/js/utilities\";\n\nclass LdDripNotification {\n    constructor() {\n\n        if (this.shouldLoad()) {\n            // Listen to clicks on the buttons\n            this.listenActions();\n        }\n    }\n\n    shouldLoad() {\n        if (typeof UO_LD_Notifications_String !== 'undefined' && UO_LD_Notifications_String.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    listenActions() {\n\n        $(document).ready(function () {\n            if ((\"_ld_notifications_group_id\" in UO_LD_Notifications_String)) {\n                let $group_id = UO_LD_Notifications_String._ld_notifications_group_id;\n                if (0 !== $group_id) {\n                    $('select[name=\"_ld_notifications_group_id\"] option[value=' + $group_id + ']').prop('selected', 'selected');\n                }\n            }\n        });\n\n        // Listed Trigger\n        $('select[name=\"_ld_notifications_trigger\"]').change(function () {\n\n            // Prevent default\n            event.preventDefault();\n\n            let $trigger = $(this).val();\n            if ('group_lesson_available' !== $trigger) {\n                return;\n            }\n\n            $('select[name=\"_ld_notifications_course_id\"]').html(\n                '<option value=\"all\">' + UO_LD_Notifications_String.select_group_first + '</option>'\n            );\n        });\n\n        // Listen group ID change select\n        $('select[name=\"_ld_notifications_group_id\"]').change(function () {\n\n            // Prevent default\n            event.preventDefault();\n\n            let $group_id = $(this).val();\n            let $trigger = $('select[name=\"_ld_notifications_trigger\"]').val();\n            if ('group_lesson_available' !== $trigger) {\n                return;\n            }\n\n            const data = {\n                ...{\n                    group_id: $group_id,\n                },\n            }\n\n            restCall('get_group_courses', data, (response) => {\n                response = response.data;\n\n                $('select[name=\"_ld_notifications_course_id\"]').html(\n                    '<option value=\"\">' + UO_LD_Notifications_String.select_course + '</option>' +\n                    '<option value=\"all\">' + UO_LD_Notifications_String.all_courses + '</option>'\n                );\n\n                $.each(response, function (i, val) {\n                    $('select[name=\"_ld_notifications_course_id\"]').append('<option value=\"' + i + '\">' + val + '</option>');\n                });\n            });\n        });\n    }\n}\n\nexport default LdDripNotification;","class DownloadCertificatesInBulk {\n\tconstructor(){\n\n\t\ttry {\n\t\t\tthis.getElements();\n\t\t\tthis.getCleanUpMethod();\n\t\t\tthis.getClearMethod();\n\t\t}\n\t\tcatch ( e ){ console.log( e ); }\n\n\t}\n\n\tgetElements(){\n\t\tthis.$elements = {\n\t\t\tfilters: {\n\t\t\t\tuo_cert_cleanup: $('.uo_certificates_cleanup_btn'),\n\t\t\t\tuo_cert_success: $('#uo-download-cert-in-bulk-success'),\n\t\t\t\tuo_cert_warning: $('#uo-download-cert-in-bulk-warning'),\n\t\t\t\tuo_cert_clear: $('.uo_certificates_clear_btn'),\n\t\t\t\tuo_cert_clear_success : $('#uo-cert-in-bulk-clear-success'),\n\t\t\t\tuo_cert_clear_warning : $('#uo-cert-in-bulk-clear-warning'),\n\t\t\t}\n\t\t};\n\t}\n\n\tgetCleanUpMethod(){\n\t\tthis.$elements.filters.uo_cert_cleanup.on( 'click', ( e ) => {\n\t\t\tconsole.log('Certificates are cleaned');\n\t\t\tconst data = new FormData();\n\t\t\tfetch(UncannyToolkitPro.restURL+'uo-cleanup-certificates', {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: data\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tif( data.success === true ){\n\t\t\t\t\tthis.$elements.filters.uo_cert_success.css('display','block');\n\t\t\t\t} else {\n\t\t\t\t\tthis.$elements.filters.uo_cert_warning.css('display','block');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tgetClearMethod(){\n\t\tthis.$elements.filters.uo_cert_clear.on( 'click', ( e ) => {\n\t\t\tconst data = new FormData();\n\t\t\tfetch(UncannyToolkitPro.restURL+'uo-clear-certificates-previous-runs', {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: data\n\t\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tif( data.success === true ){\n\t\t\t\t\tthis.$elements.filters.uo_cert_clear_success.css('display','block');\n\t\t\t\t} else {\n\t\t\t\t\tthis.$elements.filters.uo_cert_clear_warning.css('display','block');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t\t});\n\t}\n\n\n}\n\nexport default DownloadCertificatesInBulk;\n","import './scss/main.scss';\n\nimport GroupDrip from './js/group-drip.js';\nimport GroupDripTopic from './js/group-drip-topic.js';\nimport RestrictPageAccess from './js/restrict-page-access.js';\nimport TryAutomator from './js/try-automator.js';\nimport LdGroupNotification from './js/ld-drip-notification.js';\nimport DownloadCertificatesInBulk from './js/download-certificates.js';\n\n// Do on DOM ready\ndocument.addEventListener( 'DOMContentLoaded', () => {\n\tnew GroupDrip();\n\tnew GroupDripTopic();\n\tnew RestrictPageAccess();\n\tnew TryAutomator();\n\tnew LdGroupNotification();\n\tnew DownloadCertificatesInBulk();\n});\n"],"names":["module","exports","forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","event_array","push","off","n","arguments","length","undefined","splice","indexOf","trigger","args","self","apply","arrayToPattern","chars","filter","Boolean","maxValueLength","join","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","Set","size","escape_regex","str","replace","reduce","longest","value","Math","max","unicodeLength","p","Array","from","allSubstrings","input","result","start","substring","subresult","tmp","slice","charAt","unshift","code_points","unicode_map","multi_char_reg","latin_convert","latin_condensed","latin","unicode","convert_pat","RegExp","Object","keys","normalize","form","asciifold","_asciifold","toLowerCase","generateSets","unicode_sets","addMatching","folded","to_add","folded_set","patt","match","add","code_point_min","code_point_max","composed","String","fromCharCode","code_point","generator","generateMap","multi_char","set","sort","a","b","multi_char_patt","substringsToPattern","min_replacement","map","sub_pat","strings","chars_replaced","mapSequence","sequencesToPattern","sequences","all","sequence","seq","len","j","substrs","inSequences","needle_seq","end","needle_parts","parts","part","needle_part","substr","Sequence","min","last","clone","position","last_piece","JSON","parse","stringify","last_part","pop","last_substr","clone_last_len","getPattern","_code_points","match_str","overlapping","added_types","has","new_seq","old_seq","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","token","weight","score","pos","regex","search","string","propToArray","key","isArray","iterate$1","object","hasOwnProperty","cmp","Sifter","items","settings","diacritics","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_flds","sort_empty","bind","get_field","id","s","fld","direction","sort_fld","optsUser","assign","trim","total","nesting","fn_score","item","_","fn_sort","limit","iterate","getDom","jquery","HTMLElement","isHtmlString","tpl","document","createElement","innerHTML","content","firstChild","querySelector","arg","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","removeClasses","remove","_classes","concat","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","refreshThrottle","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","getAttribute","addSlashes","append","parent","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","$order","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","hasAttribute","children","child","optgroup","optgroup_data","init_select","data_raw","opt","values","init_textbox","instance_i","TomSelect","Interface","super","requested","loaded","define","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","user_settings","dir","control_input","dropdown","control","dropdown_content","focus_node","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","isOpen","isDisabled","isReadOnly","isRequired","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","ignoreHover","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","refreshTimeout","tomselect","window","getComputedStyle","getPropertyValue","required","setupCallbacks","setupTemplates","_render","inputMode","setup","passive_event","passive","listboxId","role","control_id","escapeQuery","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","e","target_match","onOptionHover","capture","onOptionSelect","onItemSelect","onClick","onKeyDown","onKeyPress","onInput","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","positionDropdown","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","readOnly","setReadOnly","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","addItem","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","activeElement","advanceSelection","deleteSelection","_onInput","refreshOptions","wasFocused","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","swap","getLastActive","prototype","setActiveItemClass","removeActiveItem","last_active","idx","scroll","scrollToOption","behavior","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","hashed","triggerDropdown","k","html","has_create_option","active_group","groups","groups_order","same_query","results","active_option","show_dropdown","closest","getGroupFragment","group_order_i","order_group","fragment","group_fragment","createDocumentFragment","opt_value","opt_hash","option_el","getOption","includes","self_optgroup","$id","toString","elements","group_order","group_heading","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","data_old","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","boundFilter","clearFilter","$div","last_item","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","validity","valid","opts","empty_option","has_selected","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","selectionStart","selectionEnd","rm_items","rm_item","shouldDelete","onDelete","adjacent","nextElementSibling","moveCaret","new_pos","setLocked","setDisabled","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","orig_onOptionSelect","cbOptions","checkedClassNames","uncheckedClassNames","UpdateChecked","checkbox","toCheck","checked","UpdateCheckbox","HTMLInputElement","orig_render_option","rendered","prepend","title","button","orig_lock","orig_unlock","drag_item","sortable","orig_render_item","dragOver","moveitem","targetitem","dragitem","referenceNode","newNode","_referenceNode$parent","_newNode","isBefore","nextSibling","_referenceNode$parent2","_drag_item","headerClass","titleRowClass","labelClass","closeClass","close_link","div","orig_onBlur","relatedTarget","preventScroll","test_input","cssText","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","load_more_opt","pagination","loading_more","default_values","shouldLoadMore","scrollHeight","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearPagination","first_option","no_more_results","factory","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","definition","o","defineProperty","enumerable","get","prop","restCall","endPoint","onSuccess","onFail","$","url","UncannyToolkitPro","restURL","doing_rest","beforeSend","xhr","setRequestHeader","nonce","success","response","isDefined","statusCode","location","reload","fail","console","error","variable","isEmpty","isObject","_typeof","GroupDrip","_classCallCheck","getElements","hasGroupDripTable","addDataTables","listenActions","$elements","table","_this","$saveButton","currentTarget","$row","find","removeClass","$fields","year","month","day","hour","minute","fieldsValue","_objectSpread","group_id","post_id","course_id","action","fieldId","isNaN","parseInt","addClass","fieldValue","log","date","timestamp","Date","getTime","dataTable","draw","alert","message","$removeButton","uoAddSwitcher","DataTable","aoColumns","bSortable","bSearchable","orderData","targets","bVisible","sType","lengthMenu","i18n","GroupDripTopic","RestrictPageAccess","initSelect2","listenChangesToEnableCheckbox","listenChangesToRedirectCheckbox","listenChangesToRedirectTo","metabox","restrictAccessCheckbox","redirectIfDefinedCheckbox","redirectToRadio","selects","each","$select","is","_this2","_this3","selectedValue","TryAutomator","tryAutomatorXIcon","handleHide","$itemContainer","LdDripNotification","UO_LD_Notifications_String","ready","$group_id","_ld_notifications_group_id","change","select_group_first","select_course","all_courses","DownloadCertificatesInBulk","getCleanUpMethod","getClearMethod","filters","uo_cert_cleanup","uo_cert_success","uo_cert_warning","uo_cert_clear","uo_cert_clear_success","uo_cert_clear_warning","FormData","fetch","body","then","LdGroupNotification"],"sourceRoot":""}